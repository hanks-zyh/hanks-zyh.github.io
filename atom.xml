<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Hanks.xyz]]></title>
  <subtitle><![CDATA[coding]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://hanks.xyz/"/>
  <updated>2016-04-12T15:59:41.000Z</updated>
  <id>http://hanks.xyz/</id>
  
  <author>
    <name><![CDATA[Hanks]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[购买搬瓦工 VPS]]></title>
    <link href="http://hanks.xyz/2016/04/12/buy-vps/"/>
    <id>http://hanks.xyz/2016/04/12/buy-vps/</id>
    <published>2016-04-12T15:37:51.000Z</published>
    <updated>2016-04-12T15:59:41.000Z</updated>
    <content type="html"><![CDATA[<p>买一个搬瓦工的 <code>VPS</code> 玩玩，<a href="https://bandwagonhost.com" target="_blank" rel="external">官网</a><br><a id="more"></a><br><img src="https://dn-coding-net-production-pp.qbox.me/5bf4d6fe-80b2-4353-9c9a-e10bf5e792e5.png" alt="购买"> </p>
<p>可以使用支付宝付款，买完了在个人的目录下可以看到刚买的 VPS，然后进入控制面板。</p>
<p><img src="https://dn-coding-net-production-pp.qbox.me/fedb3081-0936-442b-9e8e-f42f6274b3ba.png" alt="进入管理中心"> </p>
<p><img src="https://dn-coding-net-production-pp.qbox.me/0cea9cc2-0dee-4722-b3c3-18cda88ec47c.png" alt="信息"></p>
<p><img src="https://dn-coding-net-production-pp.qbox.me/824487f5-7ac8-4083-91e4-1fb45f4edc1d.png" alt="安装操作系统"><br>自带的 <code>Center OS</code>，又重新装了 <code>Ubuntu</code></p>
<p>重新设置超级管理员的密码，然后使用 <code>adduser hanks</code> 添加一个 hanks 用户，然后就可以通过 <code>ssh</code> 连接了。</p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>买一个搬瓦工的 <code>VPS</code> 玩玩，<a href="https://bandwagonhost.com">官网</a><br>]]>
    
    </summary>
    
      <category term="VPS" scheme="http://hanks.xyz/tags/VPS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[开发一款 APP 要有计划哦]]></title>
    <link href="http://hanks.xyz/2016/04/10/app-need/"/>
    <id>http://hanks.xyz/2016/04/10/app-need/</id>
    <published>2016-04-10T14:37:18.000Z</published>
    <updated>2016-04-10T14:49:59.000Z</updated>
    <content type="html"><![CDATA[<p>封装一些常用类，根据项目需求确定库的选择，项目整体架构，后续扩展的考虑，组件化开发移植到其他平台的可能。</p>
<a id="more"></a>
<blockquote>
<p>下面的以<code>Android</code> 为例`</p>
</blockquote>
<h3 id="Before">Before</h3><p>产品需求文档<br>产品原型<br>设计图</p>
<h3 id="Common">Common</h3><p>Toast<br>Log<br>SharedPerference<br>Dialog<br>Time<br>Sdcard<br>File<br>Database<br>Net<br>ImageLoader<br>camera</p>
<h3 id="List">List</h3><p>Refresh<br>Load more<br>Load finish</p>
<h3 id="Common_View">Common View</h3><p>Loading<br>Empty<br>Net error</p>
<h3 id="Better">Better</h3><p>Analysis<br>CrushReport<br>PushServer<br>Share<br>Animation Interactive</p>
<h3 id="Other">Other</h3><p>git<br>android studio<br>gradle<br>ci<br>optimize</p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>封装一些常用类，根据项目需求确定库的选择，项目整体架构，后续扩展的考虑，组件化开发移植到其他平台的可能。</p>]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[开发过程的一些总结]]></title>
    <link href="http://hanks.xyz/2016/04/07/thinking-android/"/>
    <id>http://hanks.xyz/2016/04/07/thinking-android/</id>
    <published>2016-04-07T15:45:42.000Z</published>
    <updated>2016-04-10T14:56:09.000Z</updated>
    <content type="html"><![CDATA[<p>记录一些开发过程中的一些感悟。开发一个 App，如 Android，iOS，Web App 等，也就是处理两部分：<strong>界面</strong>，<strong>数据</strong>，还有比较难处理的是数据和界面元素之间的关系。</p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/08d0f516-4609-4843-a652-65513af76eab.png" alt="MacBook Air I"><br><a id="more"></a><br>一部分时间在开发界面上的东西，文本，图片，列表，如何布局，如何应用动画到各个元素。另一部分在处理数据，从服务器或者其他数据源拿到数据，中间可能经过各种协议，加密解密，这些属于后台逻辑的东西。但是这些都属于基本功，如果基本功不错的话，这两部分应该不难处理。</p>
<p>随着开发时间的累积，开发的应用开始变得复杂，界面多了起来，数据接口的个数也翻了好几倍，这个时候就需要处理数据与界面的对应关系了，考虑什么样的数据显示什么样的界面，于是要把整个应用拆分，处理数据的部分，处理界面元素的部分，还有最重要的<strong>连接数据和界面</strong>的部分。拆分过程重要的一点就是自己一定要分清各部分职责。拿一个简单的点赞按钮，对于界面部分，只处理两个状态，点过赞的状态和没有点过赞的状态，对于数据的逻辑部分，分为发送点赞请求，和取消点赞请求，可能还包含获取是否赞过的接口，然后中间的控制层拿到数据，进行一系列的逻辑处理，来控制界面的显示状态。</p>
<p>开发中理清各部分的关系，尽可能的降低耦合性，对后期维护会有很大帮助。</p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/e358e4e6-809b-407c-8604-65bcaec5f829.png" alt="MacBook iPad iPhone Vintage Camera"> </p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>记录一些开发过程中的一些感悟。开发一个 App，如 Android，iOS，Web App 等，也就是处理两部分：<strong>界面</strong>，<strong>数据</strong>，还有比较难处理的是数据和界面元素之间的关系。</p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/08d0f516-4609-4843-a652-65513af76eab.png" alt="MacBook Air I"><br>]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
      <category term="总结" scheme="http://hanks.xyz/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用 Vue.js 创建的 Calendar]]></title>
    <link href="http://hanks.xyz/2016/04/03/vuejs-calander/"/>
    <id>http://hanks.xyz/2016/04/03/vuejs-calander/</id>
    <published>2016-04-03T12:18:39.000Z</published>
    <updated>2016-04-03T12:56:28.000Z</updated>
    <content type="html"><![CDATA[<p>使用 <code>Vue.js</code> 进行数据与视图的绑定，数据更新会让视图自动进行更新，类似 <code>Android</code> 里面的 <code>DataBinding</code>。<br>实现一个 HTML的 日历效果。</p>
<p><img src="https://dn-coding-net-production-pp.qbox.me/ee3e476f-dddc-41e2-863b-f11f3691b77e.png" alt="日历"> </p>
<a id="more"></a>
<p><img src="https://dn-coding-net-production-pp.qbox.me/9a3175ce-6aea-4b39-acb2-410b9db902da.gif" alt="日历"> </p>
<p>html 部分<br><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"calendar"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 年份 月份 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"month"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">li</span> <span class="attribute">class</span>=<span class="value">"arrow"</span> @<span class="attribute">click</span>=<span class="value">"pickPre(currentYear,currentMonth)"</span>&gt;</span>❮<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">li</span> <span class="attribute">class</span>=<span class="value">"year-month"</span> @<span class="attribute">click</span>=<span class="value">"pickYear(currentYear,currentMonth)"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"choose-year"</span>&gt;</span></span><span class="expression">&#123;&#123; <span class="variable">currentYear</span> &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"choose-month"</span>&gt;</span></span><span class="expression">&#123;&#123; <span class="variable">currentMonth</span> &#125;&#125;</span><span class="xml">月<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">li</span> <span class="attribute">class</span>=<span class="value">"arrow"</span> @<span class="attribute">click</span>=<span class="value">"pickNext(currentYear,currentMonth)"</span>&gt;</span>❯<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 星期 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">ul</span> <span class="attribute">class</span>=<span class="value">"weekdays"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span>一<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span>二<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span>三<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span>四<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span>五<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span> <span class="attribute">style</span>=<span class="value">"color:red"</span>&gt;</span>六<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span> <span class="attribute">style</span>=<span class="value">"color:red"</span>&gt;</span>日<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 日期 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">ul</span> <span class="attribute">class</span>=<span class="value">"days"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span> @<span class="attribute">click</span>=<span class="value">"pick(day)"</span> <span class="attribute">v-for</span>=<span class="value">"day in days"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--本月--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">span</span> <span class="attribute">v-if</span>=<span class="value">"day.getMonth()+1 != currentMonth"</span> <span class="attribute">class</span>=<span class="value">"other-month"</span>&gt;</span></span><span class="expression">&#123;&#123; <span class="variable">day.getDate</span>() &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">span</span> <span class="attribute">v-else</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--今天--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">v-if</span>=<span class="value">"day.getFullYear() == new Date().getFullYear() &amp;&amp; day.getMonth() == new Date().getMonth() &amp;&amp; day.getDate() == new Date().getDate()"</span> <span class="attribute">class</span>=<span class="value">"active"</span>&gt;</span></span><span class="expression">&#123;&#123; <span class="variable">day.getDate</span>() &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">span</span> <span class="attribute">v-else</span>&gt;</span></span><span class="expression">&#123;&#123; <span class="variable">day.getDate</span>() &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p><code>id</code> 为 <strong>calendar</strong> 对应的创建一个 <code>Vue</code> 对象，设置 <code>el</code> 为 <strong>‘#calendar’</strong>。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">    <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el: <span class="string">'#calendar'</span>,</span><br><span class="line">        data: &#123;</span><br><span class="line">            currentDay: <span class="number">1</span>,</span><br><span class="line">            currentMonth: <span class="number">1</span>,</span><br><span class="line">            currentYear: <span class="number">1970</span>,</span><br><span class="line">            currentWeek: <span class="number">1</span>,</span><br><span class="line">            days: [],</span><br><span class="line">        &#125;,</span><br><span class="line">        created: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.initData(<span class="literal">null</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            initData: <span class="function"><span class="keyword">function</span>(<span class="params">cur</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> date;</span><br><span class="line">                <span class="keyword">if</span> (cur) &#123;</span><br><span class="line">                    date = <span class="keyword">new</span> <span class="built_in">Date</span>(cur);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">this</span>.currentDay = date.getDate();</span><br><span class="line">                <span class="keyword">this</span>.currentYear = date.getFullYear();</span><br><span class="line">                <span class="keyword">this</span>.currentMonth = date.getMonth() + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">this</span>.currentWeek = date.getDay(); <span class="comment">// 1...6,0</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">this</span>.currentWeek == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">this</span>.currentWeek = <span class="number">7</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> str = <span class="keyword">this</span>.formatDate(<span class="keyword">this</span>.currentYear , <span class="keyword">this</span>.currentMonth, <span class="keyword">this</span>.currentDay);</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"today:"</span> + str + <span class="string">","</span> + <span class="keyword">this</span>.currentWeek);</span><br><span class="line">                <span class="keyword">this</span>.days.length = <span class="number">0</span>;</span><br><span class="line">                <span class="comment">// 今天是周日，放在第一行第7个位置，前面6个</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="keyword">this</span>.currentWeek - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">                    <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>(str);</span><br><span class="line">                    d.setDate(d.getDate() - i);</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="string">"y:"</span> + d.getDate());</span><br><span class="line">                    <span class="keyword">this</span>.days.push(d);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">35</span> - <span class="keyword">this</span>.currentWeek; i++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>(str);</span><br><span class="line">                    d.setDate(d.getDate() + i);</span><br><span class="line">                    <span class="keyword">this</span>.days.push(d);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            pick: <span class="function"><span class="keyword">function</span>(<span class="params">date</span>) </span>&#123;</span><br><span class="line">                alert(<span class="keyword">this</span>.formatDate( date.getFullYear() , date.getMonth() + <span class="number">1</span>, date.getDate()));</span><br><span class="line">            &#125;,</span><br><span class="line">            pickPre: <span class="function"><span class="keyword">function</span>(<span class="params">year, month</span>) </span>&#123;</span><br><span class="line">                <span class="comment">//  setDate(0); 上月最后一天</span></span><br><span class="line">                <span class="comment">//  setDate(-1); 上月倒数第二天</span></span><br><span class="line">                <span class="comment">//  setDate(dx) 参数dx为 上月最后一天的前后dx天</span></span><br><span class="line">                <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="keyword">this</span>.formatDate(year , month , <span class="number">1</span>));</span><br><span class="line">                d.setDate(<span class="number">0</span>);</span><br><span class="line">                <span class="keyword">this</span>.initData(<span class="keyword">this</span>.formatDate(d.getFullYear(),d.getMonth() + <span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line">            &#125;,</span><br><span class="line">            pickNext: <span class="function"><span class="keyword">function</span>(<span class="params">year, month</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="keyword">this</span>.formatDate(year , month , <span class="number">1</span>));</span><br><span class="line">                d.setDate(<span class="number">35</span>);</span><br><span class="line">                <span class="keyword">this</span>.initData(<span class="keyword">this</span>.formatDate(d.getFullYear(),d.getMonth() + <span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line">            &#125;,</span><br><span class="line">            pickYear: <span class="function"><span class="keyword">function</span>(<span class="params">year, month</span>) </span>&#123;</span><br><span class="line">                alert(year + <span class="string">","</span> + month);</span><br><span class="line">            &#125;,</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 返回 类似 2016-01-02 格式的字符串</span></span><br><span class="line">            formatDate: <span class="function"><span class="keyword">function</span>(<span class="params">year,month,day</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> y  = year;</span><br><span class="line">                <span class="keyword">var</span> m = month;</span><br><span class="line">                <span class="keyword">if</span>(m&lt;<span class="number">10</span>) m = <span class="string">"0"</span> + m;</span><br><span class="line">                <span class="keyword">var</span> d = day;</span><br><span class="line">                <span class="keyword">if</span>(d&lt;<span class="number">10</span>) d = <span class="string">"0"</span> + d;</span><br><span class="line">                <span class="keyword">return</span> y+<span class="string">"-"</span>+m+<span class="string">"-"</span>+d</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>完整代码：</p>
<figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span> <span class="attribute">lang</span>=<span class="value">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"UTF-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">title</span>&gt;</span>日历<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css"></span><br><span class="line">            * <span class="rules">&#123;</span><br><span class="line">                <span class="rule"><span class="attribute">box-sizing</span>:<span class="value"> border-box</span></span>;</span><br><span class="line">            &#125;</span></span><br><span class="line">            </span><br><span class="line">            <span class="tag">ul</span> <span class="rules">&#123;</span><br><span class="line">                <span class="rule"><span class="attribute">list-style-type</span>:<span class="value"> none</span></span>;</span><br><span class="line">            &#125;</span></span><br><span class="line">            </span><br><span class="line">            <span class="tag">body</span> <span class="rules">&#123;</span><br><span class="line">                <span class="rule"><span class="attribute">font-family</span>:<span class="value"> Verdana, sans-serif</span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#E8F0F3</span></span></span>;</span><br><span class="line">            &#125;</span></span><br><span class="line">            <span class="id">#calendar</span><span class="rules">&#123;</span><br><span class="line">                <span class="rule"><span class="attribute">width</span>:<span class="value"><span class="number">80%</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span> auto</span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">box-shadow</span>:<span class="value"> <span class="number">0</span> <span class="number">2px</span> <span class="number">2px</span> <span class="number">0</span> <span class="function">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.14</span>), <span class="number">0</span> <span class="number">3px</span> <span class="number">1px</span> -<span class="number">2px</span> <span class="function">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.1</span>), <span class="number">0</span> <span class="number">1px</span> <span class="number">5px</span> <span class="number">0</span> <span class="function">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>)</span></span>;</span><br><span class="line">            &#125;</span></span><br><span class="line">            <span class="class">.month</span> <span class="rules">&#123;</span><br><span class="line">                <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">100%</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#00B8EC</span></span></span>;</span><br><span class="line">            &#125;</span></span><br><span class="line">            </span><br><span class="line">            <span class="class">.month</span> <span class="tag">ul</span> <span class="rules">&#123;</span><br><span class="line">                <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">display</span>:<span class="value"> flex</span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">justify-content</span>:<span class="value"> space-between</span></span>;</span><br><span class="line">            &#125;</span></span><br><span class="line">            </span><br><span class="line">            <span class="class">.year-month</span> <span class="rules">&#123;</span><br><span class="line">                <span class="rule"><span class="attribute">display</span>:<span class="value"> flex</span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">flex-direction</span>:<span class="value"> column</span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">align-items</span>:<span class="value"> center</span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">justify-content</span>:<span class="value"> space-around</span></span>;</span><br><span class="line">            &#125;</span></span><br><span class="line">            </span><br><span class="line">            <span class="class">.year-month</span><span class="pseudo">:hover</span> <span class="rules">&#123;</span><br><span class="line">                <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">rgba</span>(<span class="number">150</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">0.1</span>)</span></span>;</span><br><span class="line">            &#125;</span></span><br><span class="line">            </span><br><span class="line">            <span class="class">.choose-year</span> <span class="rules">&#123;</span><br><span class="line">                <span class="rule"><span class="attribute">padding-left</span>:<span class="value"> <span class="number">20px</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">padding-right</span>:<span class="value"> <span class="number">20px</span></span></span>;</span><br><span class="line">            &#125;</span></span><br><span class="line">            </span><br><span class="line">            <span class="class">.choose-month</span> <span class="rules">&#123;</span><br><span class="line">                <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">1.5rem</span></span></span>;</span><br><span class="line">            &#125;</span></span><br><span class="line">            </span><br><span class="line">            <span class="class">.arrow</span> <span class="rules">&#123;</span><br><span class="line">                <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">30px</span></span></span>;</span><br><span class="line">            &#125;</span></span><br><span class="line">            </span><br><span class="line">            <span class="class">.arrow</span><span class="pseudo">:hover</span> <span class="rules">&#123;</span><br><span class="line">                <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">rgba</span>(<span class="number">100</span>, <span class="number">2</span>, <span class="number">12</span>, <span class="number">0.1</span>)</span></span>;</span><br><span class="line">            &#125;</span></span><br><span class="line">            </span><br><span class="line">            <span class="class">.month</span> <span class="tag">ul</span> <span class="tag">li</span> <span class="rules">&#123;</span><br><span class="line">                <span class="rule"><span class="attribute">color</span>:<span class="value"> white</span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">20px</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">text-transform</span>:<span class="value"> uppercase</span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">letter-spacing</span>:<span class="value"> <span class="number">3px</span></span></span>;</span><br><span class="line">            &#125;</span></span><br><span class="line">            </span><br><span class="line">            <span class="class">.weekdays</span> <span class="rules">&#123;</span><br><span class="line">                <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">10px</span> <span class="number">0</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#00B8EC</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">display</span>:<span class="value"> flex</span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">flex-wrap</span>:<span class="value"> wrap</span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#FFFFFF</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">justify-content</span>:<span class="value"> space-around</span></span>;</span><br><span class="line">            &#125;</span></span><br><span class="line">            </span><br><span class="line">            <span class="class">.weekdays</span> <span class="tag">li</span> <span class="rules">&#123;</span><br><span class="line">                <span class="rule"><span class="attribute">display</span>:<span class="value"> inline-block</span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">13.6%</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;</span><br><span class="line">            &#125;</span></span><br><span class="line">            </span><br><span class="line">            <span class="class">.days</span> <span class="rules">&#123;</span><br><span class="line">                <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#FFFFFF</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">display</span>:<span class="value"> flex</span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">flex-wrap</span>:<span class="value"> wrap</span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">justify-content</span>:<span class="value"> space-around</span></span>;</span><br><span class="line">            &#125;</span></span><br><span class="line">            </span><br><span class="line">            <span class="class">.days</span> <span class="tag">li</span> <span class="rules">&#123;</span><br><span class="line">                <span class="rule"><span class="attribute">list-style-type</span>:<span class="value"> none</span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">display</span>:<span class="value"> inline-block</span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">14.2%</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">padding-bottom</span>:<span class="value"> <span class="number">15px</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">padding-top</span>:<span class="value"> <span class="number">15px</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">1rem</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#000</span></span></span>;</span><br><span class="line">            &#125;</span></span><br><span class="line">            </span><br><span class="line">            <span class="class">.days</span> <span class="tag">li</span> <span class="class">.active</span> <span class="rules">&#123;</span><br><span class="line">                <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">6px</span> <span class="number">10px</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">50%</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#00B8EC</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#fff</span></span></span>;</span><br><span class="line">            &#125;</span></span><br><span class="line">            </span><br><span class="line">            <span class="class">.days</span> <span class="tag">li</span> <span class="class">.other-month</span> <span class="rules">&#123;</span><br><span class="line">                <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">5px</span></span></span>;</span><br><span class="line">                <span class="rule"><span class="attribute">color</span>:<span class="value"> gainsboro</span></span>;</span><br><span class="line">            &#125;</span></span><br><span class="line">            </span><br><span class="line">            <span class="class">.days</span> <span class="tag">li</span><span class="pseudo">:hover</span> <span class="rules">&#123;</span><br><span class="line">                <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#e1e1e1</span></span></span>;</span><br><span class="line">            &#125;</span></span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h1</span>&gt;</span>CSS 日历<span class="tag">&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"calendar"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"month"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">li</span> <span class="attribute">class</span>=<span class="value">"arrow"</span> @<span class="attribute">click</span>=<span class="value">"pickPre(currentYear,currentMonth)"</span>&gt;</span>❮<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">li</span> <span class="attribute">class</span>=<span class="value">"year-month"</span> @<span class="attribute">click</span>=<span class="value">"pickYear(currentYear,currentMonth)"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"choose-year"</span>&gt;</span></span><span class="expression">&#123;&#123; <span class="variable">currentYear</span> &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"choose-month"</span>&gt;</span></span><span class="expression">&#123;&#123; <span class="variable">currentMonth</span> &#125;&#125;</span><span class="xml">月<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">li</span> <span class="attribute">class</span>=<span class="value">"arrow"</span> @<span class="attribute">click</span>=<span class="value">"pickNext(currentYear,currentMonth)"</span>&gt;</span>❯<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">ul</span> <span class="attribute">class</span>=<span class="value">"weekdays"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>一<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>二<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>三<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>四<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>五<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span> <span class="attribute">style</span>=<span class="value">"color:red"</span>&gt;</span>六<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span> <span class="attribute">style</span>=<span class="value">"color:red"</span>&gt;</span>日<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">ul</span> <span class="attribute">class</span>=<span class="value">"days"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span> @<span class="attribute">click</span>=<span class="value">"pick(day)"</span> <span class="attribute">v-for</span>=<span class="value">"day in days"</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--今天--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">v-if</span>=<span class="value">"day.getMonth()+1 != currentMonth"</span> <span class="attribute">class</span>=<span class="value">"other-month"</span>&gt;</span></span><span class="expression">&#123;&#123; <span class="variable">day.getDate</span>() &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">v-else</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--今天--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="title">span</span> <span class="attribute">v-if</span>=<span class="value">"day.getFullYear() == new Date().getFullYear() &amp;&amp; day.getMonth() == new Date().getMonth() &amp;&amp; day.getDate() == new Date().getDate()"</span> <span class="attribute">class</span>=<span class="value">"active"</span>&gt;</span></span><span class="expression">&#123;&#123; <span class="variable">day.getDate</span>() &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">v-else</span>&gt;</span></span><span class="expression">&#123;&#123; <span class="variable">day.getDate</span>() &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"http://cdnjs.cloudflare.com/ajax/libs/vue/1.0.18/vue.min.js"</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">                el: <span class="string">'#calendar'</span>,</span><br><span class="line">                data: &#123;</span><br><span class="line">                    currentDay: <span class="number">1</span>,</span><br><span class="line">                    currentMonth: <span class="number">1</span>,</span><br><span class="line">                    currentYear: <span class="number">1970</span>,</span><br><span class="line">                    currentWeek: <span class="number">1</span>,</span><br><span class="line">                    days: [],</span><br><span class="line">                &#125;,</span><br><span class="line">                created: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">this</span>.initData(<span class="literal">null</span>);</span><br><span class="line">                &#125;,</span><br><span class="line">                methods: &#123;</span><br><span class="line">                    initData: <span class="function"><span class="keyword">function</span>(<span class="params">cur</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">var</span> date;</span><br><span class="line">                        <span class="keyword">if</span> (cur) &#123;</span><br><span class="line">                            date = <span class="keyword">new</span> <span class="built_in">Date</span>(cur);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">this</span>.currentDay = date.getDate();</span><br><span class="line">                        <span class="keyword">this</span>.currentYear = date.getFullYear();</span><br><span class="line">                        <span class="keyword">this</span>.currentMonth = date.getMonth() + <span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">this</span>.currentWeek = date.getDay(); <span class="comment">// 1...6,0</span></span><br><span class="line">                        <span class="keyword">if</span> (<span class="keyword">this</span>.currentWeek == <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="keyword">this</span>.currentWeek = <span class="number">7</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">var</span> str = <span class="keyword">this</span>.formatDate(<span class="keyword">this</span>.currentYear , <span class="keyword">this</span>.currentMonth, <span class="keyword">this</span>.currentDay);</span><br><span class="line">                        <span class="built_in">console</span>.log(<span class="string">"today:"</span> + str + <span class="string">","</span> + <span class="keyword">this</span>.currentWeek);</span><br><span class="line">                        <span class="keyword">this</span>.days.length = <span class="number">0</span>;</span><br><span class="line">                        <span class="comment">// 今天是周日，放在第一行第7个位置，前面6个</span></span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="keyword">this</span>.currentWeek - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">                            <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>(str);</span><br><span class="line">                            d.setDate(d.getDate() - i);</span><br><span class="line">                            <span class="built_in">console</span>.log(<span class="string">"y:"</span> + d.getDate());</span><br><span class="line">                            <span class="keyword">this</span>.days.push(d);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">35</span> - <span class="keyword">this</span>.currentWeek; i++) &#123;</span><br><span class="line">                            <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>(str);</span><br><span class="line">                            d.setDate(d.getDate() + i);</span><br><span class="line">                            <span class="keyword">this</span>.days.push(d);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    pick: <span class="function"><span class="keyword">function</span>(<span class="params">date</span>) </span>&#123;</span><br><span class="line">                        alert(<span class="keyword">this</span>.formatDate( date.getFullYear() , date.getMonth() + <span class="number">1</span>, date.getDate()));</span><br><span class="line">                    &#125;,</span><br><span class="line">                    pickPre: <span class="function"><span class="keyword">function</span>(<span class="params">year, month</span>) </span>&#123;</span><br><span class="line">                        <span class="comment">//  setDate(0); 上月最后一天</span></span><br><span class="line">                        <span class="comment">//  setDate(-1); 上月倒数第二天</span></span><br><span class="line">                        <span class="comment">//  setDate(dx) 参数dx为 上月最后一天的前后dx天</span></span><br><span class="line">                        <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="keyword">this</span>.formatDate(year , month , <span class="number">1</span>));</span><br><span class="line">                        d.setDate(<span class="number">0</span>);</span><br><span class="line">                        <span class="keyword">this</span>.initData(<span class="keyword">this</span>.formatDate(d.getFullYear(),d.getMonth() + <span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line">                    &#125;,</span><br><span class="line">                    pickNext: <span class="function"><span class="keyword">function</span>(<span class="params">year, month</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="keyword">this</span>.formatDate(year , month , <span class="number">1</span>));</span><br><span class="line">                        d.setDate(<span class="number">35</span>);</span><br><span class="line">                        <span class="keyword">this</span>.initData(<span class="keyword">this</span>.formatDate(d.getFullYear(),d.getMonth() + <span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line">                    &#125;,</span><br><span class="line">                    pickYear: <span class="function"><span class="keyword">function</span>(<span class="params">year, month</span>) </span>&#123;</span><br><span class="line">                        alert(year + <span class="string">","</span> + month);</span><br><span class="line">                    &#125;,</span><br><span class="line">                    </span><br><span class="line">                    <span class="comment">// 返回 类似 2016-01-02 格式的字符串</span></span><br><span class="line">                    formatDate: <span class="function"><span class="keyword">function</span>(<span class="params">year,month,day</span>)</span>&#123;</span><br><span class="line">                        <span class="keyword">var</span> y  = year;</span><br><span class="line">                        <span class="keyword">var</span> m = month;</span><br><span class="line">                        <span class="keyword">if</span>(m&lt;<span class="number">10</span>) m = <span class="string">"0"</span> + m;</span><br><span class="line">                        <span class="keyword">var</span> d = day;</span><br><span class="line">                        <span class="keyword">if</span>(d&lt;<span class="number">10</span>) d = <span class="string">"0"</span> + d;</span><br><span class="line">                        <span class="keyword">return</span> y+<span class="string">"-"</span>+m+<span class="string">"-"</span>+d</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>使用 <code>Vue.js</code> 进行数据与视图的绑定，数据更新会让视图自动进行更新，类似 <code>Android</code> 里面的 <code>DataBinding</code>。<br>实现一个 HTML的 日历效果。</p>
<p><img src="https://dn-coding-net-production-pp.qbox.me/ee3e476f-dddc-41e2-863b-f11f3691b77e.png" alt="日历"> </p>]]>
    
    </summary>
    
      <category term="HTML/CSS" scheme="http://hanks.xyz/tags/HTML-CSS/"/>
    
      <category term="Vue.js" scheme="http://hanks.xyz/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[学习 Jade]]></title>
    <link href="http://hanks.xyz/2016/03/29/learn-jade/"/>
    <id>http://hanks.xyz/2016/03/29/learn-jade/</id>
    <published>2016-03-29T14:13:38.000Z</published>
    <updated>2016-03-29T15:32:32.000Z</updated>
    <content type="html"><![CDATA[<p>优秀的模板引擎 <code>Jade</code> ，减少写代码，提高可读性，提高生活质量。。。</p>
<a id="more"></a>
<h2 id="为什么需要_Jade_？">为什么需要 Jade ？</h2><p>减少写代码，提高可读性，提高生活质量。。。</p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/8ca2aa51-11a2-4ae7-ab3e-671fc10629d1.png" alt="html">  </p>
<p>这一层一层的。。。</p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/82be566f-3cde-441b-87be-e6d2f028e48b.png" alt="图片"> </p>
<p>看 <code>jade</code> 的这个拼接。</p>
<p>Jade 优点： </p>
<ul>
<li>超强的可读性</li>
<li>灵活的缩进</li>
<li>块扩展</li>
<li>代码默认经过编码处理以增强安全性</li>
<li>编译及运行时的上下文错误报告</li>
<li>命令行的编译支持</li>
<li>HTML5 模式</li>
<li>可选的内存缓存</li>
<li>利用过滤器解析树的处理</li>
</ul>
<p>后面说的什么鬼其实我也不懂，但是最大优点: <strong>超强的可读性</strong>，<strong>提升开发效率</strong>。</p>
<p>需要 Node.js 环境， 没有装的可以参考<a href="http://hanks.xyz/2016/03/17/mac-node-config/">Mac 上配置 Node.js 环境</a></p>
<h2 id="安装_Jade">安装 Jade</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过 npm 安装 jade</span></span><br><span class="line">$ npm <span class="keyword">install</span> jade -g</span><br></pre></td></tr></table></figure>
<h2 id="开始使用">开始使用</h2><p>创建 <code>index.jade</code> 文件</p>
<p><code>index.jade</code><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">doctype <span class="tag">html</span></span><br><span class="line"><span class="tag">html</span></span><br><span class="line">  head</span><br><span class="line">    title hanks<span class="class">.xyz</span></span><br><span class="line">  <span class="tag">body</span></span><br><span class="line">    <span class="tag">p</span> welcome to hanks.xyz</span><br></pre></td></tr></table></figure></p>
<p>就是这么简单，下面开始将 <code>jade</code> 文件渲染为 <code>html</code> 文件<br><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ jade <span class="keyword">index</span>.jade</span><br></pre></td></tr></table></figure></p>
<p>html:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span><span class="tag">&lt;<span class="title">html</span>&gt;</span><span class="tag">&lt;<span class="title">head</span>&gt;</span><span class="tag">&lt;<span class="title">title</span>&gt;</span>hanks.xyz<span class="tag">&lt;/<span class="title">title</span>&gt;</span><span class="tag">&lt;/<span class="title">head</span>&gt;</span><span class="tag">&lt;<span class="title">body</span>&gt;</span><span class="tag">&lt;<span class="title">p</span>&gt;</span>welcome to hanks.xyz<span class="tag">&lt;/<span class="title">p</span>&gt;</span><span class="tag">&lt;/<span class="title">body</span>&gt;</span><span class="tag">&lt;/<span class="title">html</span>&gt;</span>%</span><br></pre></td></tr></table></figure></p>
<p>可以看到渲染出来的 <code>index.html</code> 文件是经过压缩过的。我们可以加速 <code>-P</code> 参数格式化渲染的 <code>index.html</code></p>
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ jade -P <span class="keyword">index</span>.jade</span><br></pre></td></tr></table></figure>
<p>html:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span>hanks.xyz<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">p</span>&gt;</span>welcome to hanks.xyz<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>还可以加上 <code>-w</code> 参数监听 jade 文件的变化，自动渲染刷新 html 文件</p>
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ jade -P -w <span class="keyword">index</span>.jade</span><br></pre></td></tr></table></figure>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/62b171d5-8d4d-45e6-9d55-e40ffacb5140.gif" alt="动态渲染"> </p>
<h2 id="基本语法">基本语法</h2><h3 id="标签">标签</h3><p>默认，每行开始的<strong>第一个单词</strong>代表一个标签，可以是自定义的标签<br>jade:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">p</span> welcome to hanks<span class="class">.xyz</span></span><br><span class="line"><span class="tag">h1</span> <span class="tag">h1</span> 标题</span><br><span class="line"><span class="tag">h2</span> <span class="tag">h2</span> 标题</span><br></pre></td></tr></table></figure></p>
<p>html:<br><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">&lt;p&gt;</span>welcome <span class="keyword">to</span> hanks.xyz<span class="variable">&lt;/p&gt;</span></span><br><span class="line"><span class="variable">&lt;h1&gt;</span>h1 标题<span class="variable">&lt;/h1&gt;</span></span><br><span class="line"><span class="variable">&lt;h2&gt;</span>h2 标题<span class="variable">&lt;/h2&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>使用<strong>缩进</strong>代表标签嵌套关系</p>
<p>jade:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">div</span><span class="class">.title</span></span><br><span class="line">  <span class="tag">h1</span> title2</span><br><span class="line">  <span class="tag">p</span>  something</span><br><span class="line"><span class="tag">div</span></span><br><span class="line">  <span class="tag">div</span></span><br><span class="line">    <span class="tag">div</span>.<span class="function"><span class="title">info</span><span class="params">(name=<span class="string">"hanks"</span>)</span></span></span><br></pre></td></tr></table></figure></p>
<p>html:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">h1</span>&gt;</span>title2<span class="tag">&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">p</span>&gt;</span> something<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">name</span>=<span class="value">"hanks"</span> <span class="attribute">class</span>=<span class="value">"info"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="class_和_id">class 和 id</h3><p>jade:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">h1</span><span class="class">.title</span></span><br><span class="line">h2<span class="id">#title</span></span><br><span class="line"><span class="id">#t_id</span></span><br><span class="line"><span class="id">#t_id</span>.title</span><br></pre></td></tr></table></figure></p>
<p>html:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">h1</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span><span class="tag">&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">h2</span> <span class="attribute">id</span>=<span class="value">"title"</span>&gt;</span><span class="tag">&lt;/<span class="title">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"t_id"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"t_id"</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>﻿### 属性</p>
<p>jade:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">a</span><span class="params">(herf=<span class="string">"http://hanks.xyz"</span>)</span></span> hanks<span class="class">.xyz</span></span><br><span class="line">input#<span class="function"><span class="title">username</span><span class="params">(name=<span class="string">"username"</span>,type=<span class="string">"text"</span>,vaule=<span class="string">"jade"</span>)</span></span></span><br></pre></td></tr></table></figure></p>
<p>html:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">a</span> <span class="attribute">herf</span>=<span class="value">"http://hanks.xyz"</span>&gt;</span>hanks.xyz<span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"username"</span> <span class="attribute">name</span>=<span class="value">"username"</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">vaule</span>=<span class="value">"jade"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="Plain_Text">Plain Text</h3><p>jade:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">p</span>.</span><br><span class="line">  <span class="number">1</span><span class="class">.aa</span></span><br><span class="line">  <span class="number">2</span><span class="class">.vv</span></span><br><span class="line">  <span class="number">3</span>.cc</span><br></pre></td></tr></table></figure></p>
<p>html:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">p</span>&gt;</span></span><br><span class="line">  1.aa</span><br><span class="line">  2.vv</span><br><span class="line">  3.cc</span><br><span class="line"><span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>注意 <code>p</code> 标签后面紧跟着一个 <code>.</code></p>
<p>jade:<br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">p.</span><br><span class="line">  1.aa<span class="variable">&lt;strong&gt;</span>AA<span class="variable">&lt;/strong&gt;</span></span><br><span class="line">  2.vv</span><br><span class="line">  3.cc</span><br><span class="line">p</span><br><span class="line">  |<span class="string"> 1.aa</span><br><span class="line">  strong AA</span><br><span class="line">  </span>|<span class="string"> 2.vv</span><br><span class="line">  </span>|<span class="string"> 3.cc</span></span><br></pre></td></tr></table></figure></p>
<p>html:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">p</span>&gt;</span></span><br><span class="line">  1.aa<span class="tag">&lt;<span class="title">strong</span>&gt;</span>AA<span class="tag">&lt;/<span class="title">strong</span>&gt;</span></span><br><span class="line">  2.vv</span><br><span class="line">  3.cc</span><br><span class="line"><span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">p</span>&gt;</span>1.aa<span class="tag">&lt;<span class="title">strong</span>&gt;</span>AA<span class="tag">&lt;/<span class="title">strong</span>&gt;</span>2.vv</span><br><span class="line">  3.cc</span><br><span class="line"><span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="注释">注释</h3><p>jade:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">div</span></span><br><span class="line">  <span class="comment">// h1 单行注释，输出到源文件</span></span><br><span class="line">  <span class="comment">//- h3 非缓冲注释</span></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">    这是一个</span><br><span class="line">    多行注释</span><br></pre></td></tr></table></figure></p>
<p>html:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- h1 单行注释，输出到源文件--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--</span><br><span class="line">  这是一个</span><br><span class="line">  多行注释</span><br><span class="line">  --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>jade 使用双斜线 <code>//</code>进行单行注释；<br>如果不想让注释的内容显示到生成的 html 代码中，可以在双斜线 <code>//</code> 后跟一个单横线<code>-</code>；<br>双斜线 <code>//</code> 后面的注释内容换行并缩进可进行块级注释</p>
<p>参考文章：<br><a href="http://blog.jayself.com/2014/07/28/Jade/" target="_blank" rel="external">Jade中文教程</a><br><a href="http://www.imooc.com/learn/259" target="_blank" rel="external">慕课网视频-带你学习Jade模板引擎</a></p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>优秀的模板引擎 <code>Jade</code> ，减少写代码，提高可读性，提高生活质量。。。</p>]]>
    
    </summary>
    
      <category term="Jade" scheme="http://hanks.xyz/tags/Jade/"/>
    
      <category term="学习" scheme="http://hanks.xyz/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac 上利用 launchctl 开启定时任务]]></title>
    <link href="http://hanks.xyz/2016/03/28/mac-launchctl/"/>
    <id>http://hanks.xyz/2016/03/28/mac-launchctl/</id>
    <published>2016-03-28T14:44:35.000Z</published>
    <updated>2016-03-28T15:08:54.000Z</updated>
    <content type="html"><![CDATA[<p>前几天写了 <code>Python</code> 脚本进行爬虫，现在利用 <code>launchctl</code> 来定时开启爬虫任务，<code>launchctl</code> 通过 <code>plist</code> 属性列表（Property List）配置。<code>Linux</code> 和 <code>Mac</code> 通用的 <code>crontab</code> 时间间隔可以精确到分钟，而<code>launchctl</code> 时间间隔可以精确到<strong>每秒</strong>。<br><a id="more"></a></p>
<h2 id="创建定时运行的任务脚本">创建定时运行的任务脚本</h2><p><code>run.sh</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="shebang">#!/bin/bash</span><br><span class="line"></span></span><br><span class="line"><span class="comment"># 记录一下开始时间</span></span><br><span class="line"><span class="built_in">echo</span> `date` &gt;&gt; <span class="variable">$HOME</span>/<span class="built_in">log</span> &amp;&amp;</span><br><span class="line"><span class="comment"># 进入 /Users/hanks/spider 目录</span></span><br><span class="line"><span class="built_in">cd</span> /Users/hanks/spider &amp;&amp;</span><br><span class="line"><span class="comment"># 激活 python 虚拟环境 virtualenv</span></span><br><span class="line"><span class="built_in">source</span> venv/bin/activate &amp;&amp;</span><br><span class="line"><span class="comment"># 运行爬虫脚本</span></span><br><span class="line">scrapy runspider spider.py &amp;&amp;</span><br><span class="line"><span class="comment"># 运行完成</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'finish'</span> &gt;&gt; <span class="variable">$HOME</span>/<span class="built_in">log</span></span><br></pre></td></tr></table></figure></p>
<p><code>&amp;&amp;</code> 连接两条命令，当前一条执行完才会继续下一条命令。</p>
<h2 id="创建定时任务文件">创建定时任务文件</h2><p><code>task.plsit</code></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="doctype">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">plist</span> <span class="attribute">version</span>=<span class="value">"1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">dict</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">key</span>&gt;</span>Label<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span>&gt;</span>xyz.hanks.spider<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 要运行的程序， 如果省略这个选项，会把ProgramArguments的第一个</span><br><span class="line">    元素作为要运行的程序 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">key</span>&gt;</span>Program<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span>&gt;</span>/Users/zhanks/work/Bookshelf/run.sh<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 每天18：30 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">key</span>&gt;</span>StartCalendarInterval<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">dict</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">key</span>&gt;</span>Minute<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">integer</span>&gt;</span>30<span class="tag">&lt;/<span class="title">integer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">key</span>&gt;</span>Hour<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">integer</span>&gt;</span>18<span class="tag">&lt;/<span class="title">integer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">dict</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 运行间隔，与StartCalenderInterval使用其一，单位为&gt;秒 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;key&gt;StartInterval&lt;/key&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- integer&gt;5&lt;/integer&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 标准错误输出文件，错误日志 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">key</span>&gt;</span>StandardErrorPath<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span>&gt;</span>/Users/zhanks/run-err.log<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="title">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">plist</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="将定时任务加入系统">将定时任务加入系统</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加载 task.plist</span></span><br><span class="line"><span class="variable">$ </span>launchctl load task.plist</span><br></pre></td></tr></table></figure>
<p>查看是否添加成功<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ launchctl <span class="built_in">list</span> | grep hanks</span><br><span class="line">-	<span class="number">0</span>	xyz.hanks.spider</span><br></pre></td></tr></table></figure></p>
<p>如果像移除的话</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 移除 xyz.hanks.spider</span></span><br><span class="line">$ launchctl <span class="keyword">remove</span> xyz.hanks.spider</span><br></pre></td></tr></table></figure>
<p>其他完整的 plist 文件格式参数。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>  </span><br><span class="line"><span class="doctype">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="title">plist</span> <span class="attribute">version</span>=<span class="value">"1.0"</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="title">dict</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">key</span>&gt;</span>Label<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 名称，要全局唯一 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span>&gt;</span>xyz.hanks.spider<span class="tag">&lt;/<span class="title">string</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 要运行的程序， 如果省略这个选项，会把ProgramArguments的第一个</span><br><span class="line">    元素作为要运行的程序 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">key</span>&gt;</span>Program<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span>&gt;</span>/Users/hanks/run.sh<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 命令， 第一个为命令，其它为参数--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">key</span>&gt;</span>ProgramArguments<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">array</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">string</span>&gt;</span>/Users/hanks/run.sh<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">array</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 运行时间 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">key</span>&gt;</span>StartCalendarInterval<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">dict</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="title">key</span>&gt;</span>Minute<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">integer</span>&gt;</span>30<span class="tag">&lt;/<span class="title">integer</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="title">key</span>&gt;</span>Hour<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">integer</span>&gt;</span>9<span class="tag">&lt;/<span class="title">integer</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="title">key</span>&gt;</span>Day<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">integer</span>&gt;</span>1<span class="tag">&lt;/<span class="title">integer</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="title">key</span>&gt;</span>Month<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">integer</span>&gt;</span>5<span class="tag">&lt;/<span class="title">integer</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- 0和7都指星期天 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">key</span>&gt;</span>Weekday<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">integer</span>&gt;</span>0<span class="tag">&lt;/<span class="title">integer</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="title">dict</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 运行间隔，与StartCalenderInterval使用其一，单位为秒 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">key</span>&gt;</span>StartInterval<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">integer</span>&gt;</span>30<span class="tag">&lt;/<span class="title">integer</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 标准输入文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">key</span>&gt;</span>StandardInPath<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span>&gt;</span>/Users/hanks/run-in.log<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 标准输出文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">key</span>&gt;</span>StandardOutPath<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span>&gt;</span>/Users/hanks/run-out.log<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 标准错误输出文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">key</span>&gt;</span>StandardErrorPath<span class="tag">&lt;/<span class="title">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span>&gt;</span>/Users/hanks/run-err.log<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">dict</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="title">plist</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>Linux</code> 和 <code>Mac</code> 通用的 <code>crontab</code> 定时任务: <a href="http://linuxtools-rst.readthedocs.org/zh_CN/latest/tool/crontab.html" target="_blank" rel="external">crontab 定时任务</a></p>
<p>参考文档<br><a href="http://blog.csdn.net/lgt633744/article/details/45932035" target="_blank" rel="external">Mac下添加定时任务</a></p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>前几天写了 <code>Python</code> 脚本进行爬虫，现在利用 <code>launchctl</code> 来定时开启爬虫任务，<code>launchctl</code> 通过 <code>plist</code> 属性列表（Property List）配置。<code>Linux</code> 和 <code>Mac</code> 通用的 <code>crontab</code> 时间间隔可以精确到分钟，而<code>launchctl</code> 时间间隔可以精确到<strong>每秒</strong>。<br>]]>
    
    </summary>
    
      <category term="Mac" scheme="http://hanks.xyz/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[一张图让开发人员理解色相、亮度、饱和度]]></title>
    <link href="http://hanks.xyz/2016/03/26/color-board/"/>
    <id>http://hanks.xyz/2016/03/26/color-board/</id>
    <published>2016-03-26T04:06:26.000Z</published>
    <updated>2016-03-26T04:47:15.000Z</updated>
    <content type="html"><![CDATA[<p>作为开发人员经常需要和设计师合（si）作（bi）,虽然设计师给的设计图上给出了颜色，但是有时候会对你说，“这个颜色的 <code>饱和度</code>不够，你再增加一点”，天呐，我可不懂什么是饱和度。<br>还有 <code>色相</code>、<code>亮度</code>、<code>饱和度</code>、<code>透明度</code>（这个还是理解的）等名词。</p>
<p><strong>色相</strong> ：就是颜色的主色调，比如红、绿、蓝。<br><strong>亮度</strong> ：就是颜色的明暗，就好比你再明亮的光线下看一个红色的纸板很昏暗的光线下看红色纸板那种感觉。<br><strong>饱和度</strong> ：就是颜色的鲜艳程度，饱和度越大，看起来越鲜艳。</p>
<a id="more"></a>
<p>下图是 Android Studio 自带的调色板：<br> <img src="https://dn-coding-net-production-pp.qbox.me/7f817dcb-4265-412e-a3af-3c2551893a74.png" alt="调色板"> </p>
<h3 id="调色相">调色相</h3><p> <img src="https://dn-coding-net-production-pp.qbox.me/1901db88-656f-4799-8c54-62aef45344bd.gif" alt="色相"> </p>
<h3 id="调整亮度">调整亮度</h3><p> <img src="https://dn-coding-net-production-pp.qbox.me/c1d994d9-a540-4ada-88a1-e01046a4a427.gif" alt="亮度"> </p>
<h3 id="调整饱和度">调整饱和度</h3><p> <img src="https://dn-coding-net-production-pp.qbox.me/71714b55-9929-4006-b7f6-cb972f15eba5.gif" alt="饱和度"> </p>
<h3 id="RGB_模式和_CMYK_模式">RGB 模式和 CMYK 模式</h3><p>RGB： red  green blue ， 三原色很好理解<br>CMYK： 印刷四分色模式 ，使用这种模式的颜色都可以被打印出来（rgb模式下有的饱和度大的不能被打印出来）。</p>
<p>  <img src="https://dn-coding-net-production-pp.qbox.me/f4821853-6867-44e1-a0d5-e6a872f72e62.png" alt="RGB 和 CMYK"> </p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>作为开发人员经常需要和设计师合（si）作（bi）,虽然设计师给的设计图上给出了颜色，但是有时候会对你说，“这个颜色的 <code>饱和度</code>不够，你再增加一点”，天呐，我可不懂什么是饱和度。<br>还有 <code>色相</code>、<code>亮度</code>、<code>饱和度</code>、<code>透明度</code>（这个还是理解的）等名词。</p>
<p><strong>色相</strong> ：就是颜色的主色调，比如红、绿、蓝。<br><strong>亮度</strong> ：就是颜色的明暗，就好比你再明亮的光线下看一个红色的纸板很昏暗的光线下看红色纸板那种感觉。<br><strong>饱和度</strong> ：就是颜色的鲜艳程度，饱和度越大，看起来越鲜艳。</p>]]>
    
    </summary>
    
      <category term="设计" scheme="http://hanks.xyz/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Scrapy 抓取 Mediuem 网站 Android 标签下的文章]]></title>
    <link href="http://hanks.xyz/2016/03/21/scrapy-mediuem-android/"/>
    <id>http://hanks.xyz/2016/03/21/scrapy-mediuem-android/</id>
    <published>2016-03-20T16:22:38.000Z</published>
    <updated>2016-03-20T16:35:37.000Z</updated>
    <content type="html"><![CDATA[<p>前面实现了对 <strong><a href="http://hanks.xyz/2016/03/19/scrapy-jianshu-it/">简书上面的程序员专题抓取文章</a></strong>， 接下来开始 <strong><a href="https://medium.com/tag/android" target="_blank" rel="external">Medium</a></strong> 网站的 <code>Android</code> 标签的文章。</p>
<a id="more"></a>
<p><code>medium_spider.py</code> 代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MediumSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""docstring for MediumSpider"""</span></span><br><span class="line"></span><br><span class="line">    name = <span class="string">"mediumspider"</span></span><br><span class="line"></span><br><span class="line">    start_urls = [<span class="string">"https://medium.com/tag/android"</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> postitem <span class="keyword">in</span> response.css(<span class="string">'.postItem'</span>):</span><br><span class="line">            url = postitem.css(<span class="string">'article a::attr(href)'</span>).extract()[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">            <span class="comment"># get title</span></span><br><span class="line">            <span class="keyword">if</span> len( postitem.css(<span class="string">'article h2::text'</span>).extract() ) != <span class="number">0</span> :</span><br><span class="line">                title = postitem.css(<span class="string">'article h2::text'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">elif</span> len( postitem.css(<span class="string">'article h3::text'</span>).extract() ) != <span class="number">0</span> :</span><br><span class="line">                title = postitem.css(<span class="string">'article h3::text'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">elif</span> len( postitem.css(<span class="string">'article h4::text'</span>).extract()) != <span class="number">0</span> :</span><br><span class="line">                title = postitem.css(<span class="string">'article h4::text'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                 title = <span class="string">"Error get title"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment"># get subtitle</span></span><br><span class="line">            <span class="keyword">if</span> len( postitem.css(<span class="string">'.section-inner h4::text'</span>).extract()) != <span class="number">0</span> :</span><br><span class="line">                subtitle = postitem.css(<span class="string">'.section-inner h4::text'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">elif</span> len( postitem.css(<span class="string">'.section-inner p::text'</span>).extract()) != <span class="number">0</span> :</span><br><span class="line">                subtitle = postitem.css(<span class="string">'.section-inner p::text'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                subtitle = <span class="string">"No subtitle"</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">yield</span> &#123;</span><br><span class="line">                <span class="string">"title"</span>:title,</span><br><span class="line">                <span class="string">"subtitle"</span>:subtitle,</span><br><span class="line">                <span class="string">"url"</span>:url,</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure>
<p>运行 <code>scrapy runspider medium_spider.py -o res.json</code> ，并且导出 <code>json</code>文件。<br><code>res.json</code></p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        "<span class="attribute">url</span>": <span class="value"><span class="string">"https://medium.com/sebs-top-tips/analyse-data-flows-without-the-debugger-android-studio-protips-3-ef2885aaffd9?source=tags---------1"</span></span>,</span><br><span class="line">        "<span class="attribute">subtitle</span>": <span class="value"><span class="string">"Did you know that you can figure…"</span></span>,</span><br><span class="line">        "<span class="attribute">title</span>": <span class="value"><span class="string">"Analyse data flows without the debugger (Android Studio protips #3)"</span></span><br><span class="line">    </span>&#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        "<span class="attribute">url</span>": <span class="value"><span class="string">"https://medium.com/imgur-engineering/design-at-imgur-from-188-colors-to-12-bb6a1a8a26d9?source=tags---------2"</span></span>,</span><br><span class="line">        "<span class="attribute">subtitle</span>": <span class="value"><span class="string">"Let’s take a little look back in time, through the history of Imgur. In 2009, Imgur started…"</span></span>,</span><br><span class="line">        "<span class="attribute">title</span>": <span class="value"><span class="string">"Design at Imgur: From 188 Colors to 12"</span></span><br><span class="line">    </span>&#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        "<span class="attribute">url</span>": <span class="value"><span class="string">"https://medium.com/@raveeshbhalla/android-n-notifications-a-design-analysis-cec09f1cc5bf?source=tags---------3"</span></span>,</span><br><span class="line">        "<span class="attribute">subtitle</span>": <span class="value"><span class="string">"It’s been a few days since Google surprised us all by releasing a developer preview for Android N, more than two months before Google I/O. As "</span></span>,</span><br><span class="line">        "<span class="attribute">title</span>": <span class="value"><span class="string">"Android N Notifications: A Design Analysis"</span></span><br><span class="line">    </span>&#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        "<span class="attribute">url</span>": <span class="value"><span class="string">"https://medium.com/@shollmann/picasso-universal-image-loader-or-glide-that-s-the-question-af34fa7f5e63?source=tags---------4"</span></span>,</span><br><span class="line">        "<span class="attribute">subtitle</span>": <span class="value"><span class="string">"No subtitle"</span></span>,</span><br><span class="line">        "<span class="attribute">title</span>": <span class="value"><span class="string">"Error get title"</span></span><br><span class="line">    </span>&#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        "<span class="attribute">url</span>": <span class="value"><span class="string">"https://medium.com/@cesarmcferreira/building-android-apps-30-things-that-experience-made-me-learn-the-hard-way-313680430bf9?source=tags---------5"</span></span>,</span><br><span class="line">        "<span class="attribute">subtitle</span>": <span class="value"><span class="string">"No subtitle"</span></span>,</span><br><span class="line">        "<span class="attribute">title</span>": <span class="value"><span class="string">"Building Android Apps — 30 things that experience made me learn the hard way"</span></span><br><span class="line">    </span>&#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        "<span class="attribute">url</span>": <span class="value"><span class="string">"https://medium.com/@hitherejoe/android-n-introducing-picture-in-picture-for-android-tv-35f2392fb609?source=tags---------6"</span></span>,</span><br><span class="line">        "<span class="attribute">subtitle</span>": <span class="value"><span class="string">"Last week we saw the surprise release of the…"</span></span>,</span><br><span class="line">        "<span class="attribute">title</span>": <span class="value"><span class="string">"Android N: Introducing Picture-in-Picture for Android TV"</span></span><br><span class="line">    </span>&#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        "<span class="attribute">url</span>": <span class="value"><span class="string">"https://medium.com/@nielsz/android-quality-with-mvp-espresso-junit-jacoco-and-sonarqube-3430d9ee4a4a?source=tags---------7"</span></span>,</span><br><span class="line">        "<span class="attribute">subtitle</span>": <span class="value"><span class="string">"In my "</span></span>,</span><br><span class="line">        "<span class="attribute">title</span>": <span class="value"><span class="string">"Android Quality with MVP, Espresso, JUnit, JaCoCo and SonarQube"</span></span><br><span class="line">    </span>&#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        "<span class="attribute">url</span>": <span class="value"><span class="string">"https://labs.ribot.co.uk/android-application-architecture-8b6e34acda65?source=tags---------8"</span></span>,</span><br><span class="line">        "<span class="attribute">subtitle</span>": <span class="value"><span class="string">"Our journey from standard Activities and AsyncTasks to a modern MVP-based architecture powered by RxJava."</span></span>,</span><br><span class="line">        "<span class="attribute">title</span>": <span class="value"><span class="string">"Android Application Architecture"</span></span><br><span class="line">    </span>&#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        "<span class="attribute">url</span>": <span class="value"><span class="string">"https://medium.com/@hamen/android-library-aar-and-javadoc-6859898cad28?source=tags---------9"</span></span>,</span><br><span class="line">        "<span class="attribute">subtitle</span>": <span class="value"><span class="string">"As an Android developer, I’m used to ask Android Studio/Intellij Idea for documentation constantly. I have even replaced the shortcut: now, it’s F1, the old-fashion help key. When I want to know about a method or a class, I hit F1 and the JavaDoc shows up: smooth. How does…"</span></span>,</span><br><span class="line">        "<span class="attribute">title</span>": <span class="value"><span class="string">"Android Library AAR and Javadoc"</span></span><br><span class="line">    </span>&#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        "<span class="attribute">url</span>": <span class="value"><span class="string">"https://medium.com/@p.tournaris/rxjava-rxreplayingshare-emit-only-once-b19acd61b469?source=tags---------10"</span></span>,</span><br><span class="line">        "<span class="attribute">subtitle</span>": <span class="value"><span class="string">"Following up on my "</span></span>,</span><br><span class="line">        "<span class="attribute">title</span>": <span class="value"><span class="string">"RxJava —RxReplayingShare, Emit only Once"</span></span><br><span class="line">    </span>&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>前面实现了对 <strong><a href="http://hanks.xyz/2016/03/19/scrapy-jianshu-it/">简书上面的程序员专题抓取文章</a></strong>， 接下来开始 <strong><a href="https://medium.com/tag/android">Medium</a></strong> 网站的 <code>Android</code> 标签的文章。</p>]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
      <category term="Python" scheme="http://hanks.xyz/tags/Python/"/>
    
      <category term="Scrapy" scheme="http://hanks.xyz/tags/Scrapy/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[kotlin-dagger2]]></title>
    <link href="http://hanks.xyz/2016/03/20/kotlin-dagger2/"/>
    <id>http://hanks.xyz/2016/03/20/kotlin-dagger2/</id>
    <published>2016-03-20T10:37:16.000Z</published>
    <updated>2016-03-20T10:56:39.000Z</updated>
    <content type="html"><![CDATA[<p>在 <code>Kotlin</code> 项目中使用 <code>Dagger2</code>，暂时 <code>@Module</code> <code>@Component</code> 还有 <code>Application</code>需要使用 <code>Java文件</code>，然后 <code>Koltin</code> 调用。否则没有办法生成代码。 </p>
<a id="more"></a>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/e41162de-42eb-4dee-b2d8-588a068470dd.png" alt="文件列表"> </p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/59fcb9f0-0a97-4d6b-a175-042d1d00c5c9.png" alt="生成代码"> </p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.hanks.kotlindagger</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by hanks on 16/3/20.</span><br><span class="line"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Keyboard</span></span>(<span class="variable"><span class="keyword">var</span> type</span>: String?)</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by hanks on 16/3/20.</span><br><span class="line"> */</span></span><br><span class="line"><span class="annotation">@Module</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KeyboardModule</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    String keyboardType;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">KeyboardModule</span><span class="params">(String keyboardType)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.keyboardType = keyboardType;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Provides</span></span><br><span class="line">    <span class="annotation">@Singleton</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Keyboard <span class="title">provideKeyboard</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Keyboard(keyboardType);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.hanks.kotlindagger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.inject.Singleton;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dagger.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by hanks on 16/3/20.</span><br><span class="line"> */</span></span><br><span class="line"><span class="annotation">@Singleton</span></span><br><span class="line"><span class="annotation">@Component</span>(modules = &#123;KeyboardModule.class&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">KeyboardComponent</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">inject</span><span class="params">(MainActivity activity)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.hanks.kotlindagger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Application;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by hanks on 16/3/20.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    KeyboardComponent mKeyboardComponent;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line"></span><br><span class="line">        mKeyboardComponent = DaggerKeyboardComponent.builder()</span><br><span class="line">                .keyboardModule(<span class="keyword">new</span> KeyboardModule(<span class="string">"茶轴"</span>))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> KeyboardComponent <span class="title">getKeyboardComponent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mKeyboardComponent;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.hanks.kotlindagger</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast</span><br><span class="line"><span class="keyword">import</span> javax.inject.Inject</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="typename">AppCompatActivity</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    @Inject @JvmField <span class="variable"><span class="keyword">var</span> mKeyboard</span>: Keyboard ? = <span class="literal">null</span> <span class="comment">// 注意使用@JvmField</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="typename">Bundle?</span>)</span> &#123;</span></span><br><span class="line">        super.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line"></span><br><span class="line">        (applicationContext <span class="keyword">as</span> MyApp).keyboardComponent?.inject(this)</span><br><span class="line"></span><br><span class="line">        Toast.makeText(application, mKeyboard?.type, Toast.LENGTH_LONG).show()</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>或者参考 <a href="https://github.com/griffio/dagger2-kotlin" target="_blank" rel="external">dagger2-kotlin</a>,其中使用 <code>kapt</code> 生成代码。<br><a href="http://blog.jetbrains.com/kotlin/2015/06/better-annotation-processing-supporting-stubs-in-kapt/" target="_blank" rel="external">Better Annotation Processing: Supporting Stubs in kapt</a></p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>在 <code>Kotlin</code> 项目中使用 <code>Dagger2</code>，暂时 <code>@Module</code> <code>@Component</code> 还有 <code>Application</code>需要使用 <code>Java文件</code>，然后 <code>Koltin</code> 调用。否则没有办法生成代码。 </p>]]>
    
    </summary>
    
      <category term="Dagger2" scheme="http://hanks.xyz/tags/Dagger2/"/>
    
      <category term="Kotlin" scheme="http://hanks.xyz/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Scrapy 抓取简书专题下的文章]]></title>
    <link href="http://hanks.xyz/2016/03/19/scrapy-jianshu-it/"/>
    <id>http://hanks.xyz/2016/03/19/scrapy-jianshu-it/</id>
    <published>2016-03-19T14:11:01.000Z</published>
    <updated>2016-03-20T16:24:57.000Z</updated>
    <content type="html"><![CDATA[<p>可以开一个定时任务，每天抓取自己感兴趣的相关文章，集中起来进行阅读。平时看简书的 <strong>程序员</strong> 专题比较多，先从这个开始。</p>
<a id="more"></a>
<h2 id="安装_Python">安装 Python</h2><p>一般 <code>Linux</code> 或者 <code>Mac OS</code> 都会自带 <code>python</code> 环境</p>
<h2 id="安装_virtualenv">安装 virtualenv</h2><p><code>pip</code> 是 <code>python</code> 下的包管理工具。一般安装 python 后会自带 pip， 或者可以通过 <code>brew</code> 安装。<br>然后通过 <code>pip</code> 安装 python 虚拟环境：<code>virtualenv</code>。</p>
<blockquote>
<p>注：OS X 10.11 安装 Scrapy 有问题，所以借助 virtualenv</p>
</blockquote>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 virtualenv</span></span><br><span class="line"><span class="variable">$ </span>pip install virtualenv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个虚拟环境，名称为 venv</span></span><br><span class="line"><span class="variable">$ </span>virtualenv venv</span><br></pre></td></tr></table></figure>
<h2 id="安装_Scrapy">安装 Scrapy</h2><p>爬虫的主要模块，更多详细文档可以查看<a href="http://scrapy.org/" target="_blank" rel="external">Scrapy 1.0 官网</a> 。<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip <span class="keyword">install</span> scrapy</span><br></pre></td></tr></table></figure></p>
<h2 id="分析网页结构">分析网页结构</h2><p>有了基础的准备，可以开始爬虫了，首先需要分析网页结构，找到自己需要的信息。</p>
<p><img src="https://dn-coding-net-production-pp.qbox.me/fe251e97-dd3c-49d3-8106-013388bdedd6.png" alt="简书"></p>
<p>抓取文章列表</p>
<p><code>jianshu_spider.py</code></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JianshuSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""docstring for JianshuSpider"""</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># spider 的名字</span></span><br><span class="line">    name = <span class="string">"jianshu"</span></span><br><span class="line">    <span class="comment"># 爬虫的起始 url</span></span><br><span class="line">    start_urls = [<span class="string">"http://www.jianshu.com/collections/16/notes?order_by=added_at"</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 爬虫开始，收到响应回调 parse 函数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> response.css(<span class="string">'.article-list li'</span>):</span><br><span class="line">            <span class="comment"># 文章标题</span></span><br><span class="line">            <span class="keyword">print</span> item.css(<span class="string">'h4 a::text'</span>).extract()[<span class="number">0</span>].encode(<span class="string">'utf-8'</span>)</span><br><span class="line">            <span class="comment"># 文章链接</span></span><br><span class="line">            <span class="keyword">print</span> item.css(<span class="string">'h4 a::attr(href)'</span>).extract()</span><br></pre></td></tr></table></figure>
<p>运行: <code>scrapy runspider jianshu_spider.py</code>，输出如下结果：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">XMPP搭建本地服务器、实现即时通讯（一）</span><br><span class="line">[<span class="string">u'/p/5ea6b611c5b1'</span>]</span><br><span class="line">翻译：CFNetwork编程指南（CFNetwork Programming Guide）</span><br><span class="line">[<span class="string">u'/p/69b181a33383'</span>]</span><br><span class="line">ios - 多线程_基础</span><br><span class="line">[<span class="string">u'/p/d5b781e68148'</span>]</span><br><span class="line">【译】Volley官方文档一：使用Volley传递网络数据</span><br><span class="line">[<span class="string">u'/p/231e03b918bd'</span>]</span><br><span class="line">UIGestureRecognizer手势</span><br><span class="line">[<span class="string">u'/p/c470ae6478ce'</span>]</span><br><span class="line">关于JS闭包</span><br><span class="line">[<span class="string">u'/p/794812620271'</span>]</span><br><span class="line">软件项目之客户与开发</span><br><span class="line">[<span class="string">u'/p/727428bc58df'</span>]</span><br><span class="line">Linux 内核系统调用</span><br><span class="line">[<span class="string">u'/p/0e25bee35c66'</span>]</span><br><span class="line">WWDC 学习笔记 —— 值类型在 Swift 中的应用</span><br><span class="line">[<span class="string">u'/p/133bce4ea3bc'</span>]</span><br></pre></td></tr></table></figure>
<p>既然是爬虫，然后就可以根据每个文章的url，抓取文章的内容。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JianshuSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""docstring for JianshuSpider"""</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># spider 的名字</span></span><br><span class="line">    name = <span class="string">"jianshu"</span></span><br><span class="line">    <span class="comment"># 爬虫的起始 url</span></span><br><span class="line">    start_urls = [<span class="string">"http://www.jianshu.com/collections/16/notes?order_by=added_at"</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 爬虫开始，收到响应回调 parse 函数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> response.css(<span class="string">'.article-list li'</span>):</span><br><span class="line">            <span class="comment"># 文章标题</span></span><br><span class="line">            <span class="comment"># print item.css('h4 a::text').extract()[0].encode('utf-8')</span></span><br><span class="line">            <span class="comment"># 文章链接</span></span><br><span class="line">            short_url = item.css(<span class="string">'h4 a::attr(href)'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">            <span class="comment"># 文章完整的url</span></span><br><span class="line">            full_url = response.urljoin(short_url)</span><br><span class="line">            <span class="keyword">print</span> full_url</span><br><span class="line">            <span class="comment"># 抓文章详情页</span></span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(full_url,callback=self.parse_article)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_article</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="keyword">yield</span> &#123;</span><br><span class="line">            <span class="string">'title'</span>:response.css(<span class="string">'.preview h1::text'</span>).extract()[<span class="number">0</span>],</span><br><span class="line">            <span class="string">'show-content'</span>:response.css(<span class="string">'.preview .show-content'</span>).extract()[<span class="number">0</span>],</span><br><span class="line">            <span class="string">'link'</span>:response.url,</span><br><span class="line">            <span class="comment"># 文章字数，阅读类等通过 js 动态获取，没法直接爬到</span></span><br><span class="line">            <span class="comment"># 'wordage':response.css('.wordage::text').extract(),</span></span><br><span class="line">            <span class="comment"># 'views-count':response.css('.views-count::text').extract(),</span></span><br><span class="line">            <span class="comment"># 'comments-count':response.css('.comments-count::text').extract(),</span></span><br><span class="line">            <span class="comment"># 'likes-count':response.css('.likes-count::text').extract(),</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<h2 id="将结果导出为_json_文件">将结果导出为 json 文件</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ scrapy runspider jianshu_spider<span class="class">.py</span> -o res.json</span><br></pre></td></tr></table></figure>
<p>运行结果： <code>res.json</code>文件<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;"<span class="attribute">title</span>": <span class="value"><span class="string">"WWDC \u5b66\u4e60\u7b14\u8bb0 \u2014\u2014 \u503c\u7c7b\u578b\u5728 Swift \u4e2d\u7684\u5e94\u7528"</span></span>, "<span class="attribute">link</span>": <span class="value"><span class="string">"http://www.jianshu.com/p/133bce4ea3bc"</span></span>, "<span class="attribute">show-content</span>": <span class="value"><span class="string">"&lt;div class=\"show-content\"&gt;&lt;h4&gt;WWDC 2015 - Session 414 - iOS, OS X, watchOS&lt;/h4&gt;\n&lt;p&gt;\u672c\u6587\u6838\u5fc3\u57fa\u4e8e WWDC \u4e3b\u9898\u6f14\u8bb2\u5185\u5bb9\uff0c\u7ed3\u5408\u6211\u81ea\u5df1\u7684\u4e00\u4e9b\u60f3\u6cd5\uff0c\u5927\u5bb6\u53ef\u4ee5\u5f53\u6210\u7ffb\u8bd1\u770b\u3002&lt;/p&gt;\n&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1507403-2dd4ccb28e89a602.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1507403-2dd4ccb28e89a602.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;WWDC 2015&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;Swift \u7684\u53d8\u91cf\u7c7b\u578b\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u503c\u7c7b\u578b\uff0c\u53e6\u5916\u4e00\u79cd\u5219\u662f\u5f15\u7528\u7c7b\u578b\u3002\u90a3\u4e48\u600e\u4e48\u533a\u5206\u4e00\u4e2a\u7c7b\u578b\u662f\u503c\u7c7b\u578b\u8fd8\u662f\u5f15\u7528\u7c7b\u578b\u5462\uff1f\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u7528 &lt;code&gt;struct&lt;/code&gt; \u58f0\u660e\u7684\u4e3a\u503c\u7c7b\u578b\uff0c\u7528 &lt;code&gt;class&lt;/code&gt; \u58f0\u660e\u7684\u4e3a\u5f15\u7528\u7c7b\u578b\u3002\u4e0b\u9762\u6211\u4eec\u7528\u4e00\u4e2a\u4f8b\u5b50\u6765\u6f14\u793a\u4e00\u4e0b\u5982\u4f55\u5408\u7406\u4f7f\u7528\u503c\u7c7b\u578b\u3002&lt;/p&gt;\n&lt;p&gt;\u8fd9\u4e2a\u4f8b\u5b50\u5f88\u7b80\u5355\uff0c\u8fd8\u662f\u753b\u677f\u5e94\u7528\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u7c7b\u578b\u6765\u8868\u793a\u4e00\u4e2a\u56fe\u5f62\uff0c\u8fd9\u4e2a\u7c7b\u578b\u5305\u542b\u989c\u8272\u548c\u8def\u5f84\u3002\u6211\u4eec\u7528 &lt;code&gt;struct&lt;/code&gt; \u6765\u58f0\u660e\u8fd9\u4e2a\u7c7b\u578b\uff0c\u8fd9\u6837\u56fe\u5f62\u5c06\u4f1a\u5341\u5206\u5bb9\u6613\u88ab\u62f7\u8d1d\u3002Undo Stack \u9700\u8981\u4fdd\u5b58\u5404\u4e2a\u65f6\u671f\u7684\u56fe\u5f62\u72b6\u6001\uff0c\u5982\u679c\u7528\u5f15\u7528\u7c7b\u578b\uff0c\u53ef\u60f3\u800c\u77e5\uff0c\u5386\u53f2\u56fe\u5f62\u7684\u5c5e\u6027\u5c06\u4f1a\u88ab\u4fee\u6539\u3002&lt;/p&gt;\n&lt;p&gt;\u4ee3\u7801\u5982\u4e0b\uff1a&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1507403-ae92a276b5aeb365.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1507403-ae92a276b5aeb365.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;Figure. 1&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;\u5148\u4e0d\u8981\u7406\u4f1a\u90a3\u4e2a &lt;code&gt;mutablePath&lt;/code&gt;\uff0c\u6211\u4eec\u5148\u5c1d\u8bd5\u76f4\u63a5\u4fee\u6539 &lt;code&gt;path&lt;/code&gt; \u5c5e\u6027\uff0c\u770b\u770b\u4f1a\u6709\u4ec0\u4e48\u6548\u679c\u3002&lt;/p&gt;\n&lt;p&gt;\u6d4b\u8bd5\u7528\u4f8b\u5982\u4e0b\uff1a&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1507403-4bbd2f45dd9b6c44.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1507403-4bbd2f45dd9b6c44.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;Figure. 2&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;\u663e\u7136\uff0c&lt;code&gt;rect2&lt;/code&gt; \u62f7\u8d1d\u4e86 &lt;code&gt;rect1&lt;/code&gt; \u7684\u6570\u636e\uff0c\u6240\u4ee5\u4fee\u6539 &lt;code&gt;rect2&lt;/code&gt; \u7684 &lt;code&gt;color&lt;/code&gt; \u5c5e\u6027\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5230 &lt;code&gt;rect1&lt;/code&gt;\uff0c\u7136\u540e\u6211\u4eec\u770b\u770b\u6548\u679c\uff1a&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1507403-238ae0ceae54b8c0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1507403-238ae0ceae54b8c0.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;Figure. 3&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;\u8bf6\uff1f\u600e\u4e48\u53ea\u6709\u4e00\u4e2a\u4e09\u89d2\u5f62\uff0c&lt;code&gt;rect1&lt;/code&gt; \u90a3\u4e2a\u77e9\u5f62\u5462\uff1f&lt;/p&gt;\n&lt;p&gt;\u95ee\u9898\u5176\u5b9e\u5c31\u51fa\u73b0\u5728 &lt;code&gt;path&lt;/code&gt; \u4e0a\u3002&lt;code&gt;rect2&lt;/code&gt; \u867d\u7136\u590d\u5236\u4e86 &lt;code&gt;rect1&lt;/code&gt;\uff0c\u4f46\u662f\u53ea\u662f\u6d45\u590d\u5236\uff0c\u4e5f\u5c31\u662f\u628a &lt;code&gt;color&lt;/code&gt; \u548c &lt;code&gt;path&lt;/code&gt; \u7684\u5f15\u7528\u590d\u5236\u4e86\u4e00\u4efd\uff0c\u7531\u4e8e\u6211\u4eec\u5bf9\u4e8e &lt;code&gt;rect2&lt;/code&gt; \u7684 &lt;code&gt;color&lt;/code&gt; \u5c5e\u6027\u662f\u76f4\u63a5\u8d4b\u503c\u4fee\u6539\uff0c\u6240\u4ee5\u5185\u5b58\u4e2d\u5b9e\u9645\u7684\u64cd\u4f5c\u5982\u4e0b\uff1a&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1507403-7490bb10e8c3a8eb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1507403-7490bb10e8c3a8eb.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;Figure. 4&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;\u7136\u800c\u5bf9\u4e8e &lt;code&gt;path&lt;/code&gt; \u7684\u4fee\u6539\uff0c\u6211\u4eec\u901a\u8fc7\u5f15\u7528\u7c7b\u578b\u76f4\u63a5\u8bbf\u95ee\u4e86\u5185\u5b58\u4e2d\u552f\u4e00\u7684 &lt;code&gt;UIBezierPath&lt;/code&gt; \u5bf9\u8c61\uff0c\u6240\u4ee5\u4e24\u8005\u7684 &lt;code&gt;path&lt;/code&gt; \u5c31\u90fd\u88ab\u4fee\u6539\u4e86\u3002&lt;/p&gt;\n&lt;p&gt;\u90a3\u5e94\u8be5\u600e\u4e48\u505a\u5462\uff1fWWDC \u4e2d\u63d0\u5230\u7684\u65b9\u6cd5\u662f &lt;strong&gt;Copy-on-wirte&lt;/strong&gt;\uff0c\u4e5f\u5c31\u662f\u8bf4\u9700\u8981\u4fee\u6539\u503c\u7c7b\u578b\u4e2d\u7684\u67d0\u4e2a\u5f15\u7528\u7c7b\u578b\u65f6\uff0c\u5148\u5c06\u5176\u590d\u5236\u4e00\u4efd\uff0c\u518d\u8fdb\u884c\u4fee\u6539\u3002\u5728 Swift \u4e2d\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd9\u4e48\u505a\uff1a&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1507403-38d76a40adb27234.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1507403-38d76a40adb27234.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;Figure. 5&lt;/div&gt;\n&lt;/div&gt;&lt;p&gt;&lt;br&gt;\u901a\u8fc7\u5c5e\u6027\u8bbf\u95ee\u5668\uff0c\u5728\u5916\u90e8\u8bbf\u95ee\u8fd9\u4e2a\u5c5e\u6027\u65f6\u5148\u5c06\u539f\u6765\u7684\u5c5e\u6027\u590d\u5236\u4e00\u4efd\uff0c\u7136\u540e\u8fd4\u56de\u590d\u5236\u540e\u7684\u5c5e\u6027\uff0c\u8fd9\u6837\u6211\u4eec\u7684\u4fee\u6539\u5c31\u76f8\u4e92\u9694\u79bb\u3001\u4e92\u4e0d\u5e72\u6270\u4e86\u3002\u6700\u540e\u4fee\u6539\u540e\u7684\u4ee3\u7801\u5c31\u662f\u8fd9\u6837\u4e86\uff1a&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1507403-2c3ab30c0ecc5f61.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1507403-2c3ab30c0ecc5f61.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;Figure. 6&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;\u770b\uff0c\u4e24\u4e2a\u56fe\u5f62\u90fd\u7ed8\u5236\u51fa\u6765\u4e86\u5427\u3002&lt;/p&gt;\n&lt;p&gt;\u603b\u7ed3\u672c Session\uff0c\u7740\u91cd\u8bb2\u7684\u5c31\u662f\u8fd9\u4e2a &lt;strong&gt;Copy-on-write&lt;/strong&gt; \u6a21\u5f0f\uff0c\u53e6\u5916 WWDC \u4e2d\u8fd8\u6307\u51fa PhotoShop \u4e5f\u91c7\u7528\u4e86\u8fd9\u79cd\u6a21\u5f0f\uff1a&lt;/p&gt;\n&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1507403-7f277ef80a2c9726.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1507403-7f277ef80a2c9726.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;WWDC Keynote&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;\u5b83\u8db3\u591f\u9ad8\u6548\u3001\u65b9\u4fbf\u3002&lt;/p&gt;\n&lt;/div&gt;"</span></span>&#125;,</span><br><span class="line">  &#123;"<span class="attribute">title</span>": <span class="value"><span class="string">"Linux \u5185\u6838\u7cfb\u7edf\u8c03\u7528"</span></span>, "<span class="attribute">link</span>": <span class="value"><span class="string">"http://www.jianshu.com/p/0e25bee35c66"</span></span>, "<span class="attribute">show-content</span>": <span class="value"><span class="string">"&lt;div class=\"show-content\"&gt;&lt;h2&gt;\n&lt;a href=\"http://mooc.study.163.com/course/USTC-1000029000\" target=\"_blank\"&gt;\u300aLinux \u5185\u6838\u5206\u6790\u300b MOOC \u8bfe\u7a0b\u5b9e\u9a8c&lt;/a&gt; \u5206\u6790 Linux \u7cfb\u7edf\u8c03\u7528\u8fc7\u7a0b&lt;/h2&gt;\n&lt;h3&gt;1.\u7cfb\u7edf\u8c03\u7528\u6982\u8ff0&lt;/h3&gt;\n&lt;p&gt;\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u4e86\u4fdd\u8bc1\u5b89\u5168\u6027\uff0c\u901a\u5e38\u628a\u8fd0\u884c\u72b6\u6001\u5206\u4e3a\u7528\u6237\u6001\u548c\u5185\u6838\u6001\uff0c\u5e76\u89c4\u5b9a\uff0c\u53ea\u6709\u7279\u6743\u6307\u4ee4\u624d\u80fd\u5728\u5185\u6838\u6001\u8fd0\u884c\uff0c\u7528\u6237\u7a0b\u5e8f\u53ea\u80fd\u5728\u7528\u6237\u6001\u4e0b\u8fd0\u884c\u3002\u90a3\u4e48\uff0c\u5047\u5982\u7528\u6237\u7a0b\u5e8f\u9700\u8981\u8bbf\u95ee\u7cfb\u7edf\u7684\u6838\u5fc3\u529f\u80fd\uff0c\u600e\u4e48\u529e\uff1f\u6ca1\u9519\u513f\uff0c\u5c31\u662f\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u3002&lt;/p&gt;\n&lt;p&gt;\u7b80\u5355\u6765\u8bf4\uff0c\u7cfb\u7edf\u8c03\u7528\u5c31\u662f\u628a\u5e94\u7528\u7a0b\u5e8f\u7684\u8bf7\u6c42\u4f20\u9012\u7ed9\u5185\u6838\uff0c\u8c03\u7528\u76f8\u5e94\u7684\u5185\u6838\u51fd\u6570\u6765\u5904\u7406\u8bf7\u6c42\uff0c\u7136\u540e\u518d\u5c06\u5904\u7406\u7ed3\u679c\u8fd4\u56de\u7ed9\u5e94\u7528\u7a0b\u5e8f\u3002&lt;/p&gt;\n&lt;p&gt;\u672c\u6b21\u5b9e\u9a8c\u9009\u7528 &lt;code&gt;Linux&lt;/code&gt; \u64cd\u4f5c\u7cfb\u7edf 2 \u53f7\u7cfb\u7edf\u8c03\u7528\uff0c&lt;code&gt;fork&lt;/code&gt; \u51fd\u6570\uff0c\u901a\u8fc7\u5bf9\u6bd4\u5d4c\u5165\u5f0f\u6c47\u7f16\u7f16\u7a0b\u548c\u7cfb\u7edf\u51fd\u6570\u7f16\u7a0b\uff0c\u6df1\u5165\u7406\u89e3\u548c\u5206\u6790\u7cfb\u7edf\u8c03\u7528\u7684\u8fc7\u7a0b\u3002&lt;/p&gt;\n&lt;h3&gt;2.fork \u51fd\u6570&lt;/h3&gt;\n&lt;p&gt;\u6211\u4eec\u6765\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u7cfb\u7edf\u8c03\u7528\u51fd\u6570\uff1a&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1627862-b4c84bc056d43133.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1627862-b4c84bc056d43133.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;h3&gt;3.\u5d4c\u5165\u5f0f\u6c47\u7f16&lt;/h3&gt;\n&lt;p&gt;\u9996\u5148\uff0c\u6211\u4eec\u6765\u770b\u770b &lt;code&gt;C&lt;/code&gt; \u8bed\u8a00\u5d4c\u5165\u5f0f\u6c47\u7f16\u4e00\u822c\u683c\u5f0f\uff1a&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;__asm__ (\n    \u6c47\u7f16\u8bed\u53e5\uff1b\n    \u8f93\u51fa\u90e8\u5206\uff1b\n    \u8f93\u5165\u90e8\u5206\uff1b\n    \u7834\u574f\u63cf\u8ff0\u90e8\u5206\uff1b\n);&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;\u7136\u540e\uff0c\u518d\u6765\u5206\u6790\u6211\u4eec\u7684\u5d4c\u5165\u5f0f\u6c47\u7f16\u4ee3\u7801\uff1a&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1627862-8a0075f0c0784251.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1627862-8a0075f0c0784251.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;p&gt;&lt;br&gt;&lt;code&gt;volatile&lt;/code&gt; \u5173\u952e\u5b57\u8868\u793a\u7981\u6b62\u7f16\u8bd1\u5668\u4f18\u5316\uff0c\u7136\u540e\u628a &lt;code&gt;ebx&lt;/code&gt; \u5bc4\u5b58\u5668\u6e05\u96f6\uff0c\u628a\u7b2c 2 \u53f7\u7cfb\u7edf\u8c03\u7528\u8d4b\u7ed9 &lt;code&gt;eax&lt;/code&gt; \u5bc4\u5b58\u5668\uff0c\u7136\u540e\u518d\u8c03\u7528 &lt;code&gt;0x80&lt;/code&gt; \u53f7\u7cfb\u7edf\u4e2d\u65ad\uff0c\u6700\u540e\u628a eax \u7684\u503c\u8d4b\u7ed9\u7b2c 0 \u4e2a\u53d8\u91cf\uff0c\u5373\u4e0b\u9762\u7684 &lt;code&gt;fpid&lt;/code&gt; \u53d8\u91cf\u3002&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1627862-92ff94ccb6b6dedb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1627862-92ff94ccb6b6dedb.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;p&gt;&lt;br&gt;\u6700\u540e\uff0c\u8fd0\u884c\u8fd9\u6bb5\u51fd\u6570\uff0c\u5e76\u4e0e\u4f7f\u7528 C \u8bed\u8a00\u5b9e\u73b0\u7684\u7cfb\u7edf\u8c03\u7528\u8fdb\u884c\u5bf9\u6bd4\u3002\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u4e8c\u8005\u8fd0\u884c\u7ed3\u679c\u5b8c\u5168\u76f8\u540c\u3002&lt;/p&gt;\n&lt;h3&gt;4.\u603b\u7ed3&lt;/h3&gt;\n&lt;p&gt;\u64cd\u4f5c\u7cfb\u7edf\u4f5c\u4e3a\u7ba1\u7406\u786c\u4ef6\u8d44\u6e90\u548c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u73af\u5883\uff0c\u4e3a\u4e86\u8fbe\u5230\u826f\u597d\u7684\u517c\u5bb9\u6027\u548c\u5e73\u8861\u6027\uff0c\u5185\u6838\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7684\u5b9a\u5236\u5316\u7684\u51fd\u6570\uff0c\u4f7f\u5f97\u5f00\u53d1\u8005\u548c\u7528\u6237\u7a0b\u5e8f\u5b8c\u5168\u4e0d\u9700\u8981\u4e86\u89e3\u590d\u6742\u7684\u786c\u4ef6\u4f53\u7cfb\u7ed3\u6784\uff0c\u5c4f\u853d\u4e86\u5e95\u5c42\u4ea4\u4e92\u7ec6\u8282\uff0c\u542c\u8d77\u6765\u662f\u4e0d\u662f\u9075\u5faa\u4e86\u67d0\u79cd\u8f6f\u4ef6\u8bbe\u8ba1\u6a21\u5f0f\u5462\uff1f\u8fd9\u4e2a\u7b80\u5355\u7684\u95ee\u9898\u5c31\u7559\u7ed9\u8bfb\u8005\u601d\u8003\u54af\u3002&lt;/p&gt;\n&lt;/div&gt;"</span></span>&#125;,</span><br><span class="line">  &#123;"<span class="attribute">title</span>": <span class="value"><span class="string">"UIGestureRecognizer\u624b\u52bf"</span></span>, "<span class="attribute">link</span>": <span class="value"><span class="string">"http://www.jianshu.com/p/c470ae6478ce"</span></span>, "<span class="attribute">show-content</span>": <span class="value"><span class="string">"&lt;div class=\"show-content\"&gt;&lt;p&gt;\u624b\u52bf\u4e00\u5171\u5206\u4e3a\u4e03\u79cd\uff0c\u6bcf\u4e00\u4e2a\u624b\u52bf\u7684\u7c7b\u90fd\u662f\u7ee7\u627f\u4e8eUIGestureRecognizer\uff0c\u6211\u4eec\u64cd\u4f5c\u7684\u65f6\u5019\u662f\u64cd\u4f5c\u5176\u5b50\u7c7b&lt;br&gt;\u4e00\u4e2a\u624b\u52bf\u53ea\u80fd\u6dfb\u52a0\u5230\u4e00\u4e2a\u89c6\u56fe\u4e0a\uff0c\u5982\u679c\u6dfb\u52a0\u5230\u591a\u4e2a\u89c6\u56fe\u4e0a\uff0c\u53ea\u80fd\u5bf9\u6700\u540e\u6dfb\u52a0\u7684\u90a3\u4e2a\u89c6\u56fe\u5176\u6548\u679c&lt;/p&gt;\n&lt;h3&gt;\u8f7b\u62cd\u624b\u52bf\uff08\u70b9\u51fb\uff09&lt;/h3&gt;\n&lt;pre&gt;&lt;code&gt;- (void)viewDidLoad&#123;\n\n    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(tapAction:)];\n    //\u8bbe\u7f6e\u70b9\u51fb\u6b21\u6570\n    tap.numberOfTapsRequired = 2;//\u5feb\u901f\u70b9\u51fb\u4e24\u6b21\u624d\u80fd\u89e6\u53d1\n    //\u8bbe\u7f6e\u70b9\u51fb\u624b\u6307\u4e2a\u6570\n    tap.numberOfTouchesRquired = 2;//\u5728\u6a21\u62df\u5668\u4e0a\u6d4b\u8bd5\u65f6\uff0c\u6309\u4f4falt\u952e\u53ef\u4ee5\u5524\u51fa\u7b2c\u4e8c\u6839\u624b\u6307\uff0c\u6a21\u62df\u5668\u6700\u591a\u53ea\u80fd\u6709\u4e24\u6839\uff1b\n    //UIImageView\u6dfb\u52a0\u624b\u52bf\uff08\u9700\u8981\u6253\u5f00\u4ea4\u4e92userInteractionEnabled\uff09\n    UIImageView *imgView = [[UIImageView alloc] initWithFrame:CGRectMake:(50,50,50,50)];\n    imgView.userInteractionEnabled = YES;\n    imgView.backgroundColor = [UIColor redColor];\n    [self.view addSubview:imgView];\n    [imgView release];\n    [imgView addGestureRecognizer:tap];\n    [tap release];\n&#125;\n//\u65b9\u6cd5\u5b9e\u73b0\n- (void)tapAction:(UITapGestureRecognizer *)tap&#123;\n    //\u6bcf\u4e2a\u624b\u52bf\u90fd\u81ea\u5e26\u4e00\u4e2a\u5c5e\u6027 .view\uff0c\u8fd4\u56de\u7684\u662f\u8fd9\u4e2a\u624b\u52bf\u6240\u5728\u7684\u89c6\u56fe\n    tap.view.frame = CGRectMake(0,0,100,100);\n&#125;&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;\u8f7b\u626b\u624b\u52bf&lt;/h3&gt;\n&lt;pre&gt;&lt;code&gt;- (void)viewDidLoad&#123;\n    UISwipeGestureRecognizer *swipe = [[UISwipeGestureRecognizer alloc] initWithTarget:self action:@selector(swipeAction:)];\n    //\u8bbe\u7f6e\u8f7b\u626b\u65b9\u5411 \u9ed8\u8ba4\u65b9\u5411\u662f\u5411\u53f3\u8f7b\u626b\uff0c\u4e00\u4e2a\u8f7b\u626b\u624b\u52bf\u53ea\u80fd\u652f\u6301\u4e00\u4e2a\u65b9\u5411\n    swipe.direction = UISwipeGestureRecognizerDirectionDown;\n    [imgView addGestureRecognizer:swipe];//\u5728\u8f7b\u62cd\u4e2d\u8fdb\u884c\u8fc7\u521d\u59cb\u5316\n    [swipe release];\n&#125;\n- (void)swipeAction:(UISwipeGestureRecognizer *)swipe&#123;\n    if (swipe.direction == UISwipeGestureRecognizerDirectionDown) &#123;\n        NSLog(@\"\u8f7b\u626b\");\n    &#125;\n&#125;&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;\u957f\u6309\u624b\u52bf&lt;/h3&gt;\n&lt;pre&gt;&lt;code&gt;- (void)viewDidLoad&#123;\n    UILongPressGestureRecognizer *longPress = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(longPressAction:)];\n    //\u8bbe\u7f6e\u957f\u6309\u65f6\u95f4\n    longPress.minimumPressDuration = 1;\n    [imgView addGestureRecognizer:longPress];\n    [longPress release];\n&#125;\n- (void)longPressAction:(UILongPressGestureRecognizer *)longPress&#123;\n    if (longPress.state == UIGestureRecognizerStateBegan) &#123;//\u6ce81\n        UIAlertController *alert = [UIAlertController alertControllerWithTitle:@\"\u63d0\u793a\" message:@\"123\" preferredStyle:UIAlertControllerStyleActionSheet];\n        [self presentViewController:alert animated:YES completion:nil];\n    &#125;\n&#125;&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;\u5e73\u79fb\u624b\u52bf&lt;/h3&gt;\n&lt;pre&gt;&lt;code&gt;- (void)viewDidLoad&#123;\n    UIPanGestureRecognizer *pan = [[UIPanGestureRecognizer alloc] initWithTarget:self action:@selector(panAction:)];\n    [imgView addGestureRecognizer:pan];\n    [pan release];    \n&#125;\n- (void)panAction:(UIPanGestureRecognizer *)pan&#123;\n    if (pan.state == UIGestureRecognizerStateChanged) &#123;//\u6ce81\n        CGPoint point = [pan translationInView:pan.view];\n        //transform\u662f\u89c6\u56fe\u7684\u4e00\u4e2a\u91cd\u8981\u5c5e\u6027\n        //\u6211\u4eec\u7684\u5e73\u79fb\u3001\u65cb\u8f6c\u3001\u7f29\u653e\uff0c\u6539\u53d8\u7684\u90fd\u662f\u89c6\u56fe\u7684transform\u5c5e\u6027\uff0c\u6211\u4eec\u7528\u4f55\u79cd\u65b9\u6cd5\u53bb\u6539\u53d8\u5b83\uff0c\u53d6\u51b3\u4e8e\u8d4b\u503c\u7b26\u53f7\u53f3\u8fb9\u8c03\u7528\u7684API\n        pan.view.transform = CGAffineTransformTranslate(pan.view.transform,point.x,point.y);\n        //\u91cd\u65b0\u7f6e\u62100\u70b9\uff0c\u6bcf\u4e00\u6b21\u5e73\u79fb\u7684\u7ed3\u675f\u65f6\u7684\u4f4d\u7f6e\u4f1a\u53d8\u6210\u4e0b\u4e00\u6b21\u5e73\u79fb\u7684\u8d77\u70b9\n        [pan setTranslation:CGPointZero inView:pan.view];\n    &#125;\n&#125;&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;\u65cb\u8f6c\u624b\u52bf&lt;/h3&gt;\n&lt;pre&gt;&lt;code&gt;- (void)viewDidLoad&#123;\n    UIRotationGestureRecognizer *rotation = [[UIRotationGestureRecognizer alloc] initWithTarget:self action:@selector(rotationAction:)];\n    [imgView addGestureRecognizer:rotation];\n    [rotation release];    \n&#125;\n- (void)rotationAction:(UIRotationGestureRecognizer *)rotation&#123;\n    if (rotation.state == UIGestureRecognizerStateChanged) &#123;\n        rotation.view.transform = CGAffineTransformTranslate(rotation.view.transform,rotation.rotation);\n        //\u540c\u5e73\u79fb\n        rotation.rotation = 0;\n    &#125;\n&#125;&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;\u7f29\u653e\u624b\u52bf&lt;/h3&gt;\n&lt;pre&gt;&lt;code&gt;- (void)viewDidLoad&#123;\n    UIPinchGestureRecognizer *pinch = [[UIPinchGestureRecognizer alloc] initWithTarget:self action:@selector(pinchAction:)];\n    [imgView addGestureRecognizer:pinch];\n    [pinch release];\n&#125;\n- (void)pinchAction:(UIPinchGestureRecognizer *)pinch&#123;\n    if (pinch.state == UIGestureRecognizerStateChanged) &#123;\n        pinch.view.transform = CGAffineTransformScale(pinch.view.transform,pinch.scale,pinch.scale);\n        //\u540c\u5e73\u79fb\n        pinch.scale = 1;\n    &#125;        \n&#125;&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;\u5c4f\u5e55\u8fb9\u7f18\u5e73\u79fb\u624b\u52bf&lt;/h3&gt;\n&lt;p&gt;UIScreenEdgePanGestureRecognizer&lt;br&gt;\u5e73\u65f6\u57fa\u672c\u4e0d\u7528\uff1b&lt;/p&gt;\n&lt;h3&gt;\u6ce8\uff1a&lt;/h3&gt;\n&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt;&lt;br&gt;\u6bcf\u4e00\u4e2a\u624b\u52bf\u90fd\u6709\u4e00\u4e2astate\u5c5e\u6027\uff0c\u8868\u793a\u7684\u662f\u624b\u52bf\u8bc6\u522b\u7684\u4e0d\u540c\u7684\u9636\u6bb5&lt;br&gt;\u662f\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;typedef NS_ENUM(NSInteger, UIGestureRecognizerState) &#123;\n    UIGestureRecognizerStatePossible, //\u9ed8\u8ba4\u72b6\u6001\n    UIGestureRecognizerStateBegan,\n    UIGestureRecognizerStateChanged,\n    UIGestureRecognizerStateEnded,\n    UIGestureRecognizerStateCancelled,\n    UIGestureRecognizerStateFailed,\n    UIGestureRecognizerStateRecognized = UIGestureRecognizerStateEnded\n&#125;;&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;\u9664\u4e86\u8f7b\u62cd\u624b\u52bf\u4e4b\u5916\uff0c\u5176\u4ed6\u7684\u624b\u52bf\u90fd\u662f\u8fde\u7eed\u7684\u624b\u52bf\uff0c\u521a\u6309\u4e0b\u53bb\u7684\u65f6\u5019state\u7684\u72b6\u6001\u662fPossible\uff0c\u8fd8\u6ca1\u6709\u88ab\u8bc6\u522b\u5f53\u8fbe\u5230\u8bc6\u522b\u6761\u4ef6\uff08\u5982\u5230\u8fbelongPress\u7684\u957f\u6309\u65f6\u95f4\uff0c\u6216\u8005rotation\u624b\u52bf\uff0c\u5f00\u59cb\u65cb\u8f6c\uff09\u540e\u4f1a\u8fdb\u5165\u72b6\u6001Began\uff0c\u4f46\u8fd9\u4e2a\u72b6\u6001\u53ea\u4f1a\u4fdd\u6301\u4e00\u77ac\uff0c\u7136\u540e\u8fdb\u5165Changed\u72b6\u6001\u3002&lt;br&gt;\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6309\u7167\u9700\u6c42\u8fdb\u884c\u5224\u5b9a\uff0c\u5982\u4e0a\u6587\u7684longPress\u624b\u52bf\u4f1apresent\u4e00\u4e2aalert\u51fa\u6765\uff0c\u5982\u679c\u4e0d\u8fdb\u884c\u5224\u5b9a\uff0c\u4f1a\u591a\u6b21\u89e6\u53d1\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u51fa\u9519\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u628a\u5224\u5b9a\u6761\u4ef6\u8bbe\u4e3aBegan\uff0c\u8fd9\u6837\u4e00\u6b21\u957f\u6309\u5c31\u53ea\u4f1a\u89e6\u53d1\u4e00\u6b21\uff1b&lt;br&gt;&lt;strong&gt;\u6ce8\u4e2d\u6ce8\uff1a&lt;/strong&gt;swipe\u624b\u52bf\u53ea\u4f1a\u5728\u8bc6\u522b\u7ed3\u675f\u7684\u65f6\u624d\u4f1a\u89e6\u53d1\u4e00\u6b21\uff0c\u6240\u4ee5\u4e0d\u7528\u8fdb\u884c\u5224\u5b9a&lt;br&gt;&lt;strong&gt;2.&lt;/strong&gt;&lt;br&gt;\u6211\u4eec\u53ef\u4ee5\u770b\u51fatap\u624b\u52bf\u662flongPress\u624b\u52bf\u7684\u4e00\u90e8\u5206\uff0cswipe\u624b\u52bf\u662fpan\u624b\u52bf\u7684\u4e00\u90e8\u5206\uff0c\u5982\u679c\u4e00\u4e2a\u89c6\u56fe\u4e0a\u591a\u4e2a\u624b\u52bf\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u5c31\u4f1a\u5ffd\u7565\u6389\u4f5c\u4e3a\u5176\u4ed6\u624b\u52bf\u4e00\u90e8\u5206\u7684\u624b\u52bf\uff0c\u4e3a\u4e86\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\uff0c\u9700\u8981\u7528\u5230&lt;strong&gt;(void)requireGestureRecognizerToFail:(UIGestureRecognizer *)otherGestureRecognizer&lt;/strong&gt;\u65b9\u6cd5&lt;br&gt;\u8fd9\u4e2a\u65b9\u6cd5\u662f\u7531\u624b\u52bf\u8c03\u7528\u4f20\u5165\u4e00\u4e2a\u624b\u52bf\u4f5c\u4e3a\u53c2\u6570\uff0c\u5f53\u540e\u4e00\u4e2a\u624b\u52bf\u8bc6\u522b\u5931\u8d25\u65f6\u624d\u4f1a\u6267\u884c\u524d\u4e00\u4e2a\u624b\u52bf&lt;br&gt;\u4f8b\uff1a&lt;br&gt;    [pan requireGestureRecognizerToFail:swipe];&lt;br&gt;    //\u53ea\u6709\u5728swipe\u624b\u52bf\u8bc6\u522b\u5931\u8d25\u540e\uff0c\u624d\u4f1a\u89e6\u53d1pan\u624b\u52bf\u7684\u65b9\u6cd5&lt;/p&gt;\n&lt;h3&gt;\u53c2\u8003\u8d44\u6599&lt;/h3&gt;\n&lt;p&gt;&lt;a href=\"http://www.cnblogs.com/kenshincui/p/3950646.html\" target=\"_blank\"&gt;http://www.cnblogs.com/kenshincui/p/3950646.html&lt;/a&gt;&lt;br&gt;&lt;a href=\"http://www.cnblogs.com/kenshincui\" target=\"_blank\"&gt;\u5d14\u6c5f\u6d9b\uff08KenshinCui\uff09&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;"</span></span>&#125;,</span><br><span class="line">  &#123;"<span class="attribute">title</span>": <span class="value"><span class="string">"\u8f6f\u4ef6\u9879\u76ee\u4e4b\u5ba2\u6237\u4e0e\u5f00\u53d1"</span></span>, "<span class="attribute">link</span>": <span class="value"><span class="string">"http://www.jianshu.com/p/727428bc58df"</span></span>, "<span class="attribute">show-content</span>": <span class="value"><span class="string">"&lt;div class=\"show-content\"&gt;&lt;p&gt;\u81ea\u4e00\u6708\u4efd\u4ee5\u6765\uff0c\u6211\u4f5c\u4e3a\u5f00\u53d1\u8d1f\u8d23\u4eba\u627f\u63a5\u4e86\u65e0\u9521\u4e00\u5bb6\u4e8b\u4e1a\u5355\u4f4d\u7684\u7cfb\u7edf\u8f6f\u4ef6\u9879\u76ee\uff0c\u4ece\u521d\u6b65\u63a5\u624b\u5230\u6df1\u5ea6\u5f00\u53d1\uff0c\u81f3\u6b64\uff0c\u5c06\u6b64\u95f4\u7684\u4e00\u4e9b\u7406\u89e3\u548c\u8ba4\u8bc6\u6574\u7406\u51fa\u6765\uff0c\u4ee5\u4f5c\u8bb0\u5f55\u3002&lt;/p&gt;&lt;p&gt;\u4ee5\u516c\u53f8\u9879\u76ee\u7b49\u7ea7\u7684\u5212\u5206\u6765\u770b\uff0c\u8be5\u9879\u76ee\u5c5e\u5c0f\u578b\u9879\u76ee\u3002\u81f3\u4e8e\u7b49\u7ea7\u5212\u5206\u6807\u51c6\uff0c\u6211\u662f\u4e0d\u6e05\u695a\u7684\u3002\u59d1\u4e14\u4e0d\u53bb\u8d28\u7591\u201c\u6807\u51c6\u201d\uff0c\u4f46\u662f\u6267\u884c\u201c\u6807\u51c6\u201d\u7684\u4eba\u4ee5\u53ca\u6267\u884c\u7684\u5408\u7406\u7a0b\u5ea6\u53ca\u6001\u5ea6\u5374\u662f\u503c\u5f97\u8d28\u7591\u3002\u4f60\u77e5\u9053\uff0c\u516c\u53f8\u7684\u9879\u76ee\u5408\u540c\u662f\u5546\u52a1\u53bb\u8c08\u548c\u7b7e\u8ba2\u7684\u3002\u6240\u4ee5\u6211\u6000\u7591\u7684\u662f\u5546\u52a1\u7684\u8bc4\u4f30\u6001\u5ea6\u4e0e\u8bc4\u4f30\u80fd\u529b\u3002\u4f5c\u4e3a\u975e\u5f00\u53d1\u4eba\u5458\uff0c\u5982\u4f55\u8ba9\u4eba\u4fe1\u670d\u4ed6\u4eec\u5bf9\u4e8e\u8f6f\u4ef6\u9879\u76ee\u7684\u9700\u6c42\u8bc4\u4f30\u3002\u8bdd\u53c8\u8bf4\u56de\u6765\uff0c\u5373\u4f7f\u4f5c\u4e3a\u5f00\u53d1\uff0c\u82e5\u65e0\u6df1\u539a\u7684\u7ecf\u9a8c\u53ca\u8f83\u5f3a\u7684\u80fd\u529b\uff0c\u4ed6\u5bf9\u9879\u76ee\u7684\u9700\u6c42\u8bc4\u4f30\u5c31\u4e00\u5b9a\u51c6\u786e\u5417\uff1f\u7136\u800c\uff0c\u6211\u5e76\u4e0d\u5173\u5fc3\u8fd9\u4e9b\u3002&lt;/p&gt;&lt;p&gt;\u5ba2\u6237\u4e0e\u5f00\u53d1\uff0c\u662f\u89e3\u4e0d\u5f00\u7684\u6b7b\u7ed3\u3002\u8be5\u5ba2\u6237\u5927\u591a\u65f6\u5019\u4e0d\u6e05\u695a\u4ed6\u4eec\u60f3\u8981\u7684\u662f\u4ec0\u4e48\uff0c\u6700\u65e0\u8bed\u7684\u662f\u4ed6\u7adf\u4e0d\u6e05\u695a\u4ed6\u4eec\u5355\u4f4d\u7684\u529e\u4e8b\u6d41\u7a0b\u53ca\u7ec6\u8282\uff0c\u4ed6\u4eec\u6700\u591a\u7684\u72b6\u6001\u662f\u4e0d\u505c\u5730\u5426\u8ba4\u5f00\u53d1\u7684\u7ed3\u679c\u3002\u6211\u7684\u6001\u5ea6\u662f\u6ca1\u6709\u505a\u4e0d\u5230\uff0c\u53ea\u6709\u60f3\u4e0d\u5230\u3002\u7136\u800c\uff0c\u6211\u5f88\u5173\u5fc3\u8fd9\u4e9b\u3002&lt;/p&gt;&lt;p&gt;\u5bf9\u4e8e\u9879\u76ee\uff0c\u7ecf\u8fc7\u8fd9\u4e9b\u65f6\u65e5\uff0c\u6709\u4e86\u4e9b\u8bb8\u4f53\u4f1a\uff1a\u6211\u613f\u610f\u6df1\u523b\u7406\u89e3\u5ba2\u6237\u7684\u9700\u6c42\uff0c\u52aa\u529b\u8bbe\u8ba1\u597d\u7684\u7cfb\u7edf\u7ed3\u6784\uff0c\u5c3d\u529b\u6784\u9020\u6781\u4f73\u7684\u7cfb\u7edf\u6027\u80fd\u3002\u4f46\u8fd9\u4e9b\uff0c\u5e76\u975e\u6211\u4e00\u4eba\u5c31\u80fd\u5b8c\u6210\u7684\u3002\u597d\u6d88\u606f\u662f\uff0c\u6211\u613f\u4e3a\u4e4b\u52aa\u529b\u3002&lt;/p&gt;&lt;p&gt;\u5bf9\u4e8e\u7f16\u7a0b\uff0c\u6211\u60f3\u6700\u5927\u7684\u6311\u6218\u548c\u4e50\u8da3\u5728\u4e8e\u8bbe\u8ba1\u3002\u60f3\u8981\u505a\u51fa\u8bbe\u8ba1\u826f\u597d\u7684\u6570\u636e\u7ed3\u6784\u3001\u6d41\u7545\u7684\u4ee3\u7801\u98ce\u683c\u3002\u6700\u6839\u672c\u7684\u5728\u4e8e\u6570\u636e\u5e93\u7684\u8bbe\u8ba1\u3002\u4f60\u662f\u5426\u4f53\u4f1a\u5230\uff0c\u7f16\u7a0b\u4e2d\u4e0d\u65f6\u5730\u4f1a\u51fa\u73b0\u6570\u636e\u8c03\u7528\u7684\u7e41\u6742\u3001\u6570\u636e\u5173\u8054\u7684\u4e3a\u96be\u4ee5\u53ca\u5173\u8054\u8868\u4e4b\u95f4\u7684\u6570\u636e\u540c\u6b65\u7684\u590d\u6742\u4e0e\u4f4e\u6548\u7b49\u95ee\u9898\u3002\u76ee\u524d\u6765\u770b\uff0c\u8fd9\u4e9b\u95ee\u9898\u7684\u6839\u6e90\u5927\u591a\u6765\u81ea\u4e8e\u6570\u636e\u5e93\u8bbe\u8ba1\u7684\u4e0d\u5408\u7406\u3002\u800c\u6570\u636e\u5e93\u8bbe\u8ba1\uff0c\u6e90\u5934\u8fd8\u5728\u4e8e\u5bf9\u9700\u6c42\u7684\u7406\u89e3\u3002&lt;/p&gt;&lt;p&gt;\u4ec5\u6b64\u8fd9\u4e9b\uff0c\u7a0d\u4f5c\u4f53\u4f1a\u3002&lt;/p&gt;&lt;/div&gt;"</span></span>&#125;,</span><br><span class="line">  &#123;"<span class="attribute">title</span>": <span class="value"><span class="string">"\u5173\u4e8eJS\u95ed\u5305"</span></span>, "<span class="attribute">link</span>": <span class="value"><span class="string">"http://www.jianshu.com/p/794812620271"</span></span>, "<span class="attribute">show-content</span>": <span class="value"><span class="string">"&lt;div class=\"show-content\"&gt;&lt;blockquote&gt;&lt;p&gt;\u4eca\u5929\u505a\u7b14\u8bd5\u9898\uff0c\u597d\u591a\u5173\u4e8eJS\u95ed\u5305\u95ee\u9898\uff0c\u5c31\u6574\u7406\u51fa\u6765\uff0c\u5206\u4eab\u4e00\u4e0b\u3002&lt;/p&gt;&lt;/blockquote&gt;\n&lt;p&gt;\u9996\u5148\uff0c\u5f15\u7528\u4e0b\u6240\u8c13\u7684\u201c\u5b98\u65b9\u89e3\u91ca\u201d\uff1a\u6240\u8c13\u201c\u95ed\u5305\u201d\uff0c\u6307\u7684\u662f\u4e00\u4e2a\u62e5\u6709\u8bb8\u591a\u53d8\u91cf\u548c\u7ed1\u5b9a\u4e86\u8fd9\u4e9b\u53d8\u91cf\u7684\u73af\u5883\u7684&lt;em&gt;\u8868\u8fbe\u5f0f&lt;/em&gt;\uff08\u901a\u5e38\u662f\u4e00\u4e2a\u51fd\u6570\uff09\uff0c\u56e0\u800c\u8fd9\u4e9b&lt;em&gt;\u53d8\u91cf\u4e5f\u662f\u8be5\u8868\u8fbe\u5f0f\u7684\u4e00\u90e8\u5206&lt;/em&gt;\u3002&lt;/p&gt;\n&lt;p&gt;\u8bf7\u6ce8\u610f\u9ed1\u4f53\u5b57\u90e8\u5206\uff0c\u4f1a\u6709\u610f\u4e0e\u4f60\u7684\u7406\u89e3\u3002&lt;/p&gt;\n&lt;p&gt;\u6765\u770b\u4f8b\u5b501\uff1a&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;function a()&#123;\n   var i = 1;\n   function b()&#123;\n      alert(i);\n   &#125;\n   return b();\n&#125;\nvar c = a(); c;  // a();&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;\u4f8b\u5b502\uff1a&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;function a()&#123;\n    var i = 1;\n    function b()&#123;\n        alert(i);\n    &#125;\n    return b;\n&#125;\nvar c = a(); c();  // a()();&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;\u4e0a\u8ff0\u4e24\u4e2a\u4f8b\u5b50\u7684\u8fd0\u884c\u7ed3\u679c\u90fd\u662f\u4e00\u6837\u7684\uff0c\u53ea\u4e0d\u8fc7\u5e94\u8be5\u4f1a\u6709\u5f88\u5c11\u4eba\u7528\u4f8b\u5b502\u90a3\u6837\u7ed3\u5c3e&lt;code&gt;a()()&lt;/code&gt;\u90a3\u6837\u7684\u5199\u6cd5\u5427\u3002\u563b\u563b\uff0c\u6211\u4e5f\u662f\u4eca\u5929\u624d\u53d1\u73b0\u7684\u3002\u8fd9\u6837\u5199\u7684\u8bdd\uff0c\u4f60\u662f\u4e0d\u662f\u5bf9\u51fd\u6570\u540e\u9762\u7684\u62ec\u53f7&lt;code&gt;()&lt;/code&gt;\u6709\u4e86\u66f4\u6df1\u7684\u7406\u89e3\u5462\uff1f&lt;/p&gt;\n&lt;p&gt;\u6ca1\u9519\uff0c\u4ece\u4e0a\u9762\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u51fd\u6570\u58f0\u660e\u5b9a\u4e49\u65f6\u80af\u5b9a\u5c11\u4e0d\u4e86\u8eab\u4efd\u8bc1&lt;code&gt;()&lt;/code&gt;\uff0c\u800c\u5f53\u628a\u4e00\u4e2a\u51fd\u6570\u540d\u8fde\u5e26\u62ec\u53f7&lt;code&gt;()&lt;/code&gt;\u4e5f\u8d4b\u7ed9\u4e00\u4e2a\u53d8\u91cf\uff0c\u8fd9\u65f6\u7684\u53d8\u91cf\u5176\u5b9e\u662f\u6307\u5411\u4e86\u8fd9\u4e2a\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u628a\u51fd\u6570\u7684\u6307\u9488\u8d4b\u7ed9\u4e86\u6b64\u53d8\u91cf\u3002\u50cf\u4e0a\u9762\u4f8b\u5b502\u7ed3\u5c3e\u90a3\u6837\uff0c&lt;code&gt;a()()&lt;/code&gt;\u4e2d\u7684\u524d\u9762\u90e8\u5206&lt;code&gt;a()&lt;/code&gt;\u8fd4\u56de\u503c(\u7ed3\u679c)\u662f\u4e00\u4e2a\u51fd\u6570\u540d\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u4f1a\u6267\u884c\u3002\u6240\u4ee5\u8981\u5728&lt;code&gt;a()&lt;/code&gt;\u540e\u9762\u518d\u52a0\u4e00\u4e2a&lt;code&gt;()&lt;/code&gt;\uff0c\u624d\u4f1a\u6267\u884c\uff0c\u76f8\u5f53\u4e8e&lt;code&gt;b()&lt;/code&gt;\u3002\u56e0\u4e3a&lt;code&gt;a()&lt;/code&gt;\u7684\u8fd4\u56de\u503c\u662f&lt;code&gt;b&lt;/code&gt;\uff0c&lt;em&gt;&lt;code&gt;a()&lt;/code&gt;&lt;/em&gt;&lt;code&gt;()&lt;/code&gt;\u4e5f\u5c31\u76f8\u5f53\u4e8e&lt;em&gt;&lt;code&gt;b&lt;/code&gt;&lt;/em&gt;&lt;code&gt;()&lt;/code&gt;\u3002&lt;/p&gt;\n&lt;p&gt;\u63d2\u64ad\u7ed3\u675f\uff0c\u8fd4\u56de\u6765\u8bf4\u201c\u95ed\u5305\u201d\u95ee\u9898\u3002&lt;/p&gt;\n&lt;p&gt;\u7ee7\u7eed\u770b\u4f8b\u5b50\uff1a&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;function a()&#123;\n    var i = 1;\n    alert(i);\n&#125;\nfunction b()&#123;\n     alert(i);\n&#125;\nb();&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;\u4e0a\u9762\u7684\u4f8b\u5b50\u662f\u4f1a\u62a5\u9519\u7684\uff1a&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1060885-7c85fec036350e0f.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1060885-7c85fec036350e0f.PNG?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;i \u6ca1\u6709\u5b9a\u4e49\uff0c\uff08\u65e0\u6743\u8bbf\u95ee\uff09&lt;/div&gt;\n&lt;/div&gt;&lt;p&gt;&lt;br&gt;\u73b0\u5728\u8fd4\u56de\u53bb\u7ee7\u7eed\u60f3\u201c\u95ed\u5305\u201d\uff0c\u4f60\u597d\u60ca\u5947\u7684\u53d1\u73b0\uff0c\u4f8b1\u548c\u4f8b2\u91cc\uff0c\u53d8\u91cfc\u7adf\u7136\u53ef\u4ee5\u5f39\u51fa\u4e86&lt;code&gt;i&lt;/code&gt;\uff01\u5b83\u53ef\u662f\u6ca1\u6709\u5728\u53d8\u91cfc\u7684\u540c\u7ea7\u4f5c\u7528\u57df\u5b9a\u4e49\u8fc7\u554a\uff01\u4f46\u662f\u2014\u2014\u56e0\u4e3a\u201c\u95ed\u5305\u201d\u7684\u5b58\u5728\uff1a\u51fd\u6570&lt;code&gt;b()&lt;/code&gt;\u4ee5\u53ca\u51fd\u6570a\u91cc\u7684\u53d8\u91cf&lt;code&gt;i&lt;/code&gt;\u3002&lt;/p&gt;\n&lt;h4&gt;\u6ce8\u610f&lt;/h4&gt;\n&lt;p&gt;\u4e0a\u9762\u63d0\u5230\u7684\uff0c\u201c\u95ed\u5305\u201d\u662f\u5305\u542b\u7740\u51fd\u6570&lt;code&gt;b()&lt;/code&gt;\u4ee5\u53ca\u53d8\u91cf&lt;code&gt;i&lt;/code&gt;\uff0c\u597d\u591a\u7f51\u4e0a\u7684\u6587\u7ae0\u53ea\u7b80\u5355\u7684\u63d0\u5230\u4e86\u51fd\u6570&lt;code&gt;b()&lt;/code&gt;\uff0c\u6211\u8ba4\u4e3a\uff0c\u7ed3\u5408\u5f00\u7bc7\u4e2d\u7684\u201c\u5b98\u65b9\u8bf4\u6cd5\u201d\uff0c\u90a3\u79cd\u8bf4\u6cd5\u662f\u4e0d\u7cbe\u786e\u7684\u3002\uff08\u53d8\u91cf\u4e5f\u662f\u8868\u8fbe\u5f0f&lt;strong&gt;(\u95ed\u5305)&lt;/strong&gt;\u7684\u4e00\u90e8\u5206\uff09&lt;/p&gt;\n&lt;p&gt;\u81f3\u4e8e\u95ed\u5305\u7684\u4f5c\u7528\uff0c\u5bf9\u4e8e\u5783\u573e\u56de\u6536\u673a\u5236\u7684\u597d\u5904\u4e91\u4e91\uff0c\u6682\u65f6\u8fd8\u6ca1\u6709\u5b66\u4e60\u5230\uff0c\u540e\u7eed\u4f1a\u7ee7\u7eed\u66f4\u65b0\u8865\u5145\u3002&lt;/p&gt;\n&lt;/div&gt;"</span></span>&#125;,</span><br><span class="line">  &#123;"<span class="attribute">title</span>": <span class="value"><span class="string">"\u3010\u8bd1\u3011Volley\u5b98\u65b9\u6587\u6863\u4e00\uff1a\u4f7f\u7528Volley\u4f20\u9012\u7f51\u7edc\u6570\u636e"</span></span>, "<span class="attribute">link</span>": <span class="value"><span class="string">"http://www.jianshu.com/p/231e03b918bd"</span></span>, "<span class="attribute">show-content</span>": <span class="value"><span class="string">"&lt;div class=\"show-content\"&gt;&lt;p&gt;\u539f\u6587\u94fe\u63a5\uff1a&lt;a href=\"http://developer.android.com/training/volley/index.html\" target=\"_blank\"&gt;Transmitting Network Data Using Volley&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;\u4f9d\u8d56\u548c\u5148\u51b3\u6761\u4ef6\uff1aAndroid 1.6 (API Level 4)\u6216\u8005\u66f4\u9ad8&lt;/p&gt;\n&lt;p&gt;Volley\u662f\u4e00\u4e2aHTTP\u5e93\uff0c\u5b83\u4f7f\u5f97\u5728Android\u5e94\u7528\u4e0a\u8bbf\u95ee\u7f51\u7edc\u66f4\u7b80\u5355\uff0c\u66f4\u91cd\u8981\u7684\u662f\uff0c\u66f4\u5feb\u3002&lt;br&gt;Volley\u53ef\u4ee5\u901a\u8fc7Android\u5f00\u653e\u6e90\u4ee3\u7801\u9879\u76ee\uff08AOSP\uff09\u4ed3\u5e93\u53d6\u5f97\u3002&lt;/p&gt;\n&lt;p&gt;Volley\u63d0\u4f9b\u4e86\u4e00\u4e0b\u7684\u4fbf\u5229\uff1a&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;\u81ea\u52a8\u7684\u7f51\u7edc\u8bf7\u6c42\u8c03\u5ea6\u3002&lt;/li&gt;\n&lt;li&gt;\u591a\u5e76\u53d1\u7f51\u7edc\u8fde\u63a5\u3002&lt;/li&gt;\n&lt;li&gt;\u900f\u660e\u7684\u78c1\u76d8\u548c\u5185\u5b58\u54cd\u5e94\uff0c\u4f7f\u7528\u6807\u51c6\u7684HTTP\u9ad8\u901f\u7f13\u5b58\u4e00\u81f4\u6027\u3002&lt;/li&gt;\n&lt;li&gt;\u652f\u6301\u8bf7\u6c42\u4f18\u5316&lt;/li&gt;\n&lt;li&gt;\u53d6\u6d88\u8bf7\u6c42\u7684API\u3002\u4f60\u53ef\u4ee5\u53d6\u6d88\u5355\u4e2a\u8bf7\u6c42\uff0c\u6216\u8005\u53d6\u6d88\u4e00\u4e9b\u8bf7\u6c42\u3002&lt;/li&gt;\n&lt;li&gt;\u6613\u4e8e\u5b9a\u5236\uff0c\u6bd4\u5982\uff0c\u91cd\u8bd5\u548c\u56de\u9000\u3002&lt;/li&gt;\n&lt;li&gt;\u5f3a\u5927\u7684\u6392\u5e8f\u529f\u80fd\uff0c\u4f7f\u7684\u4ece\u7f51\u7edc\u5f02\u6b65\u83b7\u53d6\u6570\u636e\u5e76\u6b63\u786e\u586b\u5165UI\u53d8\u5f97\u5bb9\u6613\u3002&lt;/li&gt;\n&lt;li&gt;\u8c03\u8bd5\u548c\u8ddf\u8e2a\u5de5\u5177\u3002&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Volley\u64c5\u957f\u8fdc\u7a0b\u7a0b\u5e8f\u8c03\u7528\uff08RPC,remote procedure call\uff09\u7c7b\u578b\u64cd\u4f5c,\u6765\u586b\u5165UI\uff0c\u6bd4\u5982\u6293\u53d6\u4e00\u9875\u641c\u7d22\u6570\u636e\u5e76\u7ed3\u6784\u5316\u3002\u5b83\u6613\u4e8e\u4e0e\u4efb\u4f55\u534f\u8bae\u5148\u7ed3\u5408\uff0c\u7136\u540e\u63d0\u4f9b\u539f\u59cb\u7684\u5b57\u7b26\u4e32\u3001\u56fe\u7247\u548cJSON\u652f\u6301\u3002\u901a\u8fc7\u63d0\u4f9b\u5185\u5efa\u7684\u652f\u6301\u4f60\u9700\u8981\u7684\u7279\u6027\uff0cVolley\u4f7f\u5f97\u4f60\u4ece\u6837\u677f\u4ee3\u7801\u4e2d\u89e3\u653e\uff0c\u4e13\u6ce8\u4e8eapp\u7684\u903b\u8f91\u5b9e\u73b0\u3002&lt;/p&gt;\n&lt;p&gt;Volley\u4e0d\u9002\u5408\u7e41\u91cd\u7684\u4e0b\u8f7d\u6216\u8005\u6d41\u7684\u64cd\u4f5c\uff0c\u56e0\u4e3aVolley\u4f1a\u628a\u89e3\u6790\u5230\u7684\u54cd\u5e94\u6570\u636e\u4fdd\u6301\u5728\u5185\u5b58\u4e2d\u3002\u5bf9\u4e8e\u7e41\u91cd\u7684\u4e0b\u8f7d\u64cd\u4f5c\uff0c\u8003\u8651\u4f7f\u7528\u66ff\u4ee3\u54c1\uff0c\u6bd4\u5982&lt;a href=\"http://developer.android.com/reference/android/app/DownloadManager.html\" target=\"_blank\"&gt;DownloadManager&lt;/a&gt;\u3002&lt;/p&gt;\n&lt;p&gt;Volley\u7684\u6838\u5fc3\u5e93\uff0c\u5728Android\u5f00\u653e\u6e90\u4ee3\u7801\u9879\u76ee\uff08AOSP\uff09\u4ed3\u5e93\u7684&lt;code&gt;frameworks/volley&lt;/code&gt;\u4e2d\u5f00\u53d1\uff0c\u5e76\u4e14&lt;br&gt;contains the main request dispatch pipeline as well as a set of commonly applicable utilities, available in the Volley \"toolbox.\"\uff08\u6ca1\u7406\u89e3\uff0c\u6682\u65f6\u4e0d\u7ffb\u8bd1\uff09\u6dfb\u52a0Volley\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u662f\u514b\u9686Volley\u4ed3\u5e93\u5230\u4f60\u7684\u9879\u76ee\u4e2d\u5e76\u8bbe\u7f6e\u4e3a\u5e93\u5de5\u7a0b\u3002&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;\n&lt;p&gt;\u8f93\u5165\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u4f7f\u7528git\u514b\u9686\u4ed3\u5e93&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;git clone https://android.googlesource.com/platform/frameworks/volley&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;\u5bfc\u5165\u4e0b\u8f7d\u597d\u7684\u6e90\u6587\u4ef6\u5230\u4f60\u7684app\u9879\u76ee\u4e2d\uff0c\u5e76\u8bbe\u4e3aAndroid\u5e93\u6a21\u5757\uff08module\uff09\uff08\u5982\u679c\u4f60\u4f7f\u7528Android Studio\uff0c\u53ef\u4ee5\u5728 &lt;a href=\"http://developer.android.com/sdk/installing/create-project.html#SettingUpLibraryModule\" target=\"_blank\"&gt;Managing Projects from Android Studio&lt;/a&gt;\u770b\u5230\u8be5\u540d\u8bcdmodule\u7684\u63cf\u8ff0\uff09\u6216\u8005\u6253\u5305\u6210.jar\u6587\u4ef6\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ol&gt;\n&lt;h3&gt;\u6559\u7a0b&lt;/h3&gt;\n&lt;h5&gt;&lt;a href=\"http://developer.android.com/training/volley/simple.html\" target=\"_blank\"&gt;\u53d1\u9001\u4e00\u4e2a\u7b80\u5355\u7684\u8bf7\u6c42&lt;/a&gt;&lt;/h5&gt;\n&lt;p&gt;\u5b66\u5b8c\u5982\u4f55\u901a\u8fc7Volley\u7684\u9ed8\u8ba4\u884c\u4e3a\u6765\u53d1\u9001\u4e00\u4e2a\u7b80\u5355\u7684\u8bf7\u6c42\uff0c\u5e76\u77e5\u9053\u5982\u4f55\u53d6\u6d88\u4e00\u4e2a\u8bf7\u6c42\u3002&lt;/p&gt;\n&lt;h5&gt;&lt;a href=\"http://developer.android.com/training/volley/requestqueue.html\" target=\"_blank\"&gt;\u5efa\u7acb\u4e00\u4e2a\u8bf7\u6c42\u961f\u5217\uff08RequestQueue\uff09&lt;/a&gt;&lt;/h5&gt;\n&lt;p&gt;\u5b66\u4e60\u5982\u4f55\u5efa\u7acb\u4e00\u4e2a&lt;code&gt;RequestQueue&lt;/code&gt;\uff0c\u548c\u5982\u4f55\u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f\u521b\u5efa\u4e00\u4e2a\u4f34\u968fapp\u800c\u5b58\u5728\u7684&lt;code&gt;RequestQueue&lt;/code&gt;\u3002&lt;/p&gt;\n&lt;h5&gt;&lt;a href=\"http://developer.android.com/training/volley/request.html\" target=\"_blank\"&gt;\u53d1\u8d77\u4e00\u4e2a\u6807\u51c6\u7684\u8bf7\u6c42&lt;/a&gt;&lt;/h5&gt;\n&lt;p&gt;\u5b66\u4e60\u5982\u4f55\u4f7f\u7528Volley\u73b0\u6210\u7684\u8bf7\u6c42\u7c7b\u578b\uff08\u539f\u59cb\u5b57\u7b26\u4e32\u3001\u56fe\u7247\u548cJSON\uff09\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\u3002&lt;/p&gt;\n&lt;h5&gt;&lt;a href=\"http://developer.android.com/training/volley/request-custom.html\" target=\"_blank\"&gt;\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u8bf7\u6c42&lt;/a&gt;&lt;/h5&gt;\n&lt;p&gt;\u5b66\u4e60\u5982\u4f55\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u8bf7\u6c42\u3002&lt;/p&gt;\n&lt;/div&gt;"</span></span>&#125;,</span><br><span class="line">  &#123;"<span class="attribute">title</span>": <span class="value"><span class="string">"ios - \u591a\u7ebf\u7a0b_\u57fa\u7840"</span></span>, "<span class="attribute">link</span>": <span class="value"><span class="string">"http://www.jianshu.com/p/d5b781e68148"</span></span>, "<span class="attribute">show-content</span>": <span class="value"><span class="string">"&lt;div class=\"show-content\"&gt;&lt;h2&gt;\u4ec0\u4e48\u662f\u591a\u7ebf\u7a0b&lt;/h2&gt;\n&lt;ul&gt;\n&lt;li&gt;\u7a0b\u5e8f\uff1a\u7531\u4ee3\u7801\u751f\u6210\u7684\u53ef\u6267\u884c\u5e94\u7528&lt;/li&gt;\n&lt;li&gt;\u8fdb\u7a0b\uff1a\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\u53ef\u4ee5\u770b\u505a\u662f\u4e00\u4e2a\u8fdb\u7a0b&lt;/li&gt;\n&lt;li&gt;\u7ebf\u7a0b\uff1a\u7a0b\u5e8f\u4e2d\u72ec\u7acb\u8fd0\u884c\u7684\u4ee3\u7801\u6bb5&lt;br&gt;\u4e00\u4e2a\u8fdb\u7a0b\u662f\u7531\u591a\u4e2a\u7ebf\u7a0b\u7ec4\u6210\u7684\u3002\u8fdb\u7a0b\u53ea\u662f\u8d1f\u8d23\u8d44\u6e90\u7684\u8c03\u5ea6\u548c\u5206\u914d\uff0c\u7ebf\u7a0b\u624d\u662f\u7a0b\u5e8f\u7684\u771f\u6b63\u6267\u884c\u5355\u5143\uff0c\u8d1f\u8d23\u4ee3\u7801\u7684\u6267\u884c\u3002&lt;br&gt;\u800c\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u90fd\u81f3\u5c11\u4f1a\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u8fd9\u4e2a\u7ebf\u7a0b\u5c31\u662f\u6211\u4eec\u7a0b\u5e8f\u7684\u4e3b\u7ebf\u7a0b\u3002\u4e3b\u7ebf\u7a0b\u5728\u7a0b\u5e8f\u542f\u52a8\u7684\u65f6\u5019\u88ab\u521b\u5efa\uff0c\u7528\u4e8e\u6267\u884cmain\u51fd\u6570\u3002&lt;br&gt;\u53ea\u6709\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\u7684\u7a0b\u5e8f\uff0c\u88ab\u79f0\u4e4b\u4e3a\u5355\u7ebf\u7a0b\u7a0b\u5e8f\u3002&lt;br&gt;\u5728\u5355\u7ebf\u7a0b\u5f53\u4e2d\u5462\uff0c\u4e3b\u7ebf\u7a0b\u8d1f\u8d23\u6267\u884c\u6240\u6709\u7684\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u8d1f\u8d23\u6574\u4e2a\u7a0b\u5e8f\u7684\u8fd0\u8f6c\uff0c\u53ea\u80fd\u591f\u4e00\u884c\u4e00\u884c\u7684\u53bb\u6267\u884c\uff0c\u800c\u4e0d\u53ef\u4ee5\u5e76\u884c\u6267\u884c\u591a\u4e2a\u90e8\u5206\u7684\u4ee3\u7801\u5757\u3002\u5982\u679c\u5728\u5904\u7406\u4e00\u4e9b\u8017\u65f6\u64cd\u4f5c\uff0c\u5bb9\u6613\u51fa\u73b0\u4ee3\u7801\u963b\u585e\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u7ecf\u5e38\u8bf4\u7684\u5361\u673a\uff08\u9875\u9762\u5047\u6b7b\uff09\u3002&lt;br&gt;\u800c\u62e5\u6709\u591a\u4e2a\u8fdb\u7a0b\u7684\u591a\u7ebf\u7a0b\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u5728\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u5e76\u884c\u6267\u884c\u51e0\u4e2a\u4e0d\u540c\u5185\u5bb9\u7684\u4ee3\u7801\u5757\u4e14\u4e92\u4e0d\u5e72\u9884\uff0c\u6781\u5927\u7684\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u8fd0\u884c\u6548\u7387\uff0c\u4e5f\u518d\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4f18\u5316\u4e86\u7a0b\u5e8f\u7684\u8fd0\u884c\u901f\u5ea6\uff0c\u8fd9\u4e00\u7c7b\u7684\u7a0b\u5e8f\u6211\u79f0\u4e4b\u4e3a\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u3002&lt;br&gt;ios\u5141\u8bb8\u7528\u6237\u5f00\u8f9f\u81ea\u5df1\u7684\u65b0\u7ebf\u7a0b\uff0c\u76f8\u5bf9\u4e8e\u4e3b\u7ebf\u7a0b\u6765\u8bf4\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u53eb\u505a\u5b50\u7ebf\u7a0b\u3002&lt;h2&gt;ios - \u591a\u7ebf\u7a0b\u7684\u5b9e\u73b0\u79cd\u7c7b&lt;/h2&gt;\n&lt;/li&gt;\n&lt;li&gt;NSThread&lt;/li&gt;\n&lt;li&gt;NSOperationQueue&lt;/li&gt;\n&lt;li&gt;NSObject&lt;/li&gt;\n&lt;li&gt;GCD&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h3&gt;NSThread&lt;/h3&gt;\n&lt;p&gt;\u5148\u4ecb\u7ecdNSThread&lt;br&gt;NSThread\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u591a\u7ebf\u7a0b\uff0c\u6709\u4e24\u79cd\u521b\u5efa\u65b9\u5f0f\uff0c\u5728\u6211\u4eec\u65e5\u5e38\u7f16\u7a0b\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u4e00\u4e9b\u5c0f\u90e8\u4ef6\u7684\u52a0\u8f7d\u64cd\u4f5c\u6216\u662f\u8ba1\u7b97\u64cd\u4f5c\uff0c\u80fd\u591f\u719f\u7ec3\u8fd0\u7528NSThread\uff0c\u80fd\u4e3a\u6211\u4eec\u5e26\u6765\u5f88\u5927\u7684\u4fbf\u5229\u3002&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;//\u521d\u59cb\u5316\u4e00\u4e2a\u5b50\u7ebf\u7a0b\uff0c\u4f46\u9700\u8981\u624b\u52a8\u5f00\u542f\n-(id)initWithTarget:(id)target selector:(SEL)selector object:(id)Argument\n//\u5f00\u542f\u5b50\u7ebf\u7a0b\u7684\u547d\u4ee4\n[thread start];\n//\u53d6\u6d88\u5f53\u524d\u5b50\u7ebf\u7a0b\n[thread cancel];\n//\u7acb\u5373\u7ed3\u675f\u5b50\u7ebf\u7a0b\n[thread exit];\n//\u5224\u65ad\u4e00\u4e2a\u7ebf\u7a0b\u662f\u5426\u6b63\u5728\u6267\u884c\n[thread isExecuting];\n//\u5224\u65ad\u4e00\u4e2a\u7ebf\u7a0b\u662f\u5426\u5b8c\u6210\u4e86\u6267\u884c\n[thread isFinished];\n//\u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b\n[NSThread currentThread];\n//\u83b7\u53d6\u4e3b\u7ebf\u7a0b\n[NSThread mainThread];\n//\u7ebf\u7a0b\u4f11\u77202\u79d2\n[NSThread sleepForTimeinterval:2];&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code&gt;//\u521d\u59cb\u5316\u4e00\u4e2a\u7ebf\u7a0b\u5e76\u4e14\u81ea\u52a8\u5f00\u542f\n+ (void)detachNewThreadSelector:(SEL)selector toTarget:(id)target withObject:(nullable id)argument;&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;\u6ce8\u610f\u4e8b\u9879&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;\n&lt;p&gt;\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u7ef4\u62a4\u7740\u4e0e\u81ea\u5df1\u5bf9\u5e94\u7684NSAutoreleasePool\u5bf9\u7ebf\uff0c\u5c06\u5176\u653e\u5728\u7ebf\u7a0b\u7684\u6808\u9876\u3002\u5f53\u7ebf\u7a0b\u7ed3\u675f\u65f6\uff0c\u4f1a\u6e05\u7a7a\u81ea\u52a8\u91ca\u653e\u6c60\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;\u4e3a\u4fdd\u8bc1\u5bf9\u8c61\u7684\u53ca\u65f6\u91ca\u653e\uff0c \u5728\u591a\u7ebf\u7a0b\u65b9\u6cd5\u4e2d\u9700\u8981\u6dfb\u52a0\u81ea\u52a8\u91ca\u653e\u6c60&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;\u5728\u5e94\u7528\u7a0b\u5e8f\u6253\u5f00\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u4e3a\u4e3b\u7ebf\u7a0b\u521b\u5efa\u4e00\u4e2a\u81ea\u52a8\u91ca\u653e\u6c60\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;\u6211\u4eec\u624b\u52a8\u521b\u5efa\u7684\u5b50\u7ebf\u7a0b\u9700\u8981\u6211\u4eec\u624b\u52a8\u6dfb\u52a0\u5230\u81ea\u52a8\u91ca\u653e\u6c60&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;ARC\u8bf7\u65e0\u89c6\u4e4b\uff0c \u4e86\u89e3\u4e00\u4e0b\u5185\u90e8\u5b9e\u73b0\u7684\u6d41\u7a0b&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h3&gt;NSObject&lt;/h3&gt;\n&lt;p&gt;NSObject\u4e2d\u5b58\u5728\u4e86\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u540e\u53f0\u6267\u884c\u65b9\u6cd5&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;//\u540e\u53f0\u6267\u884c\u67d0\u4e2a\u65b9\u6cd5\n- (void)performSelectorInBackground:(SEL)aSelector withObject:(nullable id)arg&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;NSOperation&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;\n&lt;p&gt;NSOperation\u7c7b\uff0c\u5728\u7ecf\u5178MVC\u4e2d\u5c5e\u4e8eM\uff0c\u662f\u7528\u6765\u5c01\u88c5\u5355\u4e2a\u4efb\u52a1\u7684\u4ee3\u7801\u548c\u6570\u636e\u7684\u62bd\u8c61\u7c7b&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;\u56e0\u4e3a\u662f\u62bd\u8c61\u7684\uff0c\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u7c7b\uff0c\u800c\u662f\u4f7f\u7528\u5b50\u7c7b\u6765\u6267\u884c\u4efb\u52a1&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;NSOperation\uff08\u542b\u5b50\u7c7b\uff09\uff0c\u53ea\u662f\u4e00\u4e2a\u64cd\u4f5c\uff0c\u672c\u8eab\u65e0\u4e3b\u7ebf\u7a0b\uff0c\u5b50\u7ebf\u7a0b\u4e4b\u5206\uff0c\u53ef\u4ee5\u518d\u4efb\u610f\u7684\u7ebf\u7a0b\u4e2d\u4f7f\u7528\u3002\u901a\u5e38\u4e0eNSOperationQueue\u7efc\u5408\u4f7f\u7528\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul&gt;\n&lt;li&gt;NSOperation\u7684\u5b50\u7c7b&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;NSInvocationOperation --&amp;gt; \u5c01\u88c5\u4e86\u6267\u884c\u64cd\u4f5c\u7684target\u548c\u8981\u6267\u884c\u7684action&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;NSInvocationOperation * io = [[NSInvocationOperation alloc]initWithTarget:self selector:@selector(test) object:nil];\n\n[io start];&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;NSBlockOperation --&amp;gt;\u5c01\u88c5\u4e86\u9700\u8981\u6267\u884c\u7684\u4ee3\u7801\u5757\uff08\u56de\u8c03\uff09&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;NSBlockOperation * bo = [[NSBlockOperation blockOperationWithBlock:^&#123;\n        NSLog:(@\"\u5f53\u524d\u662f:%@, \u662f\u5426\u4e3b\u7ebf\u7a0b:%d\",\n            [NSThread currentThread],[[NSThread currentThread] isMainThread])];\n\n[bo start];&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;NSOperationQueue&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;\n&lt;p&gt;\u64cd\u4f5c\u961f\u5217\uff0c\u7528\u6765\u7ba1\u7406\u4e00\u7ec4Operation\u5bf9\u8c61\u7684\u6267\u884c\uff0c\u4f1a\u6839\u636e\u9700\u8981\u81ea\u52a8\u4e3aOperation\u5f00\u8f9f\u5408\u9002\u6570\u91cf\u7684\u7ebf\u7a0b\uff0c\u4ee5\u5b8c\u6210\u4efb\u52a1\u7684\u5e76\u884c\u6267\u884c\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;\u5176\u4e2dNSOperation\u53ef\u4ee5\u8c03\u8282\u5b83\u5728\u961f\u5217\u4e2d\u7684\u4f18\u5148\u7ea7\uff08\u4f7f\u7528addDependency\uff1a\u8bbe\u7f6e\u4f9d\u8d56\u5173\u7cfb\uff09&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;\u5f53\u6700\u5927\u5e76\u53d1\u6570\u8bbe\u7f6e\u4e3a1\u7684\u65f6\u5019\uff0c\u80fd\u5b9e\u73b0\u7ebf\u7a0b\u540c\u6b65\uff08\u4e32\u884c\u6267\u884c\uff09\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;pre&gt;&lt;code&gt;NSOperationQueue * queue = [[NSOperationQueue alloc] init];\n\n//\u8bbe\u7f6e\u6700\u5927\u5e76\u53d1\u6570\nqueue.maxConcurrentOperationCount = 1;\n\nfor(int i = 0, i &amp;lt; 10, i++) &#123;\nNSBlockOperation * open1 = [NSBlockOperation blockOperationWithBlock:^&#123;\n        NSLog:(@\"\u5f53\u524d\u662f:%@, \u662f\u5426\u4e3b\u7ebf\u7a0b:%d\",\n           [NSThread currentThread],[[NSThread currentThread] isMainThread])];\n&#125;];\n[queue addOperation:open1];\n&#125;&lt;/code&gt;&lt;/pre&gt;\n&lt;h2&gt;GCD\u4ecb\u7ecd&lt;/h2&gt;\n&lt;pre&gt;&lt;code&gt;Grand Central Dispatch&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;\u5149\u542c\u540d\u5b57\u5c31\u8ba9\u4eba\u89c9\u5f97\u597d\u9ad8\u7aef\u4e86233333\ud83d\ude04\uff0c\u6211\u6bcf\u6b21\u542c\u5230\u8fd9\u4e2a\u540d\u5b57\u90fd\u4f1a\u60f3\u5230\u54e5\u8c2d\u7684CCPD\u554a2333\u3002\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u6211\u4eec\u6765\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u4ec0\u4e48\u662fGCD\uff0c\u5b83\u53c8\u662f\u5982\u4f55\u9ad8\u5927\u4e0a\u7684&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;\n&lt;p&gt;GCD\u662fApple\u5f00\u53d1\u7684\u4e00\u79cd\u591a\u6838\u7f16\u7a0b\u6280\u672f\u3002\u4e3b\u8981\u7528\u4e8e\u4f18\u5316\u5e94\u7528\u7a0b\u5e8f\u4ee5\u652f\u6301\u591a\u6838\u5904\u7406\u5668\u4ee5\u53ca\u5176\u4ed6\u5bf9\u79f0\u5904\u7406\u7cfb\u7edf\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;GCD\u63d0\u4f9b\u51fd\u6570\u5b9e\u73b0\u591a\u7ebf\u7a0b\u5f00\u53d1\uff0c \u6027\u80fd\u66f4\u9ad8\uff0c \u529f\u80fd\u4e5f\u8981\u66f4\u5f3a\u5927\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;\u9996\u6b21\u53d1\u5e03\u5728MAC OS X 10.6\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h3&gt;GCD\u6838\u5fc3\u7406\u5ff5&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;\n&lt;p&gt;\u4efb\u52a1 \uff1a\u5177\u6709\u4e00\u5b9a\u529f\u80fd\u7684\u4ee3\u7801\u6bb5\u3002\u4e00\u822c\u662f\u4e00\u4e2ablock\u6216\u8005\u51fd\u6570&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;\u5206\u53d1\u961f\u5217\uff1a GCD\u4ee5\u961f\u5217\u7684\u65b9\u5f0f\u7ecf\u884c\u5de5\u4f5c\uff0cFIFO&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;GCD\u4f1a\u6839\u636e\u5206\u53d1\u961f\u5217\u7684\u7c7b\u578b\uff0c\u521b\u5efa\u5408\u9002\u6570\u91cf\u7684\u7ebf\u7a0b\u6267\u884c\u961f\u5217\u4e2d\u7684\u4efb\u52a1\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h3&gt;GCD\u4e2d\u4e24\u79cd\u961f\u5217&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;\n&lt;p&gt;dispatch queue\u5206\u4e3a\u4e00\u4e0b\u4e24\u79cd\uff1a&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;SerialQueue\uff1a\u4e00\u6b21\u53ea\u6267\u884c\u4e00\u4e2a\u4efb\u52a1\u3002\u5e38\u7528\u4e8e\u540c\u6b65\u8bbf\u95ee\u6570\u636e\uff0c\u5f53\u521b\u5efa\u591a\u4e2a\u65f6\uff0c\u867d\u7136SerialQueue\u662f\u540c\u6b65\u6267\u884c\uff0c\u4f46\u5374\u662f\u5e76\u53d1\u7684\uff0c\u53ef\u4ee5\u5b9e\u73b0\u7ebf\u7a0b\u540c\u6b65\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;Concurrent \uff1a\u53ef\u4ee5\u5e76\u53d1\u5730\u6267\u884c\u591a\u4e2a\u4efb\u52a1\uff0c\u4f46\u662f\u9075\u5b88FIFO&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;pre&gt;&lt;code&gt;//\u4e32\u884c\ndispatch_queue_t queue = dispatch_get_main_queue();\n dispatch_async(queue, ^&#123;\n     NSLog:(@\"\u7b2c\u4e00\u4e2a\u4efb\u52a1\uff0c\u5f53\u524d\u662f:%@, \u662f\u5426\u4e3b\u7ebf\u7a0b:%d\",\n        [NSThread currentThread],[[NSThread   currentThread] isMainThread])];\n    &#125;);&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code&gt;//\u83b7\u53d6\u4e32\u884c\u7684\u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff0c\u81ea\u5df1\u521b\u5efa\u961f\u5217\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u961f\u5217\u7684\u540d\u5b57\uff08\u82f9\u679c\u63a8\u8350\u4f7f\u7528\u53cd\u5411\u57df\u540d\u53bb\u547d\u540d\uff09\uff0c\n//\u7b2c\u4e8c\u4e2a\u662f\u53c2\u6570\u961f\u5217\u7684\u7c7b\u578b\uff0c\u8fd9\u79cd\u65b9\u5f0f\u521b\u5efa\u7684\u961f\u5217\uff0c\u5b83\u4f1a\u81ea\u5df1\u53bb\u5f00\u8f9f\u4e00\u4e2a\u5b50\u7ebf\u7a0b\u53bb\u5b8c\u6210\u961f\u5217\u91cc\u9762\u7684\u4efb\u52a1\ndispatch_queue_t queue = \ndispatch_queue_create(\"com.baidu.mySerialQueue\", DISPATCH_QUEUE_SERIAL);\ndispatch_async(queue, ^&#123;\nNSLog(@\"\u8fd9\u662f\u7b2c\u4e00\u4e2a\u4efb\u52a1\uff0c\u5f53\u524d\u7ebf\u7a0b\u662f\uff1a%@,\u662f\u5426\u4e3b\u7ebf\u7a0b\uff1a%d \",\n[NSThread currentThread], [[NSThread currentThread]isMainThread]);\n&#125;);&lt;/code&gt;&lt;/pre&gt;\n&lt;h4&gt;\u5e76\u884c\u961f\u5217\u4ee3\u7801&lt;/h4&gt;\n&lt;pre&gt;&lt;code&gt;\u591a\u7ebf\u7a0b.key\n\n// \u7b2c\u4e00\u79cd\u65b9\u5f0f\n// global queue \u662f\u82f9\u679c\u91cc\u9762\u7684\u5168\u5c40\u961f\u5217 \u67094\u79cd\u4f18\u5148\u7ea7\n     DISPATCH_QUEUE_PRIORITY_DEFAUL,\n     DISPATCH_QUEUE_PRIORITY_HIGH,\n     DISPATCH_QUEUE_PRIORITY_LOW,\n     DISPATCH_QUEUE_PRIORITY_BACKGROUND\n// \u7b2c\u4e00\u4e2a\u53c2\u6570\u5c31\u662f\u961f\u5217\u7684\u4f18\u5148\u7ea7\uff0c\u7b2c\u4e8c\u4e2a\u662f\u82f9\u679c\u9884\u7559\u7684\u53c2\u6570\u4e3a\u4e86\u4ee5\u540e\u4f7f\u7528\uff0c\u76ee\u524d\u7528\u4e0d\u5230\uff0c\u586b0\ndispatch_queue_t oneQueue =dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT,0);\ndispatch_async(oneQueue, ^&#123;NSLog(@\"\u7ebf\u7a0b\u662f\uff1a%@\uff0c\u662f\u5426\u4e3b\u7ebf\u7a0b\uff1a%d\",\n [NSThread currentThread], [[NSThread currentThread]\n isMainThread]);\n &#125;);&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code&gt;\u591a\u7ebf\u7a0b.key\n\n//\u7b2c\u4e8c\u79cd\u521b\u5efa\u5e76\u53d1\u961f\u5217\u7684\u65b9\u5f0f\uff1a\ndispatch_queue_t twoQueue =dispatch_queue_create(\"com.lanou3g.myQueue\",DISPATCH_QUEUE_CONCURRENT);\n// \u6dfb\u52a0\u4efb\u52a1\ndispatch_async(twoQueue, ^&#123;\nNSLog(@\"\u7ebf\u7a0b\uff1a%@, \u662f\u5426\u4e3b\u7ebf\u7a0b\uff1a%d\", \n[NSThread currentThread], [[NSThreadcurrentThread] isMainThread]);\n&#125;);&lt;/code&gt;&lt;/pre&gt;\n&lt;h5&gt;\u5ef6\u8fdf\u6267\u884c&lt;/h5&gt;\n&lt;pre&gt;&lt;code&gt;// \u5ef6\u8fdf\u6267\u884c\u4e00\u6bb5\u4ee3\u7801\ndispatch_after(dispatch_time(DISPATCH_TIME_NOW,(int64_t)(3 * NSEC_PER_SEC)),dispatch_get_main_queue(), ^&#123;\nNSLog(@\"%@, %d\", \n[NSThread currentThread], [[NSThreadcurrentThread] isMainThread]);\n&#125;);&lt;/code&gt;&lt;/pre&gt;\n&lt;h3&gt;GCD\u529f\u80fd&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;\n&lt;p&gt;dispatch_async() //\u5f80\u961f\u5217\u4e2d\u6dfb\u52a0\u4efb\u52a1\uff0c\u4efb\u52a1\u4f1a\u6392\u961f\u6267\u884c &lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;dispatch_after() //\u5f80\u961f\u5217\u4e2d\u6dfb\u52a0\u4efb\u52a1\uff0c\u4efb\u52a1\u6392\u961f\u4e14\u5ef6\u8fdf\u6267\u884c&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;dispatch_apply() //\u5f80\u961f\u5217\u4e2d\u6dfb\u52a0\u4efb\u52a1\uff0c\u4efb\u52a1\u91cd\u590d\u6267\u884c&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;pre&gt;&lt;code&gt; dispatch_apply(3, dispatch_get_main_queue(), ^(size_t index) &#123;\n NSLog(@\"%d\",index); &#125;);&lt;/code&gt;&lt;/pre&gt;\n&lt;ul&gt;\n&lt;li&gt;\n&lt;p&gt;dispatch_group_async() //\u5f80\u961f\u5217\u4e2d\u6dfb\u52a0\u4efb\u52a1\uff0c\u5e76\u6dfb\u52a0\u5206\u7ec4\u6807\u8bb0&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;dispatch_group_notify() //\u5f80\u961f\u5217\u4e2d\u6dfb\u52a0\u4efb\u52a1\uff0c\u5f53\u67d0\u4e2a\u5206\u7ec4\u7684\u6240\u6709\u4efb\u52a1\u6267\u884c\u5b8c\u4e4b\u540e\uff0c\u6b64\u4efb\u52a1\u624d\u6267\u884c&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;dispatch_barrier_async() //\u5f80\u961f\u5217\u4e2d\u6dfb\u52a0\u4efb\u52a1\uff0c\u6b64\u4efb\u52a1\u6267\u884c\u7684\u65f6\u5019\uff0c\u5176\u4ed6\u4efb\u52a1\u505c\u6b62&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;pre&gt;&lt;code&gt;//1\u521b\u5efa\u961f\u5217\n dispatch_queue_t queue =dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT,0);\n//2\u521b\u5efa\u7956\ndispatch_group_t group = dispatch_group_create();\n//3notify\u4e4b\u524d\u6700\u8d77\u7801\u9700\u8981\u4e00\u4e2a\u4efb\u52a1\uff0c\u5426\u5219notify\u4e0d\u4f1a\u7b49\u5176\u4ed6\u6267\u884c\u5b8c\u624d\u6267\u884c\ndispatch_group_async(group, queue, ^&#123;NSLog(@\"\u7ebf\u7a0b\u662f\uff1a%@\uff0c \u662f\u5426\u4e3b\u7ebf\u7a0b\uff1a%d\", \n[NSThread\ncurrentThread], [[NSThread currentThread] isMainThread]); &#125;);\ndispatch_group_notify(group, queue, ^&#123;NSLog(@\"\u6211\u662f\u6700\u540e\u4e00\u4e2a\u4efb\u52a1\uff0c\u5176\u4ed6\u6267\u884c\u5b8c\u6211\u624d\u6267\u884c\");\n&#125;);&lt;/code&gt;&lt;/pre&gt;\n&lt;ul&gt;\n&lt;li&gt;\n&lt;p&gt;dispatch_once() //\u5f80\u961f\u5217\u4e2d\u6dfb\u52a0\u4efb\u52a1\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u4e2d\uff0c\u53ea\u6267\u884c\u4e00\u6b21&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;dispatch_sync() //\u5f80\u961f\u5217\u4e2d\u6dfb\u52a0\u4efb\u52a1\uff0cblock\u4e0d\u6267\u884c\uff0c\u4e0b\u9762\u4ee3\u7801\u4e0d\u6267\u884c&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;dispatch_async_f() //\u5f80\u961f\u5217\u4e2d\u6dfb\u52a0\u4efb\u52a1\uff0c\u4efb\u52a1\u662f\u51fd\u6570\u4e0d\u662fblock&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h3&gt;\u7ebf\u7a0b\u95f4\u7684\u901a\u4fe1&lt;/h3&gt;\n&lt;ul&gt;\n&lt;li&gt;\n&lt;p&gt;\u4e3b\u7ebf\u7a0b\u8fdb\u5165\u5b50\u7ebf\u7a0b&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;\u5b50\u7ebf\u7a0b\u56de\u5230\u4e3b\u7ebf\u7a0b&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;GCD\uff1adispatch_get_main_queue();\nNSObjec:- (void)performSelectorOnMainThread:(SEL)aSelector withObject:(nullable id)arg waitUntilDone:(BOOL)wait;&lt;/code&gt;&lt;/pre&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h4&gt;\u7ebf\u7a0b\u4e92\u65a5&lt;/h4&gt;\n&lt;p&gt;\u591a\u7ebf\u7a0b\u5e76\u884c\u7f16\u7a0b\u4e2d\uff0c\u7f16\u7a0b\u95f4\u540c\u6b65\u4e92\u65a5\u662f\u4e00\u4e2a\u5f88\u6709\u6280\u5de7\u7684\u4e5f\u5f88\u5bb9\u6613\u51fa\u9519\u7684\u5730\u65b9\u3002&lt;br&gt;\u7ebf\u7a0b\u4e92\u65a5\u5e94\u5bf9\u7684\u662f\u8fd9\u79cd\u573a\u666f\uff1a&lt;br&gt;\u591a\u4e2a\u7ebf\u7a0b\u64cd\u4f5c\u540c\u4e00\u4e2a\u8d44\u6e90\uff08\u975e\u5bf9\u8c61\uff09\uff0c\u9700\u8981\u4fdd\u8bc1\u7ebf\u7a0b\u5728\u5bf9\u8d44\u6e90\u7684\u72b6\u6001\u8fdb\u884c\u4e00\u4e9b\u975e\u539f\u5b50\u7684\u64cd\u4f5c\u540e\uff0c\u72b6\u6001\u4ecd\u7136\u6b63\u786e\u3002&lt;/p&gt;\n&lt;/div&gt;"</span></span>&#125;,</span><br><span class="line">  &#123;"<span class="attribute">title</span>": <span class="value"><span class="string">"\u7ffb\u8bd1\uff1aCFNetwork\u7f16\u7a0b\u6307\u5357\uff08CFNetwork Programming Guide\uff09"</span></span>, "<span class="attribute">link</span>": <span class="value"><span class="string">"http://www.jianshu.com/p/69b181a33383"</span></span>, "<span class="attribute">show-content</span>": <span class="value"><span class="string">"&lt;div class=\"show-content\"&gt;&lt;p&gt;CFNetwork\u662f\u6838\u5fc3\u670d\u52a1\u6846\u67b6\u4e2d\u7684\u4e00\u4e2a\u6846\u67b6\uff0c\u63d0\u4f9b\u4e86\u62bd\u8c61\u6982\u5ff5\u7684\u7f51\u7edc\u534f\u8bae\u5e93\u3002\u8fd9\u4e9b\u62bd\u8c61\u6982\u5ff5\u4f7f\u5f97\u6267\u884c\u5404\u79cd\u7f51\u7edc\u4efb\u52a1\u53d8\u5f97\u66f4\u5bb9\u6613\uff0c\u4f8b\u5982\uff1a&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;\n&lt;p&gt;\u4f7f\u7528BSD\u5957\u63a5\u5b57&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;\u4f7f\u7528SSL\u6216TLS\u521b\u5efa\u52a0\u5bc6\u8fde\u63a5&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;\u89e3\u6790DNS\u4e3b\u673a&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;\u4f7f\u7528HTTP\uff0c\u9a8c\u8bc1HTTP\u548cHTTP\u670d\u52a1\u5668&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;\u4f7f\u7528FTP\u670d\u52a1\u5668&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;\u53d1\u5e03\u3001\u89e3\u6790\u548c\u6d4f\u89c8Bonjour \u670d\u52a1\uff08NSNetServices\u548cCFNetServices\u7f16\u7a0b\u6307\u5357( &lt;a href=\"https://developer.apple.com/library/ios/documentation/Networking/Conceptual/NSNetServiceProgGuide/Introduction.html#//apple_ref/doc/uid/TP40002736\" target=\"_blank\"&gt;NSNetServices and CFNetServices Programming Guide&lt;/a&gt;\u4e2d\u6709\u8ba8\u8bba\uff09\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;\u672c\u6587\u662f\u9488\u5bf9\u60f3\u5728\u5e94\u7528\u4e2d\u4f7f\u7528\u7f51\u7edc\u534f\u8bae\u7684\u5f00\u53d1\u4eba\u5458\u3002\u4e3a\u4e86\u5b8c\u5168\u7406\u89e3\u672c\u6587\uff0c\u8bfb\u8005\u5e94\u8be5\u5bf9\u7f51\u7edc\u7f16\u7a0b\u6982\u5ff5\u5982BSD\u5957\u63a5\u5b57\u3001\u6d41\u548cHTTP\u534f\u8bae\u6709\u5f88\u597d\u7684\u7406\u89e3\u3002\u6b64\u5916\uff0c\u8bfb\u8005\u5e94\u719f\u6089OS X\u7f16\u7a0b\u6982\u5ff5\u5305\u62ec\u8fd0\u884c\u5faa\u73af\u3002\u5173\u4e8eOS X\u66f4\u591a\u4fe1\u606f\u8bf7\u9605\u8bfbOS X\u6280\u672f\u6982\u8ff0\u3002&lt;/p&gt;\n&lt;h3&gt;\u672c\u6587\u7ec4\u7ec7\u7ed3\u6784&lt;/h3&gt;\n&lt;p&gt;\u672c\u6587\u5305\u542b\u4ee5\u4e0b\u7ae0\u8282\uff1a&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;\n&lt;p&gt;&lt;a href=\"http://www.jianshu.com/p/5a2a219ec878\" target=\"_blank\"&gt;CFNetwork\u6982\u5ff5&lt;/a&gt;\uff08&lt;a href=\"https://developer.apple.com/library/ios/documentation/Networking/Conceptual/CFNetwork/Concepts/Concepts.html#//apple_ref/doc/uid/TP30001132-CH4-SW10\" target=\"_blank\"&gt;&lt;strong&gt;CFNetwork Concepts&lt;/strong&gt;&lt;/a&gt; \uff09\u63cf\u8ff0\u4e86\u6bcf\u4e2aCFNetwork API\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u4ea4\u4e92\u7684\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;&lt;a href=\"http://www.jianshu.com/p/f6f99ddccbb5\" target=\"_blank\"&gt;\u4f7f\u7528\u6d41&lt;/a&gt;\uff08&lt;a href=\"https://developer.apple.com/library/ios/documentation/Networking/Conceptual/CFNetwork/CFStreamTasks/CFStreamTasks.html#//apple_ref/doc/uid/TP30001132-CH6-SW1\" target=\"_blank\"&gt;&lt;strong&gt;Working with Streams&lt;/strong&gt;&lt;/a&gt; \uff09\u63cf\u8ff0\u4e86\u5982\u4f55\u4f7f\u7528CFStream API\u6765\u53d1\u9001\u548c\u63a5\u6536\u7f51\u7edc\u6570\u636e\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;&lt;a href=\"http://www.jianshu.com/p/9f882137bb85\" target=\"_blank\"&gt;\u4e0eHTTP\u670d\u52a1\u5668\u901a\u4fe1&lt;/a&gt;\uff08&lt;a href=\"https://developer.apple.com/library/ios/documentation/Networking/Conceptual/CFNetwork/CFHTTPTasks/CFHTTPTasks.html#//apple_ref/doc/uid/TP30001132-CH5-SW2\" target=\"_blank\"&gt;&lt;strong&gt;Communicating with HTTP Servers&lt;/strong&gt;&lt;/a&gt; \uff09\u63cf\u8ff0\u4e86\u5982\u4f55\u53d1\u9001\u548c\u63a5\u6536HTTP\u6d88\u606f\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;&lt;a href=\"http://www.jianshu.com/p/01e4c788d0b1\" target=\"_blank\"&gt;\u4e0e\u8eab\u4efd\u9a8c\u8bc1HTTP\u670d\u52a1\u5668\u901a\u4fe1&lt;/a&gt;\uff08&lt;a href=\"https://developer.apple.com/library/ios/documentation/Networking/Conceptual/CFNetwork/CFHTTPAuthenticationTasks/CFHTTPAuthenticationTasks.html#//apple_ref/doc/uid/TP30001132-CH8-SW1\" target=\"_blank\"&gt;&lt;strong&gt;Communicating with Authenticating HTTP Servers&lt;/strong&gt;&lt;/a&gt;\uff09\u63cf\u8ff0\u4e86\u5982\u4f55\u4e0e\u5b89\u5168HTTP\u670d\u52a1\u5668\u901a\u4fe1\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;&lt;a href=\"http://www.jianshu.com/p/ca3ca9e6c1a8\" target=\"_blank\"&gt;\u4f7f\u7528FTP\u670d\u52a1\u5668&lt;/a&gt;\uff08&lt;a href=\"https://developer.apple.com/library/ios/documentation/Networking/Conceptual/CFNetwork/CFFTPTasks/CFFTPTasks.html#//apple_ref/doc/uid/TP30001132-CH9-SW1\" target=\"_blank\"&gt;&lt;strong&gt;Working with FTP Servers&lt;/strong&gt;&lt;/a&gt;\uff09\u63cf\u8ff0\u4e86\u5982\u4f55\u4ece\u4e00\u4e2aFTP\u670d\u52a1\u5668\u4e0a\u4e0a\u4f20\u548c\u4e0b\u8f7d\u6587\u4ef6\uff0c\u4ee5\u53ca\u5982\u4f55\u4e0b\u8f7d\u76ee\u5f55\u5217\u8868\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;&lt;a href=\"http://www.jianshu.com/p/492f27d5e663\" target=\"_blank\"&gt;\u4f7f\u7528\u7f51\u7edc\u8bca\u65ad&lt;/a&gt;\uff08&lt;a href=\"https://developer.apple.com/library/ios/documentation/Networking/Conceptual/CFNetwork/UsingNetworkDiagnostics/UsingNetworkDiagnostics.html#//apple_ref/doc/uid/TP30001132-CH7-SW1\" target=\"_blank\"&gt;&lt;strong&gt;Using Network Diagnostics&lt;/strong&gt;&lt;/a&gt; \uff09\u63cf\u8ff0\u4e86\u5982\u4f55\u4e3a\u5e94\u7528\u6dfb\u52a0\u7f51\u7edc\u8bca\u65ad\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h3&gt;\u53e6\u8bf7\u53c2\u9605&lt;/h3&gt;\n&lt;p&gt;\u5173\u4e8eOS X\u7f51\u7edcAPI\u66f4\u591a\u4fe1\u606f\uff0c\u53ef\u67e5\u770b\uff1a&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;em&gt;\u5f00\u59cb\u4f7f\u7528\u7f51\u7edc&lt;/em&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;\u8bf7\u53c2\u8003\u4e0b\u9762\u7684CFNetwork\u53c2\u8003\u6587\u6863\uff1a&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;\n&lt;p&gt;CFFTPStream \u5f15\u7528\uff08&lt;a href=\"https://developer.apple.com/library/ios/documentation/CoreFoundation/Reference/CFFTPStreamRef/index.html#//apple_ref/doc/uid/TP40003359\" target=\"_blank\"&gt;CFFTPStream Reference&lt;/a&gt;\uff09\u662fCFFTPStream API\u7684\u53c2\u8003\u6587\u6863\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;CFHTTPMessage \u5f15\u7528\uff08&lt;a href=\"https://developer.apple.com/library/ios/documentation/CoreFoundation/Reference/CFMessageRef/index.html#//apple_ref/doc/uid/TP40003336\" target=\"_blank\"&gt;CFHTTPMessage Reference&lt;/a&gt;\uff09\u662fCFHTTPMessage API\u7684\u53c2\u8003\u6587\u6863\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;CFHTTPStream \u5f15\u7528\uff08&lt;a href=\"https://developer.apple.com/library/ios/documentation/CoreFoundation/Reference/CFHTTPStreamRef/index.html#//apple_ref/doc/uid/TP40003363\" target=\"_blank\"&gt;CFHTTPStream Reference&lt;/a&gt;\uff09\u662fCFHTTPStream API\u7684\u53c2\u8003\u6587\u6863\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;CFHTTPAuthentication \u5f15\u7528\uff08&lt;a href=\"https://developer.apple.com/library/ios/documentation/CoreFoundation/Reference/CFHTTPAuthenticationRef/index.html#//apple_ref/doc/uid/TP40003335\" target=\"_blank\"&gt;CFHTTPAuthentication Reference&lt;/a&gt;\uff09\u662fCFHTTPAuthentication API\u7684\u53c2\u8003\u6587\u6863\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;CFHost \u5f15\u7528\uff08&lt;a href=\"https://developer.apple.com/library/ios/documentation/CoreFoundation/Reference/CFHostRef/index.html#//apple_ref/doc/uid/TP40003333\" target=\"_blank\"&gt;CFHost Reference&lt;/a&gt;\uff09\u662fCFHost API\u7684\u53c2\u8003\u6587\u6863\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;CFNetServices \u5f15\u7528\uff08&lt;a href=\"https://developer.apple.com/library/ios/documentation/CoreFoundation/Reference/CFNetServiceRef/index.html#//apple_ref/doc/uid/TP40003365\" target=\"_blank\"&gt;CFNetServices Reference&lt;/a&gt;\uff09\u662fCFNetServices API\u7684\u53c2\u8003\u6587\u6863\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;CFNetDiagnostics\u5f15\u7528\uff08&lt;a href=\"https://developer.apple.com/library/ios/documentation/CoreFoundation/Reference/CFNetDiagnosticsRef/index.html#//apple_ref/doc/uid/TP40003364\" target=\"_blank\"&gt;CFNetDiagnostics Reference&lt;/a&gt;\uff09\u662fCFNetDiagnosticsAPI\u7684\u53c2\u8003\u6587\u6863\u3002&lt;/p&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;\u9664\u4e86\u82f9\u679c\u63d0\u4f9b\u7684\u6587\u6863\uff0c\u4e0b\u9762\u662fsocket\u7ea7\u522b\u7f16\u7a0b\u7684\u53c2\u8003\u4e66\uff1a&lt;/p&gt;\n&lt;p&gt;UNIX\u7f51\u7edc\u7f16\u7a0b\uff0c\u53771\uff08Stevens, Fenner and Rudoff\uff09&lt;/p&gt;\n&lt;h3&gt;\u5b98\u65b9\u539f\u6587\u5730\u5740\uff1a&lt;/h3&gt;\n&lt;p&gt;&lt;a href=\"https://developer.apple.com/library/ios/documentation/Networking/Conceptual/CFNetwork/Introduction/Introduction.html\" target=\"_blank\"&gt;https://developer.apple.com/library/ios/documentation/Networking/Conceptual/CFNetwork/Introduction/Introduction.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;"</span></span>&#125;,</span><br><span class="line">  &#123;"<span class="attribute">title</span>": <span class="value"><span class="string">"XMPP\u642d\u5efa\u672c\u5730\u670d\u52a1\u5668\u3001\u5b9e\u73b0\u5373\u65f6\u901a\u8baf\uff08\u4e00\uff09"</span></span>, "<span class="attribute">link</span>": <span class="value"><span class="string">"http://www.jianshu.com/p/5ea6b611c5b1"</span></span>, "<span class="attribute">show-content</span>": <span class="value"><span class="string">"&lt;div class=\"show-content\"&gt;&lt;p&gt;XMPP\u642d\u5efa\u672c\u5730\u670d\u52a1\u5668\u80fd\u591f\u5b9e\u73b0\u5373\u65f6\u901a\u8baf\u7684\u529f\u80fd\uff0c\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u505a\u5462\uff1f\u4e0b\u9762\u6211\u4eec\u5c31\u4e00\u8d77\u8d70\u4e00\u904d\uff01&lt;br&gt;\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u5b89\u88c5\u4e00\u4e2a\u53eb\u505aOpenfile\u7684\u8f6f\u4ef6 \u5b89\u88c5\u6210\u529f\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u5728\u7535\u8111\u7684\u7cfb\u7edf\u504f\u597d\u8bbe\u7f6e\u91cc\u9762\u6253\u5f00\u8fd9\u4e2a\u8f6f\u4ef6&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1421018-13161447165b615d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1421018-13161447165b615d.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;p&gt;&lt;br&gt;\u7136\u540e\u70b9\u51fb\u6253\u5f00 Status\u663e\u793aRunning\u8868\u793a\u670d\u52a1\u6253\u5f00&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1421018-a074c8c89e1b38fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1421018-a074c8c89e1b38fb.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;p&gt;&lt;br&gt;\u7136\u540e\u70b9\u51fbOpen Admin Console \u6253\u5f00Openfile\u7684\u63a7\u5236\u5e73\u53f0\u8fdb\u884c\u76f8\u5173\u914d\u7f6e\u9009\u62e9-&amp;gt;\u7b80\u4f53\u4e2d\u6587\u70b9\u51fb-&amp;gt; Continue&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1421018-f1fb114d418971f6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1421018-f1fb114d418971f6.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;p&gt;&lt;br&gt;\u7136\u540e\u57df\u540d\u4e3a127.0.0.1\uff08\u672c\u673a\u4f5c\u4e3a\u670d\u52a1\u5668\uff09&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1421018-1d3b3e81a3b1a892.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1421018-1d3b3e81a3b1a892.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;Openfile\u9700\u8981\u94fe\u63a5\u4e00\u4e2a\u6570\u636e\u5e93\u6765\u5b58\u50a8\u6211\u4eec\u7684\u8d26\u53f7\u4fe1\u606f\uff0c\u4ee5\u53ca\u804a\u5929\u7684\u8bb0\u5f55&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1421018-22d9d67e7e552d9b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1421018-22d9d67e7e552d9b.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;p&gt;&lt;br&gt;\u6211\u4eec\u524d\u5f80\u6587\u4ef6\u5939\uff1a/usr/local \u70b9\u51fbOpenfile-&amp;gt;\u663e\u793a\u7b80\u4ecb\uff0c\u5c06\u5176\u8bbf\u95ee\u6743\u9650\u6539\u6210-&amp;gt;\u8bfb\u4e0e\u5199,\u63a5\u4e0b\u6765\u70b9\u51fbresource-&amp;gt;database-&amp;gt;openfile_mysql.sql\u8fd9\u4e2a\u6587\u4ef6\u5c31\u662f\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u7528\u7684\uff0c\u7c98\u8d34\u5230\u684c\u9762&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1421018-75eac9b7dfb482a7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1421018-75eac9b7dfb482a7.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;\u4f46\u662f\u6211\u4eec\u600e\u4e48\u94fe\u63a5\u6570\u636e\u5e93\u5462\uff1f\u8fd9\u4e2a\u65f6\u5019\u9700\u8981\u6211\u4eec\u5b89\u88c5\u4e00\u4e2aXAMPP\u7684\u96c6\u6210\u73af\u5883\uff0cXAMPP\u91cc\u9762\u96c6\u6210\u7684\u5c31\u6709MySQL\uff0c\u4e0d\u8fc7\u4fdd\u8bc1\u4e09\u4e2a\u670d\u52a1\u90fd\u662f\u5f00\u542f\u7684&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1421018-23f13ffc053a47b8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1421018-23f13ffc053a47b8.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;p&gt;&lt;br&gt;\u7136\u540e\u70b9\u51fbwelcome-&amp;gt;Go ToApplication-&amp;gt;phpMyAdmin\u8fdb\u884cMySQL\u7684\u914d\u7f6e&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1421018-33e0c9131b1012df.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1421018-33e0c9131b1012df.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;p&gt;&lt;br&gt;\u65b0\u5efa\u6570\u636e\u5e93\uff0c\u5728\u6b64\u4e3a\u4f8b\u53d6\u540d\u4e3aliugaojian \u70b9\u51fbliugaojian\u6211\u4eec\u53d1\u73b0\u91cc\u9762\u4ec0\u4e48\u4e5f\u6ca1\u6709 \u6211\u4eec\u5c31\u9700\u8981\u5bfc\u5165\u6211\u4eec\u4e4b\u524d\u684c\u9762\u7684openfile_mysql.sql\u6587\u4ef6&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1421018-c07a16e4e0348e1b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1421018-c07a16e4e0348e1b.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;p&gt;&lt;br&gt;\u70b9\u51fb-&amp;gt;\u6267\u884c\u6211\u4eec\u4f1a\u53d1\u73b0liugaojian\u6570\u636e\u5e93\u91cc\u9762\u670934\u5f20\u8868&lt;/p&gt;\n&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1421018-59cd68aeafc9bec8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1421018-59cd68aeafc9bec8.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1421018-ee576f499c5b2d7f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1421018-ee576f499c5b2d7f.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;p&gt;&lt;br&gt;\u7136\u540e\u6211\u4eec\u56de\u5230Openfile\u914d\u7f6e\u7684\u9875\u9762&lt;br&gt;\u3010host name\u3011\u6539\u4e3a127.0.0.1\uff0c\u3010database-name\u3011\u6539\u4e3aliugaojian\u4fe1\u606f\u8bbe\u7f6e\u5982\u4e0b\u56fe&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1421018-743dfc1f4627e82c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1421018-743dfc1f4627e82c.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;p&gt;&lt;br&gt;\u6309\u63d0\u793a\u8bbe\u7f6e\u5e76\u586b\u5199\u4fe1\u606f&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1421018-38f892612d8f9450.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1421018-38f892612d8f9450.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1421018-59ca14264bfbd2a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1421018-59ca14264bfbd2a2.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;p&gt;&lt;br&gt;\u63d0\u793a\uff1a\u4e0a\u8ff0\u5bc6\u7801\u81ea\u5df1\u8981\u8bb0\u7740 \u90ae\u7bb1\u53ef\u4ee5\u968f\u610f\u70b9&lt;br&gt;\u70b9\u51fb\u7ee7\u7eed \u6b64\u65f6Openfile\u5c31\u5b89\u88c5\u5b8c\u6210&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1421018-e0391199b3931564.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1421018-e0391199b3931564.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;p&gt;&lt;br&gt;\u7136\u540e\u6211\u4eec\u767b\u5f55\u5230\u7ba1\u7406\u63a7\u5236\u5e73\u53f0 \u7528\u6237\u540d\uff1aadmin \u5bc6\u7801\u5c31\u662f\u81ea\u5df1\u8bbe\u7f6e\u7684\u5bc6\u7801&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1421018-889fa732a55e4cf3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1421018-889fa732a55e4cf3.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;p&gt;&lt;br&gt;\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u76f8\u5173\u4fe1\u606f&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1421018-76bc3569ccb9487d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1421018-76bc3569ccb9487d.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;p&gt;&lt;br&gt;\u6b64\u65f6\u5462\u8fd8\u6ca1\u5b8c \u9769\u547d\u624d\u521a\u521a\u5f00\u59cb&lt;br&gt;\u9700\u8981\u6211\u4eec\u5b89\u88c5\u4e00\u4e2aSpark \u4e5f\u5c31\u662f\u5373\u65f6\u901a\u8baf\u7684\u5ba2\u6237\u7aef&lt;br&gt;\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u4e5f\u8bb8\u8fd8\u9700\u8981\u7535\u8111\u7684\u4e00\u4e2aJava\u73af\u5883\u5728\u8fd9\u91cc\u4e0d\u518d\u7d2f\u8ff0\u4e86 \u6210\u529f\u4e4b\u540e\u6211\u4eec\u767b\u9646\u8bd5\u8bd5&lt;br&gt;&lt;/p&gt;&lt;div class=\"image-package\"&gt;\n&lt;img src=\"http://upload-images.jianshu.io/upload_images/1421018-4834dd5813c5d368.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" data-original-src=\"http://upload-images.jianshu.io/upload_images/1421018-4834dd5813c5d368.png?imageMogr2/auto-orient/strip%7CimageView2/2\"&gt;&lt;br&gt;&lt;div class=\"image-caption\"&gt;&lt;/div&gt;\n&lt;/div&gt;&lt;p&gt;&lt;br&gt;\u6b64\u65f6\u6211\u4eec\u5728\u7535\u8111\u9875\u9762\u4e0a\u5c31\u4f1a\u770b\u89c1admin\u7531\u4e0d\u5728\u7ebf\u7684\u72b6\u6001\u53d8\u4e3a\u4e86\u5728\u7ebf\u7684\u72b6\u6001&lt;br&gt;\u6b64\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u6dfb\u52a0\uff0c\u5220\u9664\u7b49\u4e00\u7cfb\u5217\u64cd\u4f5c&lt;br&gt;\u4eca\u5929\u6211\u4eec\u5c31\u5148\u628a\u8fd9\u4e9b\u6d88\u5316\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4f1a\u5e26\u7740\u5927\u5bb6\u5728\u4ee3\u7801\u4e2d\u5b9e\u73b0\u5373\u65f6\u901a\u8baf\u7684\u529f\u80fd\uff0c \u540e\u9762\u7684\u5185\u5bb9\u6211\u4e00\u5b9a\u4f1a\u63a5\u7740\u6301\u7eed\u66f4\u65b0~~~&lt;/p&gt;\n&lt;/div&gt;"</span></span>&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>可以开一个定时任务，每天抓取自己感兴趣的相关文章，集中起来进行阅读。平时看简书的 <strong>程序员</strong> 专题比较多，先从这个开始。</p>]]>
    
    </summary>
    
      <category term="Python" scheme="http://hanks.xyz/tags/Python/"/>
    
      <category term="Scrapy" scheme="http://hanks.xyz/tags/Scrapy/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac 上配置 Node.js 环境]]></title>
    <link href="http://hanks.xyz/2016/03/17/mac-node-config/"/>
    <id>http://hanks.xyz/2016/03/17/mac-node-config/</id>
    <published>2016-03-17T14:54:09.000Z</published>
    <updated>2016-03-17T15:06:48.000Z</updated>
    <content type="html"><![CDATA[<p>原来本机是通过官网下载 <code>pkg</code> 包直接安装的，版本 <code>4.x</code>，现在尝试升级到 <code>5.8.0</code></p>
<a id="more"></a>
<h2 id="安装_Homebrew_（推荐安装）">安装 Homebrew （推荐安装）</h2><p><a href="http://brew.sh/" target="_blank" rel="external">官网</a></p>
<h2 id="安装_node">安装 node</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install <span class="keyword">node</span><span class="identifier"></span><span class="title"></span></span><br></pre></td></tr></table></figure>
<p><code>Homebrew</code> 来安装一个 <code>node</code>，或者从<a href="https://nodejs.org/en/" target="_blank" rel="external">官网</a>下载 <code>pkg</code> 来安装，总之我们得先自己装一个 node</p>
<h2 id="安装_n_管理_node_版本">安装 n 管理 node 版本</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 安装到全局</span><br><span class="line">$ npm <span class="operator"><span class="keyword">install</span> -<span class="keyword">g</span> <span class="keyword">n</span></span></span><br></pre></td></tr></table></figure>
<h2 id="n_管理_node_版本">n 管理 node 版本</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ n install <span class="number">5.8</span><span class="number">.0</span></span><br></pre></td></tr></table></figure>
<h2 id="测试是否成功">测试是否成功</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">node</span><span class="identifier"> </span><span class="title">-v</span></span><br><span class="line"></span><br><span class="line">v5.<span class="number">8.0</span></span><br></pre></td></tr></table></figure>
<h2 id="Hello_World">Hello World</h2><p><strong>hello.js</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> hostname = <span class="string">'127.0.0.1'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> port = <span class="number">1337</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http.createServer((req, res) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">  res.writeHead(<span class="number">200</span>, &#123; <span class="string">'Content-Type'</span>: <span class="string">'text/plain'</span> &#125;);</span><br><span class="line"></span><br><span class="line">  res.end(<span class="string">'Hello World\n'</span>);</span><br><span class="line"></span><br><span class="line">&#125;).listen(port, hostname, () =&gt; &#123;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`Server running at http://<span class="subst">$&#123;hostname&#125;</span>:<span class="subst">$&#123;port&#125;</span>/`</span>);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>运行 </p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">node</span><span class="identifier"> </span><span class="title">hello</span>.js</span><br></pre></td></tr></table></figure>
<p>相关链接：</p>
<ul>
<li><a href="http://taobaofed.org/blog/2015/11/17/nvm-or-n/" target="_blank" rel="external">管理 node 版本，选择 nvm 还是 n？</a></li>
<li><a href="https://github.com/tj/n" target="_blank" rel="external">TJ/n</a></li>
</ul>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>原来本机是通过官网下载 <code>pkg</code> 包直接安装的，版本 <code>4.x</code>，现在尝试升级到 <code>5.8.0</code></p>]]>
    
    </summary>
    
      <category term="Node.js" scheme="http://hanks.xyz/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Kotlin 中创建类似 Java 的静态方法]]></title>
    <link href="http://hanks.xyz/2016/03/15/kotlin-companion/"/>
    <id>http://hanks.xyz/2016/03/15/kotlin-companion/</id>
    <published>2016-03-15T15:41:01.000Z</published>
    <updated>2016-03-15T16:27:54.000Z</updated>
    <content type="html"><![CDATA[<p>在 <code>Java</code> 中经常会写个 <code>Utils</code> 工具类来将代码中常用的功能抽出来。在 <code>Kotlin</code> 中该怎么写呢？ 代码就类似下面的这种：</p>
<a id="more"></a>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Utils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">(String string)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> string != <span class="keyword">null</span> &amp;&amp; string.length() == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isWeakEmpty</span><span class="params">(String string)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> isEmpty(string) &amp;&amp; string.trim().length() == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用起来当然就是：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">boolean</span> result = Utils.isEmpty(name);</span><br></pre></td></tr></table></figure>
<p>在 <code>Kotlin</code> 中没有 static 类型的 fun，但是我们可以使用 <code>Companion Objects</code> 。</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span> </span>&#123;</span><br><span class="line">  <span class="keyword">companion</span> <span class="keyword">object</span> Factory &#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">create</span><span class="params">()</span>: MyClass = <span class="title">MyClass</span><span class="params">()</span></span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>companion object</code> 的名字可以省略</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span> </span>&#123;</span><br><span class="line">  <span class="keyword">companion</span> <span class="keyword">object</span> &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable"><span class="keyword">val</span> x</span> = MyClass.Companion</span><br></pre></td></tr></table></figure>
<p>使用起来就是：<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">val<span class="instruction"> instance </span>=<span class="function"> MyClass.create(</span><span class="function">)</span></span><br></pre></td></tr></table></figure></p>
<p><strong>注意：</strong> 这只是形式上类似于 Java 的 static ，但是在运行时实际是作为实例对象的成员存在的。</p>
<p>改造 <code>Utils.java -&gt; Utils.kt</code> </p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">object</span> Utilss &#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">isEmpty</span><span class="params">(string: <span class="typename">String?</span>)</span>: Boolean &#123;</span></span><br><span class="line">        <span class="keyword">return</span> string != <span class="literal">null</span> &amp;&amp; string.length == <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">isWeakEmpty</span><span class="params">(string: <span class="typename">String</span>)</span>: Boolean &#123;</span></span><br><span class="line">        <span class="keyword">return</span> isEmpty(string) &amp;&amp; string.trim &#123; it <span class="type">&lt;= ' ' &#125;.length == 0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
<p>使用了 <code>object</code> 关键字， 代码看起来就是：</p>
<figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">println<span class="list">(<span class="keyword">Utils</span>.isEmpty<span class="list">(<span class="keyword">username</span>)</span>)</span></span><br></pre></td></tr></table></figure>
<p>参考链接：<br><a href="https://kotlinlang.org/docs/reference/object-declarations.html" target="_blank" rel="external">Kotlin文档 - Object Expressions and Declarations</a></p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>在 <code>Java</code> 中经常会写个 <code>Utils</code> 工具类来将代码中常用的功能抽出来。在 <code>Kotlin</code> 中该怎么写呢？ 代码就类似下面的这种：</p>]]>
    
    </summary>
    
      <category term="Java" scheme="http://hanks.xyz/tags/Java/"/>
    
      <category term="Kotlin" scheme="http://hanks.xyz/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Kotlin for Android - 0x01 有趣的扩展]]></title>
    <link href="http://hanks.xyz/2016/03/13/kotlin-for-android-extensions/"/>
    <id>http://hanks.xyz/2016/03/13/kotlin-for-android-extensions/</id>
    <published>2016-03-12T16:28:58.000Z</published>
    <updated>2016-03-12T17:22:20.000Z</updated>
    <content type="html"><![CDATA[<p>在 Kotlin 中， 提供了一个很方便的功能，可以在不继承父类，也不使用类似装饰器这样的设计模式的情况下对指定类进行扩展，扩展新的方法、属性。</p>
<a id="more"></a>
<h3 id="扩展方法">扩展方法</h3><p>用法：<code>类名.方法名</code></p>
<p>例子</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">toast</span><span class="params">(message: <span class="typename">CharSequence, duration: Int</span> = Toast.LENGTH_SHORT)</span> &#123;</span></span><br><span class="line">    Toast.makeText(this, message, duration).show()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后 <strong>Context 及其子类</strong> 都可以使用 <code>toast</code> 方法了,<code>duration</code> 是默认参数，不传值的话默认为 <strong>Toast.LENGTH_SHORT</strong></p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">toast(<span class="string">"Hello world!"</span>)</span><br><span class="line">toast(<span class="string">"Hello world!"</span>, Toast.LENGTH_LONG)</span><br></pre></td></tr></table></figure>
<p>给一个类扩展方法并 <strong>不会修改原来的类</strong> ，Kotlin 只不过让类的实例可以通过 <code>.</code> 来调用这个方法<br>这个方法是 <strong>静态添加上的，并不会在运行时改变</strong>。什么意思呢，看下面的例子：</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">C</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span>: <span class="typename">C</span></span>()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> C.<span class="title">foo</span><span class="params">()</span> = "c"</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> D.<span class="title">foo</span><span class="params">()</span> = "d"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">printFoo</span><span class="params">(c: <span class="typename">C</span>)</span> &#123;</span></span><br><span class="line">  println(c.foo()) <span class="comment">//这里调用的是C类的foo()</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">printFoo(D()) <span class="comment">// 打印出 c</span></span><br></pre></td></tr></table></figure>
<p>我们声明了参数类型为 <strong>C</strong> ，那么 <code>printFoo</code> 方法内直接调用的就是 <strong>C</strong> 类的 <strong>foo()</strong>。而 <strong>D()</strong> 是具体运行时传入的，扩展函数内调用的还是 <strong>C</strong> 的方法。</p>
<p>当定义的扩展方法这个类已经存在了同名的扩展方法，这时候是怎么运行的呢？ 看下面的例子：</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">fun</span> <span class="title">foo</span><span class="params">()</span> &#123; <span class="title">println</span><span class="params">("member")</span> &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> C.<span class="title">foo</span><span class="params">()</span> &#123; <span class="title">println</span><span class="params">("extension")</span> &#125;</span></span><br></pre></td></tr></table></figure>
<p>当我们调用 <code>c.foo()</code> , 将会输出 <strong>“member”</strong>, 而不是 <strong>“extension”</strong>， 很明显，<strong>类内部定义的方法优先</strong> 。</p>
<h3 id="扩展属性">扩展属性</h3><p>用法：<code>类名.属性名</code></p>
<p>例如<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable"><span class="keyword">val</span> View.ctx</span>: Context</span><br><span class="line">    <span class="keyword">get</span>() = context</span><br></pre></td></tr></table></figure></p>
<p>这样 <strong>View及其子类</strong> 都拥有了 <code>ctx</code>属性。</p>
<h2 id="Kotlin_for_Android_常用的扩展">Kotlin for Android 常用的扩展</h2><p>下面总结一些 Android 中比较常用的扩展。注意是对哪些类进行的扩展。</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 调用 toast 方法</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">toast</span><span class="params">(message: <span class="typename">String, duration: Int</span> = Toast.LENGTH_SHORT)</span> &#123;</span></span><br><span class="line">    Toast.makeText(this, message, duration).show()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取颜色</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">color</span><span class="params">(res: <span class="typename">Int</span>)</span>: Int = ContextCompat.<span class="title">getColor</span><span class="params">(this, res)</span> <span class="comment">// 注意 getResource().getColor 已经不建议使用了</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取 LayoutInflater</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">layoutInflater</span><span class="params">()</span> = LayoutInflater.<span class="title">from</span><span class="params">(this)</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">isConnected</span><span class="params">()</span>: Boolean &#123;</span></span><br><span class="line">    <span class="variable"><span class="keyword">val</span> manager</span> = getSystemService(Context.CONNECTIVITY_SERVICE) <span class="keyword">as</span> ConnectivityManager</span><br><span class="line">    <span class="keyword">return</span> manager.activeNetworkInfo?.isConnectedOrConnecting ?: <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 网络错误</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Activity.<span class="title">noNetworkSnackBar</span><span class="params">(parentView: <span class="typename">View, retryListener: (</span>)</span> -&gt; Unit) &#123;</span></span><br><span class="line">    Snackbar.make(parentView, R.string.network_issue, Snackbar.LENGTH_INDEFINITE)</span><br><span class="line">            .setAction(R.string.try_again) &#123;</span><br><span class="line">                retryListener.invoke()</span><br><span class="line">            &#125;.show()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Int.<span class="title">dpToPx</span><span class="params">(context: <span class="typename">Context</span>)</span> = this * context.resources.displayMetrics.density</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> RecyclerView.Adapter<span class="type">&lt;ViewHolder&gt;</span>.<span class="title">createHolder</span><span class="params">(view: <span class="typename">ViewGroup</span>)</span> = <span class="keyword">object</span> : RecyclerView.<span class="title">ViewHolder</span><span class="params">(view)</span> &#123;&#125;</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="type">&lt;T : View&gt;</span> RecyclerView.Adapter<span class="type">&lt;ViewHolder&gt;</span>.<span class="title">getView</span><span class="params">(holder: <span class="typename">ViewHolder</span>)</span> = holder.itemView <span class="keyword">as</span> T</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// View 可见性</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> View.<span class="title">setVisible</span><span class="params">()</span> &#123;</span></span><br><span class="line">    this.visibility = View.VISIBLE</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> View.<span class="title">setInvisible</span><span class="params">()</span> &#123;</span></span><br><span class="line">    this.visibility = View.INVISIBLE</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> View.<span class="title">setGone</span><span class="params">()</span> &#123;</span></span><br><span class="line">    this.visibility = View.GONE</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> View.<span class="title">toggle</span><span class="params">(isVisible: <span class="typename">Boolean</span>)</span> &#123;</span></span><br><span class="line">    <span class="keyword">if</span> (isVisible) setVisible() <span class="keyword">else</span> setGone()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> View.<span class="title">setSize</span><span class="params">(width: <span class="typename">Int, height: Int</span>)</span> &#123;</span></span><br><span class="line">    <span class="keyword">if</span> (width <span class="type">&lt;= 0 &amp;&amp; height &lt;= 0) return</span><br><span class="line"></span><br><span class="line">    val layoutParams = when (this.layoutParams) &#123;</span><br><span class="line">        is LinearLayout.LayoutParams -&gt;</span> this.layoutParams <span class="keyword">as</span> LinearLayout.LayoutParams</span><br><span class="line">        <span class="keyword">is</span> FrameLayout.LayoutParams -&gt; this.layoutParams <span class="keyword">as</span> FrameLayout.LayoutParams</span><br><span class="line">        <span class="keyword">is</span> RelativeLayout.LayoutParams -&gt; this.layoutParams <span class="keyword">as</span> RelativeLayout.LayoutParams</span><br><span class="line">        <span class="keyword">else</span> -&gt;  this.layoutParams</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable"><span class="keyword">val</span> ratio</span> = height / width</span><br><span class="line">    layoutParams.height = layoutParams.width * ratio</span><br><span class="line">    this.layoutParams = layoutParams</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 弹出snackbar</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> View.<span class="title">snackbar</span><span class="params">(message: <span class="typename">String, duration: Int</span> = Snackbar.LENGTH_SHORT)</span> &#123;</span></span><br><span class="line">    Snackbar.make(this,message,duration).show()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> View.<span class="title">snackbar</span><span class="params">(messageRes: <span class="typename">Int, duration: Int</span> = Snackbar.LENGTH_SHORT)</span> &#123;</span></span><br><span class="line">    Snackbar.make(this,messageRes,duration).show()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 任意类打log</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Any.<span class="title">log</span><span class="params">(message: <span class="typename">String</span>)</span> &#123;</span></span><br><span class="line">    Log.e(this.javaClass.simpleName, message)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getActivityManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.ACTIVITY_SERVICE)</span> <span class="keyword">as</span> ActivityManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getAlarmManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.ALARM_SERVICE)</span> <span class="keyword">as</span> AlarmManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getAudioManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.AUDIO_SERVICE)</span> <span class="keyword">as</span> AudioManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getClipboardManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.CLIPBOARD_SERVICE)</span> <span class="keyword">as</span> ClipboardManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getConnectivityManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.CONNECTIVITY_SERVICE)</span> <span class="keyword">as</span> ConnectivityManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getKeyguardManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.KEYGUARD_SERVICE)</span> <span class="keyword">as</span> KeyguardManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getLayoutInflater</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.LAYOUT_INFLATER_SERVICE)</span> <span class="keyword">as</span> LayoutInflater</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getLocationManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.LOCATION_SERVICE)</span> <span class="keyword">as</span> LocationManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getNotificationManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.NOTIFICATION_SERVICE)</span> <span class="keyword">as</span> NotificationManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getPowerManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.POWER_SERVICE)</span> <span class="keyword">as</span> PowerManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getSearchManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.SEARCH_SERVICE)</span> <span class="keyword">as</span> SearchManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getSensorManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.SENSOR_SERVICE)</span> <span class="keyword">as</span> SensorManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getTelephonyManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.TELEPHONY_SERVICE)</span> <span class="keyword">as</span> TelephonyManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getVibrator</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.VIBRATOR_SERVICE)</span> <span class="keyword">as</span> Vibrator</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getWallpaperService</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.WALLPAPER_SERVICE)</span> <span class="keyword">as</span> WallpaperService</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getWifiManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.WIFI_SERVICE)</span> <span class="keyword">as</span> WifiManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getWindowManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.WINDOW_SERVICE)</span> <span class="keyword">as</span> WindowManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getInputMethodManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.INPUT_METHOD_SERVICE)</span> <span class="keyword">as</span> InputMethodManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getAccessibilityManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.ACCESSIBILITY_SERVICE)</span> <span class="keyword">as</span> AccessibilityManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getAccountManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.ACCOUNT_SERVICE)</span> <span class="keyword">as</span> AccountManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getDevicePolicyManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.DEVICE_POLICY_SERVICE)</span> <span class="keyword">as</span> DevicePolicyManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getDropBoxManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.DROPBOX_SERVICE)</span> <span class="keyword">as</span> DropBoxManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getUiModeManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.UI_MODE_SERVICE)</span> <span class="keyword">as</span> UiModeManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getDownloadManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.DOWNLOAD_SERVICE)</span> <span class="keyword">as</span> DownloadManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getStorageManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.STORAGE_SERVICE)</span> <span class="keyword">as</span> StorageManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getNfcManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.NFC_SERVICE)</span> <span class="keyword">as</span> NfcManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getUsbManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.USB_SERVICE)</span> <span class="keyword">as</span> UsbManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getTextServicesManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.TEXT_SERVICES_MANAGER_SERVICE)</span> <span class="keyword">as</span> TextServicesManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getWifiP2pManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.WIFI_P2P_SERVICE)</span> <span class="keyword">as</span> WifiP2pManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getInputManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.INPUT_SERVICE)</span> <span class="keyword">as</span> InputManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getMediaRouter</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.MEDIA_ROUTER_SERVICE)</span> <span class="keyword">as</span> MediaRouter</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getNsdManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.NSD_SERVICE)</span> <span class="keyword">as</span> NsdManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getDisplayManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.DISPLAY_SERVICE)</span> <span class="keyword">as</span> DisplayManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getUserManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.USER_SERVICE)</span> <span class="keyword">as</span> UserManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getBluetoothManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.BLUETOOTH_SERVICE)</span> <span class="keyword">as</span> BluetoothManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getAppOpsManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.APP_OPS_SERVICE)</span> <span class="keyword">as</span> AppOpsManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getCaptioningManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.CAPTIONING_SERVICE)</span> <span class="keyword">as</span> CaptioningManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getConsumerIrManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.CONSUMER_IR_SERVICE)</span> <span class="keyword">as</span> ConsumerIrManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getPrintManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.PRINT_SERVICE)</span> <span class="keyword">as</span> PrintManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getAppWidgetManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.APPWIDGET_SERVICE)</span> <span class="keyword">as</span> AppWidgetManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getBatteryManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.BATTERY_SERVICE)</span> <span class="keyword">as</span> BatteryManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getCameraManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.CAMERA_SERVICE)</span> <span class="keyword">as</span> CameraManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getJobScheduler</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.JOB_SCHEDULER_SERVICE)</span> <span class="keyword">as</span> JobScheduler</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getLauncherApps</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.LAUNCHER_APPS_SERVICE)</span> <span class="keyword">as</span> LauncherApps</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getMediaProjectionManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.MEDIA_PROJECTION_SERVICE)</span> <span class="keyword">as</span> MediaProjectionManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getMediaSessionManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.MEDIA_SESSION_SERVICE)</span> <span class="keyword">as</span> MediaSessionManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getRestrictionsManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.RESTRICTIONS_SERVICE)</span> <span class="keyword">as</span> RestrictionsManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getTelecomManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.TELECOM_SERVICE)</span> <span class="keyword">as</span> TelecomManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getTvInputManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.TV_INPUT_SERVICE)</span> <span class="keyword">as</span> TvInputManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getSubscriptionManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.TELEPHONY_SUBSCRIPTION_SERVICE)</span> <span class="keyword">as</span> SubscriptionManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getUsageStatsManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.USAGE_STATS_SERVICE)</span> <span class="keyword">as</span> UsageStatsManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getCarrierConfigManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.CARRIER_CONFIG_SERVICE)</span> <span class="keyword">as</span> CarrierConfigManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getFingerprintManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.FINGERPRINT_SERVICE)</span> <span class="keyword">as</span> FingerprintManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getMidiManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.MIDI_SERVICE)</span> <span class="keyword">as</span> MidiManager</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> Context.<span class="title">getNetworkStatsManager</span><span class="params">()</span> = <span class="title">getSystemService</span><span class="params">(Context.NETWORK_STATS_SERVICE)</span> <span class="keyword">as</span> NetworkStatsManager</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 扩展属性</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable"><span class="keyword">val</span> View.ctx</span>: Context</span><br><span class="line">    <span class="keyword">get</span>() = context</span><br><span class="line"></span><br><span class="line"><span class="variable"><span class="keyword">var</span> TextView.textColor</span>: <span class="typename">Int</span></span><br><span class="line">    <span class="keyword">get</span>() = currentTextColor</span><br><span class="line">    <span class="keyword">set</span>(v) = setTextColor(v)</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> Notification.<span class="title">build</span><span class="params">(context: <span class="typename">Context, func: NotificationCompat.Builder.(</span>)</span> -&gt; Unit): Notification &#123;</span></span><br><span class="line">      <span class="variable"><span class="keyword">val</span> builder</span> = NotificationCompat.Builder(context)</span><br><span class="line">      builder.func()</span><br><span class="line">      <span class="keyword">return</span> builder.build()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="其他资源">其他资源</h2><p>更多详细用法，查看<a href="https://kotlinlang.org/docs/reference/extensions.html" target="_blank" rel="external">官网文档</a><br><a href="https://github.com/mcxiaoke/awesome-kotlin" target="_blank" rel="external">Kotlin 资源汇总</a></p>
<ul>
<li><a href="https://github.com/wangjiegulu/kotlin-for-android-developers-zh/blob/master/SUMMARY.md" target="_blank" rel="external">kotlin-for-android-developers-zh</a></li>
<li><a href="https://www.gitbook.com/book/huanglizhuo/kotlin-in-chinese/details" target="_blank" rel="external">Kotlin-in-Chinese</a></li>
<li><a href="https://github.com/cctanfujun/kotlin-web-site-cn" target="_blank" rel="external">Kotlin-Website-CN</a></li>
<li><a href="http://www.jianshu.com/notebooks/2822252/latest" target="_blank" rel="external">Kotlin Reference in Chinese</a></li>
</ul>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>在 Kotlin 中， 提供了一个很方便的功能，可以在不继承父类，也不使用类似装饰器这样的设计模式的情况下对指定类进行扩展，扩展新的方法、属性。</p>]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
      <category term="Kotlin" scheme="http://hanks.xyz/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用 setUserVisibleHint 方法判断 Fragment 是否可见]]></title>
    <link href="http://hanks.xyz/2016/03/08/Fragment-setUserVisibleHint/"/>
    <id>http://hanks.xyz/2016/03/08/Fragment-setUserVisibleHint/</id>
    <published>2016-03-08T15:12:43.000Z</published>
    <updated>2016-03-08T15:31:41.000Z</updated>
    <content type="html"><![CDATA[<p>场景：ViewPager中嵌套多个Fragment，判断Fragment是否可见<br><a id="more"></a><br>以下为Kotlin代码</p>
<p><code>MainActivity.kt</code><br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.hanks.fragmentvisiable</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.Fragment</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.FragmentManager</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.FragmentPagerAdapter</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity</span><br><span class="line"><span class="keyword">import</span> kotlinx.android.synthetic.main.activity_main.*</span><br><span class="line"></span><br><span class="line"><span class="variable"><span class="keyword">var</span> fragmentList</span>: List<span class="type">&lt;Fragment&gt;</span> ? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="typename">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="typename">Bundle?</span>)</span> &#123;</span></span><br><span class="line">        super.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line">        fragmentList = listOf<span class="type">&lt;Fragment&gt;</span>(Fragment01(),Fragment02(),Fragment03()) <span class="comment">// 创建Fragment集合</span></span><br><span class="line">        viewPager.adapter = MainFragmentPageAdapter(supportFragmentManager) <span class="comment">// 给ViewPager设置Adapter</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">internal <span class="class"><span class="keyword">class</span> <span class="title">MainFragmentPageAdapter</span></span>(fragmentManager: FragmentManager) : FragmentPagerAdapter(fragmentManager) &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getItem</span><span class="params">(p0: <span class="typename">Int</span>)</span>: Fragment? = fragmentList?.<span class="title">get</span><span class="params">(p0)</span></span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getCount</span><span class="params">()</span>: Int = fragmentList!!.size</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>使用了 <code>Kotlin</code> 的特性，代码简洁很多。</p>
<p><code>layout_main.xml</code></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">RelativeLayout</span></span><br><span class="line">    <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.v4.view.ViewPager</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/viewPager"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>Fragment02.kt</code><br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.hanks.fragmentvisiable</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.Fragment</span><br><span class="line"><span class="keyword">import</span> android.util.Log</span><br><span class="line"><span class="keyword">import</span> android.util.TypedValue</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater</span><br><span class="line"><span class="keyword">import</span> android.view.View</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by hanks on 16/3/8.</span><br><span class="line"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fragment02</span> : <span class="typename">Fragment</span></span>()&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateView</span><span class="params">(inflater: <span class="typename">LayoutInflater?, container: ViewGroup?, savedInstanceState: Bundle?</span>)</span>: View? &#123;</span></span><br><span class="line">        <span class="variable"><span class="keyword">val</span> view</span> = TextView(context)</span><br><span class="line">        view.text = <span class="string">"Fragment02"</span></span><br><span class="line">        view.setTextSize(TypedValue.COMPLEX_UNIT_SP,<span class="number">30</span>f)</span><br><span class="line">        <span class="keyword">return</span> view</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 重写 setUserVisibleHint</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">setUserVisibleHint</span><span class="params">(isVisibleToUser: <span class="typename">Boolean</span>)</span> &#123;</span></span><br><span class="line">        super.setUserVisibleHint(isVisibleToUser)</span><br><span class="line">        Log.d(<span class="string">"Fragment"</span>,<span class="string">"Fragment02 $isVisibleToUser"</span>) <span class="comment">// 打印isVisibleToUser</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Fragment01 Fragment03与Fragment02类似</p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/8bf10795-f85a-4da1-9bbb-995b73aa74a2.gif" alt="gif"> </p>
<p>结果：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">`启动时`：                : <span class="number">03</span>-<span class="number">08</span> <span class="number">10</span>:<span class="number">18</span>:<span class="number">19.238</span> <span class="number">20377</span>-<span class="number">20377</span>/xyz.hanks.fragmentvisiable D/Fragment: Fragment02 <span class="literal">false</span></span><br><span class="line">`Fragment01-&gt;Fragment02` : <span class="number">03</span>-<span class="number">08</span> <span class="number">10</span>:<span class="number">19</span>:<span class="number">15.586</span> <span class="number">20377</span>-<span class="number">20377</span>/xyz.hanks.fragmentvisiable D/Fragment: Fragment02 <span class="literal">true</span></span><br><span class="line">`Fragment02-&gt;Fragment03` : <span class="number">03</span>-<span class="number">08</span> <span class="number">10</span>:<span class="number">20</span>:<span class="number">01.038</span> <span class="number">20377</span>-<span class="number">20377</span>/xyz.hanks.fragmentvisiable D/Fragment: Fragment02 <span class="literal">false</span></span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>场景：ViewPager中嵌套多个Fragment，判断Fragment是否可见<br>]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
      <category term="Fragment" scheme="http://hanks.xyz/tags/Fragment/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Kotlin for Android - 0x00 配置]]></title>
    <link href="http://hanks.xyz/2016/03/08/kotlin-for-android-00/"/>
    <id>http://hanks.xyz/2016/03/08/kotlin-for-android-00/</id>
    <published>2016-03-08T14:15:12.000Z</published>
    <updated>2016-03-13T16:39:05.000Z</updated>
    <content type="html"><![CDATA[<p> <img src="https://dn-coding-net-production-pp.qbox.me/f4726bb1-04c7-43a9-8877-e701bdb29d61.png" alt="Kotlin 1.0"> </p>
<p>Kotlin 发布了1.0.0正式版，准备使用 <code>Kotlin</code>重写下项目, 先拿一些简单的例子练习。</p>
<a id="more"></a>
<h2 id="工具配置">工具配置</h2><p>使用 <strong>Android Studio</strong> 开发Android， 在 <code>Plugins</code> 中搜索 <strong><code>Kotlin</code></strong>, 安装插件<br> <img src="https://dn-coding-net-production-pp.qbox.me/066cdf44-c2e5-4688-a2eb-c5e8c86a2334.png" alt="Kotlin插件"> </p>
<h2 id="项目配置">项目配置</h2><p>新建一个 Android 项目，然后配置一下 <strong>build.gradle</strong>，可以使用工具或者手动配置</p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/eb7770ec-3c4a-4ba2-b6ff-33535c985628.png" alt="插件配置Kotlin"> </p>
<p><strong><code>app/build.gradle</code></strong><br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: <span class="string">'com.android.application'</span></span><br><span class="line">apply plugin: <span class="string">'kotlin-android'</span>               <span class="comment">// kotlin 插件</span></span><br><span class="line">apply plugin: <span class="string">'kotlin-android-extensions'</span>    <span class="comment">// 对Android的扩展</span></span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">23</span></span><br><span class="line">    buildToolsVersion <span class="string">"23.0.2"</span></span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">"xyz.hanks.fragmentvisiable"</span></span><br><span class="line">        minSdkVersion <span class="number">14</span></span><br><span class="line">        targetSdkVersion <span class="number">23</span></span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        versionName <span class="string">"1.0"</span></span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="keyword">false</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">sourceSets</span> &#123;</span><br><span class="line">        main.java.srcDirs += <span class="string">'src/main/kotlin'</span> <span class="comment">// 添加kotlin目录为源文件目录</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">fileTree</span>(dir: <span class="string">'libs'</span>, <span class="keyword">include</span>: [<span class="string">'*.jar'</span>])</span><br><span class="line">    testCompile <span class="string">'junit:junit:4.12'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:appcompat-v7:23.2.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"</span> <span class="comment">// 设置依赖库</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">buildscript</span> &#123;</span><br><span class="line">    ext.kotlin_version = <span class="string">'1.0.0'</span>    <span class="comment">// kotlin 版本</span></span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">dependencies</span> &#123;</span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"</span>       <span class="comment">// </span></span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">"org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"</span>  <span class="comment">// </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">repositories</span> &#123;</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>接下来就可以使用Kotlin进行Android开发了。</p>
<p>关于使用Anko库，可以查看这篇<a href="http://hanks.xyz/2015/10/21/Anko_for_Android/">Anko for Android</a></p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p> <img src="https://dn-coding-net-production-pp.qbox.me/f4726bb1-04c7-43a9-8877-e701bdb29d61.png" alt="Kotlin 1.0"> </p>
<p>Kotlin 发布了1.0.0正式版，准备使用 <code>Kotlin</code>重写下项目, 先拿一些简单的例子练习。</p>]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
      <category term="Kotlin" scheme="http://hanks.xyz/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[创建 Material Design 的真实动画]]></title>
    <link href="http://hanks.xyz/2016/03/08/material-interpolator/"/>
    <id>http://hanks.xyz/2016/03/08/material-interpolator/</id>
    <published>2016-03-07T16:53:41.000Z</published>
    <updated>2016-03-24T08:05:53.000Z</updated>
    <content type="html"><![CDATA[<p>material design 规范中，一个重要方面在于如何在“动作”完整的展现物体的各个真实的特性，譬如优雅、简约、美观和神奇的无缝的用户体验，下面的动画将帮助大家理解这些理念。</p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/7a258a47-be74-49da-894a-70c0cfdb2e3c.gif" alt="动画"> </p>
<a id="more"></a>
<p>推荐一个网站: <a href="http://inloop.github.io/interpolator/" target="_blank" rel="external">http://inloop.github.io/interpolator/</a></p>
<p>填入函数，即可立即查看效果</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(x&lt;=<span class="number">0.5</span>)&#123;</span><br><span class="line">    <span class="number">4</span>*x*x*x</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="number">4</span>*(x-<span class="number">1</span>)*(x-<span class="number">1</span>)*(x-<span class="number">1</span>) + <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/cb75178e-fe7f-46d9-9a72-79b4f190454d.gif" alt="动画"> </p>
<p>以此自定义Interpolator，Interpolator 时间插值类，定义动画变换的速度。Interpolator接口，继承自TimeInterpolator，TimeInterpolator时间插值器允许动画进行非线性运动变换，如加速和限速等，该接口中只有接口中有一个方法 <code>float getInterpolation(float input)</code> 这个方法。传入的值是一个 <code>0.0~1.0</code>的值，返回值可以小于0.0也可以大于1.0。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by hanks on 2016/3/7.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MaterialInterpolator</span> <span class="keyword">implements</span> <span class="title">Interpolator</span> </span>&#123;</span><br><span class="line">    <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getInterpolation</span><span class="params">(<span class="keyword">float</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(x&lt;=<span class="number">0.5</span>)&#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="number">4</span>*x*x*x;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">4</span>*(x-<span class="number">1</span>)*(x-<span class="number">1</span>)*(x-<span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/b5aefe9e-514d-4d6f-8959-26254160f51d.gif" alt="MaterialInterpolator"></p>
<p>Lollipop在 <code>android.R.interpolator</code> 中加入了几个 interpolator，包括<code>fast_out_linear_in</code> , <code>fast_out_slow_in</code>,和<code>linear_out_slow_in</code> ：对于产生逼真的物理效果至关重要。现在我们可以通过使用兼容包中的 <code>FastOutLinearInInterpolator</code>,  <code>FastOutSlowInInterpolator</code> , <code>LinearOutSlowInInterpolator</code> 类来达到同样的效果。 除此之外，我们还可以使用 <code>PathInterpolatorCompat</code> 来制造二次方或三次方的贝塞尔曲线动画。</p>
<p>更多 Interpolator</p>
<p><img src="https://github.com/MasayukiSuda/EasingInterpolator/raw/master/art/easing.png" alt="图片"><br><img src="https://github.com/MasayukiSuda/EasingInterpolator/raw/master/art/FPSAnimator1.gif" alt="图片"><br><a href="https://github.com/MasayukiSuda/EasingInterpolator" target="_blank" rel="external">github</a></p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>material design 规范中，一个重要方面在于如何在“动作”完整的展现物体的各个真实的特性，譬如优雅、简约、美观和神奇的无缝的用户体验，下面的动画将帮助大家理解这些理念。</p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/7a258a47-be74-49da-894a-70c0cfdb2e3c.gif" alt="动画"> </p>]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
      <category term="interpolator" scheme="http://hanks.xyz/tags/interpolator/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ubuntu 14.04 搭建Swift3.0 开发环境]]></title>
    <link href="http://hanks.xyz/2016/02/29/ubuntu-swift/"/>
    <id>http://hanks.xyz/2016/02/29/ubuntu-swift/</id>
    <published>2016-02-29T14:38:53.000Z</published>
    <updated>2016-02-29T15:06:26.000Z</updated>
    <content type="html"><![CDATA[<p>Swift已经出了3.0，开发文档有linux环境的，简单玩一下<br><img src="https://dn-coding-net-production-pp.qbox.me/9225762d-fab3-4ba9-a62e-5c4dc9e4a761.png" alt="Ubuntu+Swift"> </p>
<h2 id="下载">下载</h2><p>下载压缩包：<a href="https://swift.org/download/" target="_blank" rel="external">https://swift.org/download/</a></p>
<p>选择自己的环境，下载对应的压缩包，我这里下载 <strong>swift-DEVELOPMENT-SNAPSHOT-2016-02-25-a-ubuntu14.04.tar.gz</strong><br>到<code>~/Download/Swift</code> 目录下</p>
<a id="more"></a>
<p><img src="https://dn-coding-net-production-pp.qbox.me/f660d089-4996-4bb7-9f05-678e5bebf094.png" alt="下载"> </p>
<h2 id="解压缩">解压缩</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/Download/swift</span><br><span class="line"><span class="preprocessor"># 解压缩</span></span><br><span class="line">$ tar zxvf swift-DEVELOPMENT-SNAPSHOT-<span class="number">2016</span>-<span class="number">02</span>-<span class="number">25</span>-a-ubuntu14<span class="number">.04</span>.tar.gz</span><br></pre></td></tr></table></figure>
<h2 id="配置环境变量">配置环境变量</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑 .bashrc </span></span><br><span class="line"><span class="title">vim</span> ~/.bashrc</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># 在文件底部插入环境变量</span></span><br><span class="line"><span class="keyword">export</span> SWIFT_HOME=~/Downloads/swift/swift-DEVELOPMENT-SNAPSHOT-<span class="number">2016</span>-<span class="number">02</span>-<span class="number">25</span>-a-ubuntu14<span class="number">.04</span></span><br><span class="line"><span class="keyword">export</span> PATH=$SWIFT_HOME/usr/bin:$PATH</span><br></pre></td></tr></table></figure>
<h2 id="验证环境变量">验证环境变量</h2><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">swift </span>--version</span><br><span class="line"><span class="keyword">Swift </span>version <span class="number">3</span>.<span class="number">0</span>-dev (LLVM <span class="keyword">b361b0fc05, </span>Clang <span class="number">11493</span>b0f62, <span class="keyword">Swift </span>fc261045a5)</span><br><span class="line"><span class="label">Target</span>: x86_64-unknown-linux-gnu</span><br></pre></td></tr></table></figure>
<p><a href="http://swift.org/" target="_blank" rel="external">swift官网</a></p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/ad395462-1494-4ffb-8744-6fd7256d51c0.png" alt="图片"> </p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>Swift已经出了3.0，开发文档有linux环境的，简单玩一下<br><img src="https://dn-coding-net-production-pp.qbox.me/9225762d-fab3-4ba9-a62e-5c4dc9e4a761.png" alt="Ubuntu+Swift"> </p>
<h2 id="下载">下载</h2><p>下载压缩包：<a href="https://swift.org/download/">https://swift.org/download/</a></p>
<p>选择自己的环境，下载对应的压缩包，我这里下载 <strong>swift-DEVELOPMENT-SNAPSHOT-2016-02-25-a-ubuntu14.04.tar.gz</strong><br>到<code>~/Download/Swift</code> 目录下</p>]]>
    
    </summary>
    
      <category term="Swift" scheme="http://hanks.xyz/tags/Swift/"/>
    
      <category term="Ubuntu" scheme="http://hanks.xyz/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Kotlin + RxJava = Functional Powerhouse]]></title>
    <link href="http://hanks.xyz/2016/02/17/kotlin-rxjava/"/>
    <id>http://hanks.xyz/2016/02/17/kotlin-rxjava/</id>
    <published>2016-02-17T14:13:18.000Z</published>
    <updated>2016-02-17T15:02:00.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>原文链接 : <a href="http://tomstechnicalblog.blogspot.com/2016/02/kotlin-rxjava-what-rxjava-should-be.html" target="_blank" rel="external">Kotlin + RxJava = Functional Powerhouse</a><br>原文作者 : <a href="http://tomstechnicalblog.blogspot.com/2016/02/kotlin-rxjava-what-rxjava-should-be.html" target="_blank" rel="external">Thomas Nield</a><br>译文出自 : <a href="http://hanks.xyz">Hanks.xyz</a><br>译者 : <a href="https://github.com/hanks-zyh/" target="_blank" rel="external">hanks-zyh</a></p>
</blockquote>
<p>作为一个软件开发人员,我总是寻找方法来达到更少的代码做更多的事情。如果我只要修改一点代码就可以不断适应业务需求变化那就更好了，所以我必须把代码重写。</p>
<p>Java语言一直是我的首选,因为它实用、可伸缩的、高性能、便携和静态类型。我在项目中熟练的运用Java,但我开始感到它比较麻烦(我一直关注着C#)。幸好去年我发现了RxJava，响应式编程使我完成的任务。</p>
<p>我几乎在我所有的项目总使用RxJava,我变得更高效,我的应用程序的质量也得到提高。但我慢慢开始意识到Java语言的局限性阻碍了RxJava。尽管Java 8提供了lambdas ,一些函数式编程任务还是非常冗长。<br><a id="more"></a></p>
<p>例如,使用 <code>compose()</code> 操作符接收一个<code>Transformer</code>，这样你可以使用现有的RxJava操作符来自定义操作符。但是问题是它很快就变得冗长了。</p>
<p>一个简单的例子。我可以创建一个 <code>Transformer</code>,将一个 <code>Observable&lt;T&gt;</code> 变成一个 <code>&lt;ImmutableList&lt;T&gt;&gt;</code> 因为我喜欢Google Guava’s 的不可变的集合。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Launcher</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Observable&lt;String&gt; source = Observable.just(<span class="string">"Alpha"</span>, </span><br><span class="line">            <span class="string">"Beta"</span>, <span class="string">"Gamma"</span>, <span class="string">"Delta"</span>, <span class="string">"Epsilon"</span>);</span><br><span class="line"></span><br><span class="line">        source.compose(toImmutableList()).subscribe(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; Observable.Transformer&lt;T,ImmutableList&lt;T&gt;&gt; toImmutableList() &#123;</span><br><span class="line">        <span class="keyword">return</span> obs -&gt; obs.collect(() -&gt; ImmutableList.&lt;T&gt;builder(),</span><br><span class="line">             (b,t) -&gt; b.add(t)).map(b -&gt; b.build());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用了Java 8能简化一大部分代码。但 <code>toImmutableList</code>这个函数和main函数在同一个类中,如果我放在一个单独的工厂类中,它将慢慢开始冗长了。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Launcher</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Observable&lt;String&gt; source = Observable.just(<span class="string">"Alpha"</span>, <span class="string">"Beta"</span>, <span class="string">"Gamma"</span>, </span><br><span class="line">            <span class="string">"Delta"</span>, <span class="string">"Epsilon"</span>);</span><br><span class="line"></span><br><span class="line">        source.compose(GuavaTransformers.toImmutableList()).subscribe(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*This would be in the GuavaTransformers class */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; Observable.Transformer&lt;T,ImmutableList&lt;T&gt;&gt; toImmutableList() &#123;</span><br><span class="line">        <span class="keyword">return</span> obs -&gt; obs.collect(() -&gt; ImmutableList.&lt;T&gt;builder(), </span><br><span class="line">            (b,t) -&gt; b.add(t)).map(b -&gt; b.build());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>更糟糕的是，如果我开始创建更复杂的 <code>Transformers</code> 或带参数的操作符， <code>compose()</code> 语句开始变得很丑。如果我想给 <code>ImmutableListMultimap</code> 添加item，它开始变得更不友好了。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">JavaLauncher</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Observable&lt;String&gt; source = Observable.just(<span class="string">"Alpha"</span>, <span class="string">"Beta"</span>, <span class="string">"Gamma"</span>,</span><br><span class="line">             <span class="string">"Delta"</span>, <span class="string">"Epsilon"</span>);</span><br><span class="line"></span><br><span class="line">        source.compose(GuavaTransformers</span><br><span class="line">            .toImmutableListMultiMap(s -&gt; s.length())).subscribe(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*This would be in the GuavaTransformers class */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; Observable.Transformer&lt;T,ImmutableList&lt;T&gt;&gt; toImmutableList() &#123;</span><br><span class="line">        <span class="keyword">return</span> obs -&gt; obs.collect(() -&gt; ImmutableList.&lt;T&gt;builder(), </span><br><span class="line">            (b,t) -&gt; b.add(t)).map(b -&gt; b.build());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T,K&gt; Observable.Transformer&lt;T,ImmutableListMultimap&lt;K,T&gt;&gt; </span><br><span class="line">            toImmutableListMultiMap(Func1&lt;T,K&gt; keyMapper) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> obs -&gt; obs.collect(() -&gt; ImmutableListMultimap.&lt;K,T&gt;builder(),</span><br><span class="line">            (b,t) -&gt; b.put(keyMapper.call(t), t)).map(b -&gt; b.build());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这可能是个小例子，但是对于较大的应用这些问题可以迅速成为放大。即便使用了RxJava和Java 8的lambdas， 原来的代码也会慢慢变得难以理解，甚至我们还没涉及到元组和数据类的相关内容! 但 <code>Kotlin</code> 解决了所有的问题。</p>
<h2 id="Introducing_Kotlin">Introducing Kotlin</h2><p>我试着看了Scala、Python和其他语言。我特别看了Scala，尽管它很厉害,但我发现它太深奥。然后有一天我发现JetBrains分享他们的新语言称为 <code>Kotlin</code> 。他们宣传它作为工业级,业务性的语言，强调实用性而不是便捷。JetBrains, 流行的Java IDE Intellij IDEA的创造者, 建造它,因为他们觉得他们可以更有效率的使用一种语言,Java。在学习<code>Kotlin</code> 和重写两个国内项目学习后,我很快就被安利并且准备使用它。<code>Kotlin</code> 可以和Java相互调用使它更好安利了。</p>
<p>但在这篇文章中,我想分享我使用<code>Kotlin</code>和<code>RxJava</code>的经验。具有讽刺意味的是,我发现RxJava和<code>Kotlin</code>一起用比和Java一起更好用本身。它只是表示函数式编程的概念。</p>
<p>例如， 我可以通过Observable的扩展方法“添加”一些方法,甚至不用扩展类！这并不是什么新鲜事,如果你学过C#, 但这对于Java来说是一等一的大事。下面我使用Kotlin来添加<code>toImmutableList()</code>和<code>toImmutableListMultimap()</code>。然后我可以直接调用这些方法的而不用使用<code>compose()</code>。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">fun main(args: Array&lt;String&gt;) &#123;</span><br><span class="line"></span><br><span class="line">    val source = Observable.just("Alpha", "Beta", "Gamma", "Delta", "Epsilon")</span><br><span class="line"></span><br><span class="line">    source.toImmutableListMultimap &#123; it.length &#125;.subscribe &#123; println(it) &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fun &lt;T&gt; Observable&lt;T&gt;.toImmutableList() =</span><br><span class="line">        collect(&#123; ImmutableList.builder&lt;T&gt;()&#125;,&#123; b, t -&gt; b.add(t)&#125;).map &#123; it.build() &#125;</span><br><span class="line"></span><br><span class="line">inline fun &lt;K,T&gt; Observable&lt;T&gt;.toImmutableListMultimap(</span><br><span class="line">    crossinline keyMapper: (T) -&gt; K) = collect(&#123; ImmutableListMultimap.builder&lt;K,T&gt;()&#125;,</span><br><span class="line">        &#123; b, t -&gt; b.put(keyMapper(t), t)&#125;).map &#123; it.build() &#125;</span><br></pre></td></tr></table></figure>
<p>这里有很多值得注意的地方：</p>
<ol>
<li><p>我们没有将这些函数在类的内部。不像Java,<code>Kotlin</code>并不强迫你把静态方法在类。这很有用,有助于消除很多样板,特别是对于程序的程序。</p>
</li>
<li><p>变量类型可以通过类型推断，我们不必显示的声明这是一个Observable<string>类型的变量。如果你想声明，可以使用下面的样式。在<code>Kotlin</code>类型是在变量名后面(:隔开)。之所以这样做, 是因为变量名很可能比类型更有用,所以它是宣先定义变量名。</string></p>
</li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable"><span class="keyword">val</span> source</span>: Observable<span class="type">&lt;String&gt;</span> = Observable.just(<span class="string">"Alpha"</span>, <span class="string">"Beta"</span>, <span class="string">"Gamma"</span>,</span><br><span class="line">     <span class="string">"Delta"</span>, <span class="string">"Epsilon"</span>)</span><br></pre></td></tr></table></figure>
<ol>
<li>你可以更容易的使用Lambdas。而不必写出一个像 <code>s -&gt; s.length()</code>这样一对一的映射(),你可以用更简洁的表达他的长度。指的是单输入项排放(这是出现在其他JVM语言)。同样,没有paranthesis()接收参数。你使用<code>{ }</code>表达整个函数的运算符。这特别有用,你随时可以把多行放在一个<code>{ }</code>内。</li>
</ol>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">source. toImmutableListMultimap &#123; it. length &#125;. subscribe&#123; println(it)&#125;</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line"><span class="number">4.</span> 你可以使用扩展函数“添加”函数/方法到一个类中而不用创建一个新的子类。下面这条语句添加一个`toImmutableList()`函数，它可以在程序中被直接访问(除非你让它私有或改变其范围)。这是怎么做的?编译器只是在编译成字节码时使它成为了一个静态方法,但是你得到了好的语法糖以及看到它自动完成。你不需要目标泛型类型与扩展方法。例如,我可以做一个concatStr()扩展方法专门针对 `Observable<span class="type">&lt;String&gt;</span>`而不是`Observable<span class="type">&lt;T&gt;</span>`。</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">```kotlin</span><br><span class="line"> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> Observable<span class="type">&lt;T&gt;</span>.<span class="title">toImmutableList</span><span class="params">()</span> =</span></span><br><span class="line">       collect(&#123; ImmutableList.builder<span class="type">&lt;T&gt;</span>()&#125;,&#123; b, t -&gt; b.add(t)&#125;).map &#123; it.build()&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>函数参数类型是简单得多。而不是表达一种功能性Func1 &lt; T,K &gt;,您可以使用一个SAM-less类型表达式(T)- &gt; K .这个就更容易,这个函数接收一个T和把它变成一种K .它不是一个抽象方法(SAM)这使得它更容易的原因和遗漏的问题“我正在使用单一方法接口?”。当然,<code>Kotlin</code>将处理转换λ山姆当调用Java库,但是它不会用<code>Kotlin</code>。此外,使用内联函数接受函数参数和crossinline关键词,就可以获得巨大的效率通过消除对象的开销。</li>
</ol>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">inline fun &lt;K,T&gt; Observable&lt;T&gt;.toImmutableListMultimap(</span><br><span class="line">   crossinline keyMapper: (T) -&gt; K) = collect(&#123;ImmutableListMultimap.builder&lt;K,T&gt;()&#125;,</span><br><span class="line">         &#123; b, t -&gt; b.put(keyMapper(t), t)&#125;).map &#123; it.build() &#125;</span><br></pre></td></tr></table></figure>
<h3 id="Data_Classes">Data Classes</h3><p>Another great feature of Kotlin is data classes.  Have you ever wanted to simply zip two values together, but had to create an entire class just to pair them up with hashCode(), equals(), and toString() implemented?<br><code>Kotlin</code>的另一个特性是数据类。你有没有遇到过当你想简单地压缩两个值,但必须创建一个完整的类来并且实现hashCode(),equals()和toString()?</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">JavaLauncher</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Observable&lt;String&gt; letter = Observable.just(<span class="string">"Alpha"</span>, <span class="string">"Beta"</span>, <span class="string">"Gamma"</span>, </span><br><span class="line">            <span class="string">"Delta"</span>, <span class="string">"Epsilon"</span>);</span><br><span class="line"></span><br><span class="line">        Observable&lt;Integer&gt; number = Observable.just(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">        Observable&lt;CodePair&gt; zipped = Observable.zip(letter,number, </span><br><span class="line">            (l,n) -&gt; <span class="keyword">new</span> CodePair(l,n));</span><br><span class="line"></span><br><span class="line">        zipped.subscribe(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">CodePair</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> String letter;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> Integer number;</span><br><span class="line"></span><br><span class="line">        CodePair(String letter, Integer number) &#123;</span><br><span class="line">            <span class="keyword">this</span>.letter = letter;</span><br><span class="line">            <span class="keyword">this</span>.number = number;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span> == o) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (o == <span class="keyword">null</span> || getClass() != o.getClass()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">            CodePair codePair = (CodePair) o;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!letter.equals(codePair.letter)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">return</span> number.equals(codePair.number);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">int</span> result = letter.hashCode();</span><br><span class="line">            result = <span class="number">31</span> * result + number.hashCode();</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"CodePair&#123;"</span> +</span><br><span class="line">                    <span class="string">"letter='"</span> + letter + <span class="string">'\''</span> +</span><br><span class="line">                    <span class="string">", number="</span> + number +</span><br><span class="line">                    <span class="string">'&#125;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这很不爽，我不得不写36行代码来创建一个带有两个属性的<code>CodePair</code>类。这个问题多次出现在函数式编程中,唯一的选择是创建元组,这只会使代码更加难懂。</p>
<p>但是在<code>Kotlin</code>,你可以声明一个<code>data class</code>。这允许您快速声明一个类,在一行声明所有的属性,它会照顾hashCode(), equals(), toString()和实现builder。</p>
<p>48行混乱的Java代码在<code>Kotlin</code>现在变成5行。</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args: <span class="typename">Array&lt;String&gt;</span>)</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    data <span class="class"><span class="keyword">class</span> <span class="title">CodePair</span></span>(<span class="variable"><span class="keyword">val</span> letter</span>: String, <span class="variable"><span class="keyword">val</span> number</span>: <span class="typename">Int</span>)</span><br><span class="line"></span><br><span class="line">    <span class="variable"><span class="keyword">val</span> letter</span> = Observable.just(<span class="string">"Alpha"</span>, <span class="string">"Beta"</span>, <span class="string">"Gamma"</span>, <span class="string">"Delta"</span>, <span class="string">"Epsilon"</span>)</span><br><span class="line">    <span class="variable"><span class="keyword">val</span> number</span> = Observable.just(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="variable"><span class="keyword">val</span> zipped</span> = Observable.zip(letter, number) &#123; l, n -&gt; CodePair(l, n) &#125;</span><br><span class="line"></span><br><span class="line">    zipped.subscribe &#123; System.out.println(it) &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我们在main函数内声明CodePair类，它只存在于main函数的范围内。它有命名属性字母和数字你可以访问。这在Java看起来不切实际。能够动态声明简单类,常见的方法实现做了，使得开发者可以快速开发出组织清晰的代码。</p>
<h2 id="Conclusions">Conclusions</h2><p>我只简单分享<code>Kotlin</code>能做什么,有或没有RxJava。这不是一个教程，只是快速展示如何在<code>Kotlin</code>RxJava表达不同。我希望通过分享我的经验使你想去了解一下<code>Kotlin</code>。我知道与Scala结合RxScala可以做很多事情,但<code>Kotlin</code>是不同的。它既像Java一样强大又像Python一样灵活。当你把RxJava扔到混合<code>Kotlin</code>,我发现这是一个非常好的结合。我忘记提到没有原始类型和装箱拆箱? <code>Kotlin</code>有很多特性，将范围发布在这里,像<a href="https://kotlinlang.org/docs/reference/null-safety.html" target="_blank" rel="external">空指针安全</a>。</p>
<p><a href="https://kotlinlang.org/docs/tutorials/kotlin-android.html" target="_blank" rel="external"><code>Kotlin</code>也支持Android</a>。你也可以checkout<a href="https://github.com/ReactiveX/RxKotlin" target="_blank" rel="external">RxKotlin</a>库(RxJava的扩展，利用了<code>Kotlin</code>功能(如给集合添加<code>toObservable()</code>方法)。</p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>原文链接 : <a href="http://tomstechnicalblog.blogspot.com/2016/02/kotlin-rxjava-what-rxjava-should-be.html">Kotlin + RxJava = Functional Powerhouse</a><br>原文作者 : <a href="http://tomstechnicalblog.blogspot.com/2016/02/kotlin-rxjava-what-rxjava-should-be.html">Thomas Nield</a><br>译文出自 : <a href="http://hanks.xyz">Hanks.xyz</a><br>译者 : <a href="https://github.com/hanks-zyh/">hanks-zyh</a></p>
</blockquote>
<p>作为一个软件开发人员,我总是寻找方法来达到更少的代码做更多的事情。如果我只要修改一点代码就可以不断适应业务需求变化那就更好了，所以我必须把代码重写。</p>
<p>Java语言一直是我的首选,因为它实用、可伸缩的、高性能、便携和静态类型。我在项目中熟练的运用Java,但我开始感到它比较麻烦(我一直关注着C#)。幸好去年我发现了RxJava，响应式编程使我完成的任务。</p>
<p>我几乎在我所有的项目总使用RxJava,我变得更高效,我的应用程序的质量也得到提高。但我慢慢开始意识到Java语言的局限性阻碍了RxJava。尽管Java 8提供了lambdas ,一些函数式编程任务还是非常冗长。<br>]]>
    
    </summary>
    
      <category term="Kotlin" scheme="http://hanks.xyz/tags/Kotlin/"/>
    
      <category term="RxJava" scheme="http://hanks.xyz/tags/RxJava/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Framework分析-点击Launcher中的图标启动Activity]]></title>
    <link href="http://hanks.xyz/2016/02/01/framework-activity-oncreate/"/>
    <id>http://hanks.xyz/2016/02/01/framework-activity-oncreate/</id>
    <published>2016-02-01T15:50:11.000Z</published>
    <updated>2016-02-03T13:49:52.000Z</updated>
    <content type="html"><![CDATA[<p>Launcher也是一个应用，点击一个图标，开启一个新的应用。分析从点击图标到新的应用的Activity执行onCreate的执行流程.注意学习Binder机制<br> <img src="https://dn-coding-net-production-pp.qbox.me/29c9c5db-a084-4667-863e-912e07a27a73.png" alt="图片"> </p>
<a id="more"></a>
<p><img src="http://file.bmob.cn/M02/77/98/oYYBAFavgz6AfVmFAAR8ykLhngM223.png" alt="Laucher启动一个新的应用"></p>
<ol>
<li>无论是通过Launcher来启动Activity，还是通过Activity内部调用startActivity接口来启动新的Activity，都通过Binder进程间通信进入到ActivityManagerService进程中，并且调用ActivityManagerService.startActivity接口； </li>
<li>ActivityManagerService调用ActivityStack.startActivityMayWait来做准备要启动的Activity的相关信息；</li>
<li>ActivityStack通知ApplicationThread要进行Activity启动调度了，这里的ApplicationThread代表的是调用ActivityManagerService.startActivity接口的进程，对于通过点击应用程序图标的情景来说，这个进程就是Launcher了，而对于通过在Activity内部调用startActivity的情景来说，这个进程就是这个Activity所在的进程了；</li>
<li>ApplicationThread不执行真正的启动操作，它通过调用ActivityManagerService.activityPaused接口进入到ActivityManagerService进程中，看看是否需要创建新的进程来启动Activity；</li>
<li>对于通过点击应用程序图标来启动Activity的情景来说，ActivityManagerService在这一步中，会调用startProcessLocked来创建一个新的进程，而对于通过在Activity内部调用startActivity来启动新的Activity来说，这一步是不需要执行的，因为新的Activity就在原来的Activity所在的进程中进行启动；</li>
<li>ActivityManagerServic调用ApplicationThread.scheduleLaunchActivity接口，通知相应的进程执行启动Activity的操作；</li>
<li>ApplicationThread把这个启动Activity的操作转发给ActivityThread，ActivityThread通过ClassLoader导入相应的Activity类，然后把它启动起来。</li>
</ol>
<p><img src="http://file.bmob.cn/M02/77/98/oYYBAFavgy2AbDNJAAIS5AMX0Hw805.png" alt="详细流程"></p>
<ol>
<li>Launcher 通过 Binder进程间通信机制通知 ActivityManagerService，它要启动一个Activity；</li>
<li>ActivityManagerService通过Binder进程间通信机制通知Launcher进入Paused状态；</li>
<li>Launcher通过Binder进程间通信机制通知ActivityManagerService，它已经准备就绪进入Paused状态，于是ActivityManagerService就创建一个新的进程，用来启动一个ActivityThread实例，即将要启动的Activity就是在这个ActivityThread实例中运行；</li>
<li>ActivityThread通过Binder进程间通信机制将一个ApplicationThread类型的Binder对象传递给ActivityManagerService，以便以后ActivityManagerService能够通过这个Binder对象和它进行通信；</li>
<li>ActivityManagerService 通过 Binder 进程间通信机制通知 ActivityThread, 现在一切准备就绪，它可以真正执行Activity的启动操作了。</li>
</ol>
<p><strong>ActivityThread</strong>:ActivityThread类有一个main方法，它是应用程序的入口，每启动一个应用进程，都会创建ActivityThread与之对应的实例，是应用程序的UI线程，Android进程启动时会建立消息循环。</p>
<p><strong>ApplicationThread &amp; ApplicatinThreadNative</strong>:ApplicationThread用来实现AMS(ActivityManagerService)与AT(ActivityThread)之间的交互。在AMS需要管理相关Application中的Activity的生命周期时，通过ApplicationThread与AT通讯，ApplicationThreadNative是ApplicationThread在客户端的实现(binder机制)。</p>
<p><strong>ApplicationThreadProxy</strong>:ApplicationThreadProxy是ApplicationThread在服务器端的代理。负责和服务器端的ApplicatingThreadNative通讯。 AMS就是通过该代理与ActivityThread进行通信的(binder机制)。</p>
<p><strong>Activity &amp; Intrumentation</strong>:Activity是应用程序真正做事情的类，每一个应用程序只有一个Instrumentation对象，每个Activity内都有一个对该对象的引用(也就是说mInstrumentation是Activity类的成员变量，前文图解中也有说明)。<br><code>Instrumentation</code>用来监控应用程序和系统的交互，可以理解为应用进程的管家，AT要创建或暂停某个Activity时，都需要通过Instrumentation。 通俗的理解，<code>Instrumentation</code> 与AT的区别，前者像是一个“家庭”里的“管家”，后者是负责创建这个“家庭”，并负责对外打交道，比如接收AMS的通知等。</p>
<p>推荐<a href="https://www.websequencediagrams.com/" target="_blank" rel="external">在线时序图网站:https://www.websequencediagrams.com/</a></p>
<p>参考链接</p>
<p><a href="http://blog.csdn.net/luoshengyang/article/details/6689748" target="_blank" rel="external">Android应用程序启动过程源代码分析</a><br><a href="http://www.bubuko.com/infodetail-278447.html" target="_blank" rel="external">图解Activity启动流程</a></p>
<p><img src="http://www.splitshire.com/wp-content/uploads/2016/02/SplitShire-2404.jpg" alt="欣赏"></p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>Launcher也是一个应用，点击一个图标，开启一个新的应用。分析从点击图标到新的应用的Activity执行onCreate的执行流程.注意学习Binder机制<br> <img src="https://dn-coding-net-production-pp.qbox.me/29c9c5db-a084-4667-863e-912e07a27a73.png" alt="图片"> </p>]]>
    
    </summary>
    
      <category term="Activity" scheme="http://hanks.xyz/tags/Activity/"/>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
      <category term="Framework" scheme="http://hanks.xyz/tags/Framework/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android性能优化]]></title>
    <link href="http://hanks.xyz/2016/01/20/android-optimization/"/>
    <id>http://hanks.xyz/2016/01/20/android-optimization/</id>
    <published>2016-01-20T13:51:09.000Z</published>
    <updated>2016-01-31T01:54:17.000Z</updated>
    <content type="html"><![CDATA[<p>布局优化,绘制优化,内存泄露优化,响应速度优化,listview优化,bitmap优化,多线程优化<br>Traceview,Systrace,Oprofile,Heap Viewer,Memory Monitor,Allocation Tracker<br><a id="more"></a><br><a href="http://bugly.qq.com/blog/?p=166" target="_blank" rel="external">量化流畅度</a></p>
<h3 id="布局优化">布局优化</h3><p>include 重用布局<br>merge 减少层级嵌套<br>viewstub 延迟加载<br>space 空白占位</p>
<h3 id="绘制优化">绘制优化</h3><p>(onMeasure,onLayout,onDraw)<br>ondraw<br>过度绘制</p>
<h3 id="内存泄露优化">内存泄露优化</h3><p><a href="http://yq.aliyun.com/articles/3009" target="_blank" rel="external">Android 内存泄漏总结</a><br>分析工具MAT, leakcanary<br>静态变量引用<br>单例模式<br>属性动画</p>
<h3 id="响应速度优化">响应速度优化</h3><p>anr, 分析/data/anr下的traces.txt<br>启动时间，冷启动</p>
<h3 id="listview优化">listview优化</h3><p>复用view<br>viewholder<br>滑动状态不同加载策略<br>getview不要耗时操作<br>大的item分成小的item<br>创建多种viewtype<br>item的布局嵌套<br>item子view的大小<br>RecyclerView</p>
<h3 id="避免OOM">避免OOM</h3><h4 id="减小对象的内存占用">减小对象的内存占用</h4><p>使用更加轻量的数据结构 ArrayMap/SparseArray<br>避免在Android里面使用Enum<br>减小Bitmap对象的内存占用<br>使用更小的图片 jpg/png/webp</p>
<h4 id="内存对象的重复利用">内存对象的重复利用</h4><p>对象池 LRU策略<br>复用系统自带的资源<br>注意在ListView/GridView等出现大量重复子组件的视图里面对ConvertView的复用<br>Bitmap对象的复用 inBitmap<br>避免在onDraw方法里面执行对象的创建<br>StringBuilder</p>
<h3 id="bitmap优化">bitmap优化</h3><p>重新采样 缩放<br>模糊：缩小，模糊，放大</p>
<h3 id="多线程优化">多线程优化</h3><p>Java内存模型<br>线程池</p>
<p><img src="http://www.splitshire.com/wp-content/uploads/2015/03/SplitShire-5390-1800x1200-970x500.jpg" alt=""></p>
<p>参考链接:</p>
<p><a href="http://hukai.me/android-performance-oom/" target="_blank" rel="external">http://hukai.me/android-performance-oom/</a><br><a href="https://github.com/Piasy/notes/blob/master/Android-Java%2FAndroidPerformancePatterns.md" target="_blank" rel="external">https://github.com/Piasy/notes/blob/master/Android-Java%2FAndroidPerformancePatterns.md</a><br><a href="http://www.trinea.cn/android/performance/" target="_blank" rel="external">http://www.trinea.cn/android/performance/</a><br><a href="http://blog.csdn.net/yanbober/article/details/48394201" target="_blank" rel="external">http://blog.csdn.net/yanbober/article/details/48394201</a><br><a href="http://www.kancloud.cn/kancloud/android-performance/53233" target="_blank" rel="external">http://www.kancloud.cn/kancloud/android-performance/53233</a></p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>布局优化,绘制优化,内存泄露优化,响应速度优化,listview优化,bitmap优化,多线程优化<br>Traceview,Systrace,Oprofile,Heap Viewer,Memory Monitor,Allocation Tracker<br>]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
      <category term="性能优化" scheme="http://hanks.xyz/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
</feed>
