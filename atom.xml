<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Hanks.xyz]]></title>
  <subtitle><![CDATA[coding]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://hanks.xyz/"/>
  <updated>2015-12-22T11:01:38.014Z</updated>
  <id>http://hanks.xyz/</id>
  
  <author>
    <name><![CDATA[Hanks]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[React-Native 组件练习-购物app侧滑菜单]]></title>
    <link href="http://hanks.xyz/2015/12/22/react-components/"/>
    <id>http://hanks.xyz/2015/12/22/react-components/</id>
    <published>2015-12-22T10:58:22.000Z</published>
    <updated>2015-12-22T11:01:38.014Z</updated>
    <content type="html"><![CDATA[<p>参照官方例子练习组件的使用,练习View Image Text 还有Android平台的DrawerLayoutAndroid<br>效果图:<br><img src="http://file.bmob.cn/M02/11/DF/oYYBAFZ5LF6AVgO5AIY4EJ1JHfk120.gif" alt="React-Native"></p>
<h2 id="React-Native_中的_width,height的_100%">React-Native  中的 width,height的 100%</h2><p>在React-Native 中没有百分比这样的宽高,但是有替代的,具体见 <a href="https://github.com/facebook/css-layout/issues/57#ref-issue-86696744" target="_blank" rel="external">issue</a><br><code>flex:1</code> 相当于 <code>height:100%</code><br><code>alignSelf:&#39;stretch&#39;</code> 相当于 <code>width:100%</code></p>
<a id="more"></a>
<h2 id="React-Native_的style">React-Native 的style</h2><ul>
<li>直接写在View中</li>
</ul>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="constant">Text</span> style=<span class="expansion">&#123;&#123;<span class="symbol">fontFamily:</span> <span class="string">'notoserif'</span>, <span class="symbol">fontStyle:</span> <span class="string">'italic'</span>, <span class="symbol">fontWeight:</span> <span class="string">'bold'</span>&#125;&#125;</span>&gt;</span><br><span class="line"><span class="constant">NotoSerif</span> <span class="constant">Bold</span> <span class="constant">Italic</span></span><br><span class="line">&lt;<span class="regexp">/Text&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>使用 StyleSheet.createClass 创建</li>
</ul>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">var styles = StyleSheet.create(&#123;</span><br><span class="line">  base: &#123;</span><br><span class="line">    width: <span class="number">38</span>,</span><br><span class="line">    height: <span class="number">38</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  background: &#123;</span><br><span class="line">    backgroundColor: <span class="string">'#222222'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  active: &#123;</span><br><span class="line">    borderWidth: <span class="number">2</span>,</span><br><span class="line">    borderColor: <span class="string">'#00ff00'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<ul>
<li>以上两种混合</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;[styles.remainder,</span> &#123;<span class="attribute">color:</span> '#<span class="attribute">a1a1a1</span>'&#125;]&#125;&gt;</span></span><br><span class="line">simple text</span><br><span class="line"><span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="Flex">Flex</h2><p><a href="http://hanks.xyz/2015/12/21/react-flexbox/">React-Native中的布局 </a></p>
<h2 id="DrawerLayoutAndroid侧滑菜单">DrawerLayoutAndroid侧滑菜单</h2><p><code>DrawerLayoutAndroid</code> 只在android中,它的 <code>renderNavigationView</code> 代表侧滑菜单内容, 子View代表主界面布局<br>通过<code>ref={(drawer) =&gt; { this.drawer = drawer; }}</code> 获取<code>drawer</code>对象<br>打开: <code>openDrawer()</code><br>关闭: <code>closeDrawer()</code></p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="type">DrawerLayoutAndroid</span></span><br><span class="line">  drawerWidth=&#123;<span class="number">300</span>&#125;</span><br><span class="line">  drawerPosition=&#123;<span class="type">DrawerLayoutAndroid</span>.positions.<span class="type">Left</span>&#125;</span><br><span class="line">  <span class="keyword">ref</span>=&#123;(drawer) =&gt; &#123; this.drawer = drawer; &#125;&#125;</span><br><span class="line">  renderNavigationView=&#123;() =&gt; navigationView&#125;&gt;</span><br><span class="line">  &lt;<span class="type">View</span>&gt;&lt;/<span class="type">View</span>&gt;</span><br><span class="line">&lt;/<span class="type">DrawerLayoutAndroid</span>&gt;</span><br></pre></td></tr></table></figure>
<h2 id="按钮的点击效果">按钮的点击效果</h2><ul>
<li><a href="https://facebook.github.io/react-native/docs/touchablehighlight.html#content" target="_blank" rel="external">TouchableHighlight</a></li>
<li><a href="https://facebook.github.io/react-native/docs/touchablenativefeedback.html#content" target="_blank" rel="external">TouchableNativeFeedback</a></li>
<li><a href="https://facebook.github.io/react-native/docs/touchableopacity.html#content" target="_blank" rel="external">TouchableOpacity</a></li>
<li><a href="https://facebook.github.io/react-native/docs/touchablewithoutfeedback.html#content" target="_blank" rel="external">TouchableWithoutFeedback</a></li>
</ul>
<p>根据需要的效果选择</p>
<h2 id="点击函数的触发">点击函数的触发</h2><p>定义函数</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openDrawer: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.drawer.openDrawer();</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>设置点击事件</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onPress=&#123;<span class="keyword">this</span>.openDrawer&#125;</span><br></pre></td></tr></table></figure>
<p>完整代码</p>
<figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">/**</span><br><span class="line"> * hanks</span><br><span class="line"> * https://github.com/hanks-zyh</span><br><span class="line"> */</span><br><span class="line">'use strict';</span><br><span class="line"></span><br><span class="line">var React = require('react-native');</span><br><span class="line">var &#123;</span><br><span class="line">  AppRegistry,</span><br><span class="line">  StyleSheet,</span><br><span class="line">  Text,</span><br><span class="line">  View,</span><br><span class="line">  Image,</span><br><span class="line">  DrawerLayoutAndroid,</span><br><span class="line">  ProgressBarAndroid,</span><br><span class="line">  ScrollView,</span><br><span class="line">  ListView,</span><br><span class="line">  TouchableOpacity,</span><br><span class="line">&#125; = React;</span><br><span class="line">var AwesomeProject = React.createClass(&#123;</span><br><span class="line">  openDrawer: function () &#123;</span><br><span class="line">      this.drawer.openDrawer();</span><br><span class="line">  &#125;,</span><br><span class="line">  getInitialState:function()&#123;</span><br><span class="line">    var ds = new ListView.DataSource( &#123;rowHasChanged: (r1, r2) =&gt; r1 !== r2&#125; );</span><br><span class="line">    return &#123;</span><br><span class="line">      dataSource : ds.cloneWithRows(['CLOTHES','PACKAGES','SHOES',]),</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  render: function() &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    var navigationView = (</span><br><span class="line">      <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>=</span></span><span class="expression">&#123;&#123;<span class="variable">flex</span>: 1, <span class="variable">backgroundColor</span>: '<span class="begin-block">#fff</span>'&#125;&#125;</span><span class="xml"><span class="tag">&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">Image</span>  <span class="attribute">source</span>= </span></span><span class="expression">&#123;&#123; <span class="variable">uri</span>: '<span class="variable">http</span>:/<span class="end-block">/img.hb.aicdn.com</span>/735<span class="variable">afbfa</span>2<span class="variable">f</span>6<span class="variable">fee</span>24<span class="variable">d</span>1<span class="variable">a</span>10<span class="variable">e</span>1<span class="variable">a</span>22<span class="variable">b</span>23<span class="variable">c</span>63<span class="variable">f</span>707<span class="variable">ea</span>82281<span class="variable">c</span>3<span class="variable">-ajdFRe</span>_<span class="variable">fw</span>658' &#125;&#125;</span><span class="xml"><span class="tag"> <span class="attribute">style</span>=</span></span><span class="expression">&#123;&#123;  <span class="variable">height</span>:200 &#125;&#125;</span><span class="xml"><span class="tag"> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">ListView</span></span><br><span class="line">          <span class="attribute">dataSource</span>=<span class="value">&#123;this.state.dataSource&#125;</span></span><br><span class="line">          <span class="attribute">renderRow</span>=<span class="value">&#123;</span> (<span class="attribute">rowData</span>) =&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>=</span></span><span class="expression">&#123;&#123;</span><br><span class="line">                <span class="variable">height</span>: 56,</span><br><span class="line">                <span class="variable">flexDirection</span> : '<span class="variable">row</span>',</span><br><span class="line">                <span class="variable">alignItems</span>:'<span class="variable">center</span>',</span><br><span class="line">                <span class="variable">paddingLeft</span>: 20,</span><br><span class="line">              &#125;&#125;</span><span class="xml"><span class="tag">&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">Image</span> <span class="attribute">source</span> = &#123; <span class="attribute">require</span>('<span class="attribute">.</span>/<span class="attribute">img</span>/<span class="attribute">list4.png</span>') &#125; <span class="attribute">style</span>=</span></span><span class="expression">&#123;&#123; <span class="variable">height</span>:10, <span class="variable">width</span>:10, <span class="variable">margin</span>:8 &#125;&#125;</span><span class="xml"><span class="tag">/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;</span> <span class="attribute">styles.listItem</span> &#125;&gt;</span>&#123;rowData&#125;<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line">           &#125;</span><br><span class="line">        /&gt;</span><br><span class="line">      <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    return (</span><br><span class="line">      <span class="tag">&lt;<span class="title">DrawerLayoutAndroid</span></span><br><span class="line">        <span class="attribute">drawerWidth</span>=<span class="value">&#123;300&#125;</span></span><br><span class="line">        <span class="attribute">drawerPosition</span>=<span class="value">&#123;DrawerLayoutAndroid.positions.Left&#125;</span></span><br><span class="line">        <span class="attribute">ref</span>=<span class="value">&#123;(drawer)</span> =&gt;</span> &#123; this.drawer = drawer; &#125;&#125;</span><br><span class="line">        renderNavigationView=&#123;() =&gt; navigationView&#125;</span><br><span class="line">        &gt;</span><br><span class="line">      <span class="tag">&lt;<span class="title">ScrollView</span> <span class="attribute">contentContainerStyle</span>=<span class="value">&#123;styles.contentContainer&#125;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">View</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span> = </span></span><span class="expression">&#123;&#123;</span><br><span class="line">          <span class="variable">backgroundColor</span>: '<span class="begin-block">#f</span>4<span class="variable">ec</span>34',</span><br><span class="line">          <span class="variable">height</span>:54,</span><br><span class="line">          <span class="variable">flexDirection</span>:'<span class="variable">row</span>',</span><br><span class="line">          <span class="variable">justifyContent</span>:'<span class="variable">space-between</span>',</span><br><span class="line">          <span class="variable">alignItems</span>:'<span class="variable">center</span>',</span><br><span class="line">          <span class="variable">paddingLeft</span>: 20,</span><br><span class="line">          <span class="variable">paddingRight</span>:20,</span><br><span class="line">        &#125;&#125;</span><span class="xml"><span class="tag">&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">TouchableOpacity</span> <span class="attribute">onPress</span>=<span class="value">&#123;this.openDrawer&#125;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">Image</span>  <span class="attribute">source</span>=<span class="value">&#123;require('.</span>/<span class="attribute">img</span>/<span class="attribute">list4.png</span>')&#125; <span class="attribute">style</span>=</span></span><span class="expression">&#123;&#123;  <span class="variable">width</span>: 20, <span class="variable">height</span>: 20&#125;&#125;</span><span class="xml"><span class="tag"> /&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="title">TouchableOpacity</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=</span></span><span class="expression">&#123;&#123; <span class="variable">fontSize</span>:18,  <span class="variable">color</span>:'#484848' &#125;&#125;</span><span class="xml"><span class="tag">&gt;</span>SHOP<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">Image</span>  <span class="attribute">source</span>=<span class="value">&#123;require('.</span>/<span class="attribute">img</span>/<span class="attribute">search.png</span>')&#125; <span class="attribute">style</span>=</span></span><span class="expression">&#123;&#123;  <span class="variable">width</span>: 20, <span class="variable">height</span>: 20&#125;&#125;</span><span class="xml"><span class="tag"> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">Image</span> <span class="attribute">source</span>= </span></span><span class="expression">&#123;&#123; <span class="variable">uri</span>: '<span class="variable">http</span>:/<span class="end-block">/img.hb.aicdn.com</span><span class="end-block">/cbf</span>3<span class="variable">ebcae</span>08<span class="variable">ef</span>62<span class="variable">ef</span>02<span class="variable">dd</span>61<span class="variable">aa</span>2407414<span class="variable">dc</span>64<span class="variable">e</span>794150313<span class="variable">-KRUD</span>1<span class="variable">s</span>_<span class="variable">fw</span>658' &#125;&#125;</span><span class="xml"><span class="tag"></span><br><span class="line">          <span class="attribute">style</span>=</span></span><span class="expression">&#123;&#123; <span class="variable">height</span>: 220, <span class="variable">margin</span>: 20&#125;&#125;</span><span class="xml"><span class="tag">  /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=</span></span><span class="expression">&#123;&#123; <span class="variable">fontSize</span>:16,  <span class="variable">color</span>:'#484848', <span class="variable">alignSelf</span>:'<span class="variable">center</span>' &#125;&#125;</span><span class="xml"><span class="tag">&gt;</span>HOT PRODUCTS<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>=<span class="value">&#123;</span> <span class="attribute">styles.photoRow</span> &#125;&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">View</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">Image</span> <span class="attribute">source</span>= </span></span><span class="expression">&#123;&#123; <span class="variable">uri</span>: '<span class="variable">https</span>:/<span class="end-block">/gw.alicdn.com</span><span class="end-block">/bao</span><span class="end-block">/uploaded</span><span class="end-block">/TB</span>1<span class="variable">YQAPKVXXXXa</span>9<span class="variable">XFXXwu</span>0<span class="variable">bFXXX.png</span>_270<span class="variable">x</span>270<span class="variable">Q</span>90<span class="variable">.jpg</span>' &#125;&#125;</span><span class="xml"><span class="tag"></span><br><span class="line">            <span class="attribute">style</span>=<span class="value">&#123;</span> <span class="attribute">styles.photoItem</span> &#125;  /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.photoName</span> &#125;&gt;</span>TEL ORGES<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.photoPrice</span> &#125;&gt;</span>$99<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">View</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">Image</span> <span class="attribute">source</span>= </span></span><span class="expression">&#123;&#123; <span class="variable">uri</span>: '<span class="variable">https</span>:/<span class="end-block">/gw.alicdn.com</span><span class="end-block">/bao</span><span class="end-block">/uploaded</span><span class="end-block">/TB</span>1<span class="variable">DteFKVXXXXXQapXXSutbFXXX.jpg</span>_270<span class="variable">x</span>270<span class="variable">Q</span>90<span class="variable">.jpg</span>' &#125;&#125;</span><span class="xml"><span class="tag"></span><br><span class="line">            <span class="attribute">style</span>=<span class="value">&#123;</span>  <span class="attribute">styles.photoItem</span>  &#125;  /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.photoName&#125;</span>&gt;</span>ARFL JUYHS<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.photoPrice</span> &#125;&gt;</span>$34.2<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">View</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">Image</span> <span class="attribute">source</span>= </span></span><span class="expression">&#123;&#123; <span class="variable">uri</span>: '<span class="variable">https</span>:/<span class="end-block">/gw.alicdn.com</span><span class="end-block">/bao</span><span class="end-block">/uploaded</span><span class="end-block">/TB</span>1<span class="variable">dQGTKVXXXXaaXVXXSutbFXXX.jpg</span>_270<span class="variable">x</span>270<span class="variable">Q</span>90<span class="variable">.jpg</span>' &#125;&#125;</span><span class="xml"><span class="tag"></span><br><span class="line">            <span class="attribute">style</span>=<span class="value">&#123;</span> <span class="attribute">styles.photoItem</span>  &#125;  /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.photoName&#125;</span>&gt;</span>TKLL ORGES<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.photoPrice</span> &#125;&gt;</span>$182<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=</span></span><span class="expression">&#123;&#123; <span class="variable">fontSize</span>:16,  <span class="variable">color</span>:'#484848',  <span class="variable">alignSelf</span>:'<span class="variable">center</span>' , <span class="variable">marginTop</span>:20 &#125;&#125;</span><span class="xml"><span class="tag">&gt;</span>NEW COLLECTIONS<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>=<span class="value">&#123;</span> <span class="attribute">styles.photoRow</span> &#125;&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">View</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">Image</span> <span class="attribute">source</span>= </span></span><span class="expression">&#123;&#123; <span class="variable">uri</span>: '<span class="variable">https</span>:/<span class="end-block">/gw.alicdn.com</span><span class="end-block">/bao</span><span class="end-block">/uploaded</span><span class="end-block">/TB</span>1<span class="variable">rzGNKVXXXXbGXVXXSutbFXXX.jpg</span>_270<span class="variable">x</span>270<span class="variable">Q</span>90<span class="variable">.jpg</span>' &#125;&#125;</span><span class="xml"><span class="tag"></span><br><span class="line">            <span class="attribute">style</span>=<span class="value">&#123;</span> <span class="attribute">styles.photoItem</span>  &#125;  /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.photoName&#125;</span>&gt;</span>TEL ORGES<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.photoPrice</span> &#125;&gt;</span>$99<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">View</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">Image</span> <span class="attribute">source</span>= </span></span><span class="expression">&#123;&#123; <span class="variable">uri</span>: '<span class="variable">https</span>:/<span class="end-block">/gw.alicdn.com</span><span class="end-block">/bao</span><span class="end-block">/uploaded</span><span class="end-block">/TB</span>1<span class="variable">rzGNKVXXXXbGXVXXSutbFXXX.jpg</span>_270<span class="variable">x</span>270<span class="variable">Q</span>90<span class="variable">.jpg</span>' &#125;&#125;</span><span class="xml"><span class="tag"></span><br><span class="line">            <span class="attribute">style</span>=<span class="value">&#123;</span> <span class="attribute">styles.photoItem</span>  &#125;  /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.photoName&#125;</span>&gt;</span>ARFL JUYHS<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.photoPrice</span> &#125;&gt;</span>$34.2<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">View</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">Image</span> <span class="attribute">source</span>= </span></span><span class="expression">&#123;&#123; <span class="variable">uri</span>: '<span class="variable">https</span>:/<span class="end-block">/gw.alicdn.com</span><span class="end-block">/bao</span><span class="end-block">/uploaded</span><span class="end-block">/TB</span>1<span class="variable">uBUxKVXXXXcGXpXXSutbFXXX.jpg</span>_270<span class="variable">x</span>270<span class="variable">Q</span>90<span class="variable">.jpg</span>' &#125;&#125;</span><span class="xml"><span class="tag"></span><br><span class="line">            <span class="attribute">style</span>=<span class="value">&#123;</span> <span class="attribute">styles.photoItem</span>  &#125;  /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.photoName&#125;</span>&gt;</span>TKLL ORGES<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.photoPrice</span> &#125;&gt;</span>$182<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=</span></span><span class="expression">&#123;&#123; <span class="variable">fontSize</span>:16,  <span class="variable">color</span>:'#484848',  <span class="variable">alignSelf</span>:'<span class="variable">center</span>' , <span class="variable">marginTop</span>:20 &#125;&#125;</span><span class="xml"><span class="tag">&gt;</span>MOST POP<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>=<span class="value">&#123;</span> <span class="attribute">styles.photoRow</span> &#125;&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">View</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">Image</span> <span class="attribute">source</span>= </span></span><span class="expression">&#123;&#123; <span class="variable">uri</span>: '<span class="variable">https</span>:/<span class="end-block">/gw.alicdn.com</span><span class="end-block">/bao</span><span class="end-block">/uploaded</span><span class="end-block">/TB</span>1<span class="variable">Rqa</span>3<span class="variable">KVXXXXb</span>6<span class="variable">XpXXSutbFXXX.jpg</span>_270<span class="variable">x</span>270<span class="variable">Q</span>90<span class="variable">.jpg</span>' &#125;&#125;</span><span class="xml"><span class="tag"></span><br><span class="line">            <span class="attribute">style</span>=<span class="value">&#123;</span> <span class="attribute">styles.photoItem</span>  &#125;  /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.photoName&#125;</span>&gt;</span>TEL ORGES<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.photoPrice</span> &#125;&gt;</span>$99<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">View</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">Image</span> <span class="attribute">source</span>= </span></span><span class="expression">&#123;&#123; <span class="variable">uri</span>: '<span class="variable">https</span>:/<span class="end-block">/gw.alicdn.com</span><span class="end-block">/bao</span><span class="end-block">/uploaded</span><span class="end-block">/TB</span>1<span class="variable">Rqa</span>3<span class="variable">KVXXXXb</span>6<span class="variable">XpXXSutbFXXX.jpg</span>_270<span class="variable">x</span>270<span class="variable">Q</span>90<span class="variable">.jpg</span>' &#125;&#125;</span><span class="xml"><span class="tag"></span><br><span class="line">            <span class="attribute">style</span>=<span class="value">&#123;</span> <span class="attribute">styles.photoItem</span>  &#125;  /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.photoName&#125;</span>&gt;</span>ARFL JUYHS<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.photoPrice</span> &#125;&gt;</span>$34.2<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">View</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">Image</span> <span class="attribute">source</span>= </span></span><span class="expression">&#123;&#123; <span class="variable">uri</span>: '<span class="variable">https</span>:/<span class="end-block">/gw.alicdn.com</span><span class="end-block">/bao</span><span class="end-block">/uploaded</span><span class="end-block">/TB</span>1<span class="variable">lMksKVXXXXa</span>7<span class="variable">XpXXSutbFXXX.jpg</span>_270<span class="variable">x</span>270<span class="variable">Q</span>90<span class="variable">.jpg</span>' &#125;&#125;</span><span class="xml"><span class="tag"></span><br><span class="line">            <span class="attribute">style</span>=<span class="value">&#123;</span> <span class="attribute">styles.photoItem</span>  &#125;  /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.photoName&#125;</span>&gt;</span>TKLL ORGES<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.photoPrice</span> &#125;&gt;</span>$182<span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="title">ScrollView</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="title">DrawerLayoutAndroid</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">var styles = StyleSheet.create(&#123;</span><br><span class="line"> contentContainer: &#123;</span><br><span class="line"> &#125;,</span><br><span class="line"> listItem:&#123;</span><br><span class="line"></span><br><span class="line"> &#125;,</span><br><span class="line"> photoRow:&#123;</span><br><span class="line">   flexDirection:'row',</span><br><span class="line">   justifyContent: 'space-between',</span><br><span class="line">   paddingLeft: 20,</span><br><span class="line">   paddingRight: 20,</span><br><span class="line">   marginTop:10,</span><br><span class="line"> &#125;,</span><br><span class="line"> photoItem:&#123;</span><br><span class="line">   height: 120,</span><br><span class="line">   width:90 ,</span><br><span class="line">   alignItems: 'stretch' ,</span><br><span class="line">   alignSelf:'center'</span><br><span class="line"> &#125;,</span><br><span class="line"> photoName:&#123;</span><br><span class="line">   fontSize:14,</span><br><span class="line">   color:'#f39d7f',</span><br><span class="line">   alignSelf:'center',</span><br><span class="line"> &#125;,</span><br><span class="line"> photoPrice:&#123;</span><br><span class="line">   fontSize:12,  color:'#484848', alignSelf:'center'</span><br><span class="line"> &#125;,</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">AppRegistry.registerComponent('AwesomeProject', () =&gt; AwesomeProject);</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>参照官方例子练习组件的使用,练习View Image Text 还有Android平台的DrawerLayoutAndroid<br>效果图:<br><img src="http://file.bmob.cn/M02/11/DF/oYYBAFZ5LF6AVgO5AIY4EJ1JHfk120.gif" alt="React-Native"></p>
<h2 id="React-Native_中的_width,height的_100%">React-Native  中的 width,height的 100%</h2><p>在React-Native 中没有百分比这样的宽高,但是有替代的,具体见 <a href="https://github.com/facebook/css-layout/issues/57#ref-issue-86696744">issue</a><br><code>flex:1</code> 相当于 <code>height:100%</code><br><code>alignSelf:&#39;stretch&#39;</code> 相当于 <code>width:100%</code></p>]]>
    
    </summary>
    
      <category term="React-Native" scheme="http://hanks.xyz/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[React-Native中的布局]]></title>
    <link href="http://hanks.xyz/2015/12/21/react-flexbox/"/>
    <id>http://hanks.xyz/2015/12/21/react-flexbox/</id>
    <published>2015-12-21T07:11:14.000Z</published>
    <updated>2015-12-22T11:02:24.574Z</updated>
    <content type="html"><![CDATA[<p>React-Native 使用 FlexBox布局来放置元素</p>
<blockquote>
<p>Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。<br>任何一个容器都可以指定为Flex布局。</p>
</blockquote>
<p><a href="http://facebook.github.io/react-native/docs/flexbox.html#content" target="_blank" rel="external">Flexbox</a></p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">alignItems <span class="class"><span class="keyword">enum</span>('<span class="title">flex</span>-<span class="title">start</span>', '<span class="title">flex</span>-<span class="title">end</span>', '<span class="title">center</span>', '<span class="title">stretch</span>')</span></span><br><span class="line"></span><br><span class="line">alignSelf <span class="class"><span class="keyword">enum</span>('<span class="title">auto</span>', '<span class="title">flex</span>-<span class="title">start</span>', '<span class="title">flex</span>-<span class="title">end</span>', '<span class="title">center</span>', '<span class="title">stretch</span>')</span></span><br><span class="line"></span><br><span class="line">flex number</span><br><span class="line"></span><br><span class="line">flexDirection <span class="class"><span class="keyword">enum</span>('<span class="title">row</span>', '<span class="title">column</span>')</span></span><br><span class="line"></span><br><span class="line">flexWrap <span class="class"><span class="keyword">enum</span>('<span class="title">wrap</span>', '<span class="title">nowrap</span>')</span></span><br><span class="line"></span><br><span class="line">justifyContent <span class="class"><span class="keyword">enum</span>('<span class="title">flex</span>-<span class="title">start</span>', '<span class="title">flex</span>-<span class="title">end</span>', '<span class="title">center</span>', '<span class="title">space</span>-<span class="title">between</span>', '<span class="title">space</span>-<span class="title">around</span>')</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="练习">练习</h2><p><img src="https://dn-coding-net-production-pp.qbox.me/711188c5-babe-478d-989f-0bd70916c0ea.png" alt="flex"></p>
<p><strong>一个点</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>=<span class="value">&#123;styles.box&#125;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>= &#123;<span class="attribute">styles.item</span>&#125;/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">box</span>:<span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">padding</span>:<span class="value"><span class="number">5</span>,</span><br><span class="line">  height:<span class="number">65</span>,</span><br><span class="line">  width:<span class="number">65</span>,</span><br><span class="line">  borderRadius:<span class="number">5</span>,</span><br><span class="line">  backgroundColor:<span class="string">'#ffffff'</span>,</span><br><span class="line">  justifyContent: <span class="string">'center'</span>,</span><br><span class="line">  alignItems:<span class="string">'center'</span>,</span><br><span class="line">  margin:<span class="number">10</span>,</span><br><span class="line"></span></span></span>&#125;,</span><br><span class="line"><span class="tag">item</span>:<span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">borderRadius</span>:<span class="value"><span class="number">7.5</span>,</span><br><span class="line">  height:<span class="number">15</span>,</span><br><span class="line">  width:<span class="number">15</span>,</span><br><span class="line">  backgroundColor:<span class="string">'#333333'</span></span><br><span class="line"></span></span></span>&#125;,</span><br></pre></td></tr></table></figure>
<p><strong>两个点</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>=<span class="value">&#123;styles.box2&#125;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>= &#123;<span class="attribute">styles.item</span>&#125;/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>= &#123;<span class="attribute">styles.item</span>&#125;/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">box2</span>:&#123;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">5</span>,</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">10</span>,</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">65</span>,</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">65</span>,</span><br><span class="line">    <span class="attribute">borderRadius</span>:<span class="number">5</span>,</span><br><span class="line">    <span class="attribute">backgroundColor</span>:<span class="string">'#ffffff'</span>,</span><br><span class="line">    <span class="attribute">flexDirection</span>:<span class="string">'column'</span>,</span><br><span class="line">    <span class="attribute">justifyContent</span>: <span class="string">'space-between'</span>,</span><br><span class="line">    <span class="attribute">alignItems</span>:<span class="string">'center'</span>,</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>
<p><strong>三个点</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>=<span class="value">&#123;styles.box3&#125;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>= &#123;<span class="attribute">styles.item</span>&#125;/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>= &#123;<span class="attribute">styles.item32</span>&#125;/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>= &#123;<span class="attribute">styles.item33</span>&#125;/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">box3</span>:<span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"><span class="number">5</span>,</span><br><span class="line">    margin:<span class="number">10</span>,</span><br><span class="line">    height:<span class="number">65</span>,</span><br><span class="line">    width:<span class="number">65</span>,</span><br><span class="line">    borderRadius:<span class="number">5</span>,</span><br><span class="line">    backgroundColor:<span class="string">'#ffffff'</span>,</span><br><span class="line">    flexDirection:<span class="string">'column'</span>,</span><br><span class="line">    justifyContent: <span class="string">'space-between'</span>,</span><br><span class="line">  </span></span></span>&#125;,</span><br><span class="line">  <span class="tag">item32</span>:<span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">borderRadius</span>:<span class="value"><span class="number">7.5</span>,</span><br><span class="line">    height:<span class="number">15</span>,</span><br><span class="line">    width:<span class="number">15</span>,</span><br><span class="line">    alignSelf:<span class="string">'center'</span>,</span><br><span class="line">    backgroundColor:<span class="string">'#333333'</span></span><br><span class="line">  </span></span></span>&#125;,</span><br><span class="line">  <span class="tag">item33</span>:<span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">alignSelf</span>:<span class="value"><span class="string">'flex-end'</span>,</span><br><span class="line">    borderRadius:<span class="number">7.5</span>,</span><br><span class="line">    height:<span class="number">15</span>,</span><br><span class="line">    width:<span class="number">15</span>,</span><br><span class="line">    backgroundColor:<span class="string">'#333333'</span></span><br><span class="line">  </span></span></span>&#125;,</span><br></pre></td></tr></table></figure>
<p><strong>四个点</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>=<span class="value">&#123;styles.box4&#125;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>= &#123;<span class="attribute">styles.column41</span>&#125;&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>= &#123;<span class="attribute">styles.item</span>&#125;/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>= &#123;<span class="attribute">styles.item</span>&#125;/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>= &#123;<span class="attribute">styles.column42</span>&#125;&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>= &#123;<span class="attribute">styles.item</span>&#125;/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>= &#123;<span class="attribute">styles.item</span>&#125;/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">box4</span>:<span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">padding</span>:<span class="value"><span class="number">5</span>,</span><br><span class="line">  margin:<span class="number">10</span>,</span><br><span class="line">  height:<span class="number">65</span>,</span><br><span class="line">  width:<span class="number">65</span>,</span><br><span class="line">  borderRadius:<span class="number">5</span>,</span><br><span class="line">  backgroundColor:<span class="string">'#ffffff'</span>,</span><br><span class="line">  justifyContent: <span class="string">'space-between'</span>,</span><br><span class="line">  flexDirection:<span class="string">'row'</span>,</span><br><span class="line"></span></span></span>&#125;,</span><br><span class="line"><span class="tag">column41</span>:<span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">justifyContent</span>:<span class="value"><span class="string">'space-between'</span>,</span><br><span class="line"></span></span></span>&#125;,</span><br><span class="line"><span class="tag">column42</span>:<span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">justifyContent</span>:<span class="value"><span class="string">'space-between'</span>,</span><br><span class="line"></span></span></span>&#125;,</span><br></pre></td></tr></table></figure>
<p><strong>五个点</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>=<span class="value">&#123;styles.box4&#125;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>= &#123;<span class="attribute">styles.column41</span>&#125;&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>= &#123;<span class="attribute">styles.item</span>&#125;/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>= &#123;<span class="attribute">styles.item</span>&#125;/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>= &#123;<span class="attribute">styles.column52</span>&#125;&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>= &#123;<span class="attribute">styles.item</span>&#125;/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>= &#123;<span class="attribute">styles.column42</span>&#125;&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>= &#123;<span class="attribute">styles.item</span>&#125;/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>= &#123;<span class="attribute">styles.item</span>&#125;/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">column52</span>:<span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">justifyContent</span>:<span class="value"><span class="string">'center'</span>,</span><br><span class="line"></span></span></span>&#125;,</span><br></pre></td></tr></table></figure>
<p>参考链接:<br><a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html</a><br><a href="http://segmentfault.com/a/1190000002658374" target="_blank" rel="external">http://segmentfault.com/a/1190000002658374</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>React-Native 使用 FlexBox布局来放置元素</p>
<blockquote>
<p>Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。<br>任何一个容器都可以指定为Flex布局。</p>
</blockquote>
<p><a href="http://facebook.github.io/react-native/docs/flexbox.html#content">Flexbox</a></p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">alignItems <span class="class"><span class="keyword">enum</span>('<span class="title">flex</span>-<span class="title">start</span>', '<span class="title">flex</span>-<span class="title">end</span>', '<span class="title">center</span>', '<span class="title">stretch</span>')</span></span><br><span class="line"></span><br><span class="line">alignSelf <span class="class"><span class="keyword">enum</span>('<span class="title">auto</span>', '<span class="title">flex</span>-<span class="title">start</span>', '<span class="title">flex</span>-<span class="title">end</span>', '<span class="title">center</span>', '<span class="title">stretch</span>')</span></span><br><span class="line"></span><br><span class="line">flex number</span><br><span class="line"></span><br><span class="line">flexDirection <span class="class"><span class="keyword">enum</span>('<span class="title">row</span>', '<span class="title">column</span>')</span></span><br><span class="line"></span><br><span class="line">flexWrap <span class="class"><span class="keyword">enum</span>('<span class="title">wrap</span>', '<span class="title">nowrap</span>')</span></span><br><span class="line"></span><br><span class="line">justifyContent <span class="class"><span class="keyword">enum</span>('<span class="title">flex</span>-<span class="title">start</span>', '<span class="title">flex</span>-<span class="title">end</span>', '<span class="title">center</span>', '<span class="title">space</span>-<span class="title">between</span>', '<span class="title">space</span>-<span class="title">around</span>')</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="React-Native" scheme="http://hanks.xyz/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Atom安装Nuclide]]></title>
    <link href="http://hanks.xyz/2015/12/18/atom-nuclide/"/>
    <id>http://hanks.xyz/2015/12/18/atom-nuclide/</id>
    <published>2015-12-18T04:10:29.000Z</published>
    <updated>2015-12-18T04:37:25.666Z</updated>
    <content type="html"><![CDATA[<p><a href="http://nuclide.io/" target="_blank" rel="external"><strong>Nuclide</strong></a> 是Facebook 基于Atom开发的IDE,本地环境Ubuntu 64位, 通过Atom的setting界面安装 nuclide 总出错, 出错后打开atom巨卡,然后通过手动安装成功. 包括安装 <a href="http://flowtype.org" target="_blank" rel="external">flow</a>同样也是手动安装成功.</p>
<a id="more"></a>
<h2 id="手动安装_Nuclide">手动安装 Nuclide</h2><ol>
<li>首先删除 <code>~/.atom/packages</code>目录下nuclide开头的文件夹</li>
<li>找个其他目录下载nuclide,然后手动安装</li>
</ol>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">clone</span> <span class="title">https</span>://github.com/facebook/nuclide.git</span><br><span class="line">$ cd nuclide</span><br><span class="line">$ npm install     <span class="comment"># 安装包依赖</span></span><br><span class="line">$ apm link          <span class="comment"># link 到atom的package</span></span><br></pre></td></tr></table></figure>
<ol>
<li>再次打开 Atom</li>
</ol>
<p><img src="https://dn-coding-net-production-pp.qbox.me/99f52cd3-3dd5-401a-a35e-39389dfbdcf8.png" alt="nuclide"></p>
<h2 id="安装Flow">安装Flow</h2><p>Flow is a static type checker, designed to find type errors in JavaScript programs<br><a href="https://atom.io/packages/nuclide-flow" target="_blank" rel="external">nuclide-flow</a><br><a href="http://flowtype.org/docs/getting-started.html" target="_blank" rel="external">FLow安装文档</a></p>
<ol>
<li><p>下载<br>Mac OS X: <a href="https://facebook.github.io/flow/downloads/flow-osx-latest.zip" target="_blank" rel="external">https://facebook.github.io/flow/downloads/flow-osx-latest.zip</a><br>Linux (64 bit): <a href="https://facebook.github.io/flow/downloads/flow-linux64-latest.zip" target="_blank" rel="external">https://facebook.github.io/flow/downloads/flow-linux64-latest.zip</a></p>
</li>
<li><p>解压</p>
</li>
</ol>
<figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&gt;</span> unzip <span class="keyword">flow</span>.zip</span><br></pre></td></tr></table></figure>
<ol>
<li>添加到PATH</li>
</ol>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$&gt; cd flow</span><br><span class="line">$&gt; echo -e <span class="string">"\nPATH=\"</span>\<span class="variable">$PATH</span>:$(pwd)/\<span class="string">""</span> &gt;&gt; ~/.bashrc &amp;&amp; source ~/.bashrc</span><br></pre></td></tr></table></figure>
<p><code>flow check</code>命令进行检查</p>
<ul>
<li>首先文件夹目录下需要有<code>.flowconfig</code>文件</li>
<li>在需要检查的js文件加上 <code>/* @flow */</code> 注释</li>
<li>如果当前安装的flow版本和<code>flowconfig</code>里面写的版本不一样时,需要修改<code>flowconfig</code>,修改flow版本为所安装的版本</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://nuclide.io/"><strong>Nuclide</strong></a> 是Facebook 基于Atom开发的IDE,本地环境Ubuntu 64位, 通过Atom的setting界面安装 nuclide 总出错, 出错后打开atom巨卡,然后通过手动安装成功. 包括安装 <a href="http://flowtype.org">flow</a>同样也是手动安装成功.</p>]]>
    
    </summary>
    
      <category term="Atom" scheme="http://hanks.xyz/tags/Atom/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[运行React-Native例子UIExplorer]]></title>
    <link href="http://hanks.xyz/2015/12/18/react-native-UIExplorer/"/>
    <id>http://hanks.xyz/2015/12/18/react-native-UIExplorer/</id>
    <published>2015-12-17T17:16:28.000Z</published>
    <updated>2015-12-18T03:18:27.882Z</updated>
    <content type="html"><![CDATA[<p>运行 FaceBook 给出的例子UIExplorer, 由于网络问题折腾了半天, 在公司网络死活不行,到家一小会儿搞定. 原因是我使用 npm install 的时候 直接 <code>ctrl+c</code> 断掉了, 需要把目录下的<code>node_modules</code>文件夹删除再重新安装.</p>
<a id="more"></a>
<h3 id="关于NPM">关于NPM</h3><p><a href="http://www.cnblogs.com/chyingp/p/npm.html?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="external">NPM小结</a></p>
<h3 id="react-native_环境">react-native 环境</h3><p>参考前面:<a href="http://hanks.xyz/2015/12/15/react-native-start-md/">Ubuntu进行 react-native 的开发</a></p>
<h3 id="APK运行到模拟器">APK运行到模拟器</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/facebook/react-native.git</span><br><span class="line">cd react-native</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<p><code>npm install</code> 过程需要下载大约 100多兆的依赖, 所以看网络情况咯</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd react-native</span><br><span class="line">./<span class="string">gradlew :</span><span class="string">Examples:</span><span class="string">UIExplorer:</span><span class="string">android:</span><span class="string">app:</span>installDebug</span><br><span class="line">.<span class="regexp">/packager/</span>packager.sh</span><br></pre></td></tr></table></figure>
<p>注意,使用<code>packager.sh</code> 开启server.<br>然后利用 <code>gradlew</code>命令编译apk</p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/7edbed81-477e-4173-8ea4-f5d0ac0988b7.png" alt="模拟器"></p>
<h3 id="运行到真机">运行到真机</h3><ol>
<li>真机开启USB调试</li>
<li>必须关掉模拟器, react-native要求同时只能连接一个设备, 可以通过 <code>abd devices</code>查看连接个数</li>
<li><code>adb reverse tcp:8081 tcp:8081</code><br>手机必须和电脑在同一个局域网, 然后把手机无线的代理设置为电脑的ip:8081</li>
<li>然后可以安装到真机了</li>
</ol>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd react-native</span><br><span class="line">./<span class="string">gradlew :</span><span class="string">Examples:</span><span class="string">UIExplorer:</span><span class="string">android:</span><span class="string">app:</span>installDebug</span><br><span class="line">.<span class="regexp">/packager/</span>packager.sh</span><br></pre></td></tr></table></figure>
<p><img src="https://dn-coding-net-production-pp.qbox.me/b78d351b-bc3f-40b5-840a-db8a82153fa2.png" alt="真机"></p>
<p>文章出处: <a href="http://hanks.xyz">http://hanks.xyz</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>运行 FaceBook 给出的例子UIExplorer, 由于网络问题折腾了半天, 在公司网络死活不行,到家一小会儿搞定. 原因是我使用 npm install 的时候 直接 <code>ctrl+c</code> 断掉了, 需要把目录下的<code>node_modules</code>文件夹删除再重新安装.</p>]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
      <category term="React-Native" scheme="http://hanks.xyz/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ubuntu进行 React-Native 的开发]]></title>
    <link href="http://hanks.xyz/2015/12/15/react-native-start-md/"/>
    <id>http://hanks.xyz/2015/12/15/react-native-start-md/</id>
    <published>2015-12-15T04:07:52.000Z</published>
    <updated>2015-12-18T02:55:33.874Z</updated>
    <content type="html"><![CDATA[<p>尝试在　<code>Ubuntu 14.04</code>　上面进行 react-native 的开发, 安装<a href="https://facebook.github.io/react-native/docs/getting-started.html" target="_blank" rel="external">官方文档</a>进行配置,记录配置流程</p>
<h2 id="安装_node-js">安装 node.js</h2><p>在<a href="https://nodejs.org/en/" target="_blank" rel="external">官网</a>下载源码安装即可, 安装后查看版本<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">node</span><span class="identifier"> </span><span class="title">-v</span></span><br></pre></td></tr></table></figure></p>
<h2 id="安装_watchman">安装 watchman</h2><p><a href="https://facebook.github.io/watchman/docs/install.html" target="_blank" rel="external">文档</a></p>
<p>安装依赖<br><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-<span class="built_in">get</span> install autoconf  automake python-<span class="built_in">dev</span></span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>安装 watchman, 如果出错, 查看安装依赖的详细文档<br><figure class="highlight smalltalk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="char">$ </span>git clone <span class="method">https:</span>//github.com/facebook/watchman.git</span><br><span class="line"><span class="char">$ </span>cd watchman</span><br><span class="line"><span class="char">$ </span>git checkout v4<span class="number">.3</span><span class="number">.0</span>  # the latest stable release</span><br><span class="line"><span class="char">$ </span>./autogen.sh</span><br><span class="line"><span class="char">$ </span>./configure</span><br><span class="line"><span class="char">$ </span>make</span><br><span class="line"><span class="char">$ </span>sudo make install</span><br></pre></td></tr></table></figure></p>
<h2 id="安装_react-native">安装 react-native</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="operator"><span class="keyword">install</span> -<span class="keyword">g</span> react-<span class="keyword">native</span>-cli</span></span><br></pre></td></tr></table></figure>
<h2 id="创建react-native_项目">创建react-native 项目</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ react-<span class="keyword">native</span> init AwesomeProject</span><br></pre></td></tr></table></figure>
<h2 id="运行">运行</h2><p>启动 server, 如果没有启动server , 会报错 <code>React Native: ReferenceError: Can&#39;t find variable: require (line 1 in the generated bundle)</code></p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ react-<span class="keyword">native</span> start</span><br></pre></td></tr></table></figure>
<p><img src="https://dn-coding-net-production-pp.qbox.me/8cc2616a-d10b-4367-a093-9982589d1a27.png" alt=" react-native start  "></p>
<p>编译apk,并运行到模拟器, 需要配置好Android开发的环境变量(ANDROID_HOME,  GRADLE_HOME )</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ react-<span class="keyword">native</span> run-android</span><br></pre></td></tr></table></figure>
<p><img src="https://dn-coding-net-production-pp.qbox.me/a97d02dc-4546-47e4-899a-644390e87352.png" alt="Android"></p>
<p>做一些修改</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Sample React Native App</span><br><span class="line"> * https://github.com/facebook/react-native</span><br><span class="line"> */</span></span><br><span class="line"><span class="pi">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> React = <span class="built_in">require</span>(<span class="string">'react-native'</span>);</span><br><span class="line"><span class="keyword">var</span> &#123;</span><br><span class="line">  AppRegistry,</span><br><span class="line">  StyleSheet,</span><br><span class="line">  Text,</span><br><span class="line">  View,</span><br><span class="line">&#125; = React;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> AwesomeProject = React.createClass(&#123;</span><br><span class="line">  render: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="xml"><span class="tag">&lt;<span class="title">View</span> <span class="attribute">style</span>=<span class="value">&#123;styles.container&#125;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.welcome&#125;</span>&gt;</span></span><br><span class="line">         Hanks,  Welcome to React Native!</span><br><span class="line">        <span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.instructions&#125;</span>&gt;</span></span><br><span class="line">          To get started, edit index.android.js</span><br><span class="line">        <span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.reply&#125;</span>&gt;</span></span><br><span class="line">         Yep, I do!</span><br><span class="line">        <span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">Text</span> <span class="attribute">style</span>=<span class="value">&#123;styles.instructions&#125;</span>&gt;</span></span><br><span class="line">          Shake or press menu button for dev menu</span><br><span class="line">        <span class="tag">&lt;/<span class="title">Text</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="title">View</span>&gt;</span></span><br><span class="line">    )</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> styles = StyleSheet.create(&#123;</span><br><span class="line">  container: &#123;</span><br><span class="line">    flex: <span class="number">1</span>,</span><br><span class="line">    justifyContent: <span class="string">'center'</span>,</span><br><span class="line">    alignItems: <span class="string">'center'</span>,</span><br><span class="line">    backgroundColor: <span class="string">'#F5FCFF'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  welcome: &#123;</span><br><span class="line">    fontSize: <span class="number">20</span>,</span><br><span class="line">    textAlign: <span class="string">'center'</span>,</span><br><span class="line">    margin: <span class="number">10</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  instructions: &#123;</span><br><span class="line">    textAlign: <span class="string">'center'</span>,</span><br><span class="line">    color: <span class="string">'#333333'</span>,</span><br><span class="line">    marginBottom: <span class="number">5</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 添加style</span></span><br><span class="line">  reply:&#123;</span><br><span class="line">      color: <span class="string">'#e8801b'</span>,</span><br><span class="line">      fontSize: <span class="number">20</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">AppRegistry.registerComponent(<span class="string">'AwesomeProject'</span>, () =&gt; AwesomeProject);</span><br></pre></td></tr></table></figure>
<p>再次reload js, 可以通过菜单调出选项</p>
<p><img src="https://dn-coding-net-production-pp.qbox.me/0028d35c-c502-49ba-8994-c04c3c5ad6aa.png" alt="Android"></p>
<p>＞文章出处: <a href="http://hanks.xyz">http://hanks.xyz</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>尝试在　<code>Ubuntu 14.04</code>　上面进行 react-native 的开发, 安装<a href="https://facebook.github.io/react-native/docs/getting-started.html">官方文档</a>进行配置,记录配置流程</p>
<h2 id="安装_node-js">安装 node.js</h2><p>在<a href="https://nodejs.org/en/">官网</a>下载源码安装即可, 安装后查看版本<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">node</span><span class="identifier"> </span><span class="title">-v</span></span><br></pre></td></tr></table></figure></p>
<h2 id="安装_watchman">安装 watchman</h2><p><a href="https://facebook.github.io/watchman/docs/install.html">文档</a></p>
<p>安装依赖<br><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-<span class="built_in">get</span> install autoconf  automake python-<span class="built_in">dev</span></span><br></pre></td></tr></table></figure></p>]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
      <category term="React-Native" scheme="http://hanks.xyz/tags/React-Native/"/>
    
      <category term="Ubuntu" scheme="http://hanks.xyz/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[重构 Plaid app - 响应式的MVP模式(一)]]></title>
    <link href="http://hanks.xyz/2015/12/08/refactoring-plaid-1/"/>
    <id>http://hanks.xyz/2015/12/08/refactoring-plaid-1/</id>
    <published>2015-12-08T10:17:00.000Z</published>
    <updated>2015-12-10T02:03:26.241Z</updated>
    <content type="html"><![CDATA[<p>Nick Butcher 在 <a href="https://github.com/nickbutcher/plaid" target="_blank" rel="external">github</a> 上开源了Plaid。这个app不仅很酷,还拥有极致的 UI / UX。如此炫酷的app的代码对开发者来说copy下来阅读一下可谓是最佳实践。于是我也copy下来,决定深入Plaid的代码。和往常一样，你会发现里面的一些代码可以用其他的方式实现。因此不只是谈论代码,我决定花一些时间来重构Plaid的部分源代码。我将写3篇文章来分享我关于如何重构Plaid的,这篇文章是第一部分。</p>
<p>前言: 开始我以为自己能重构整个app. 然而,事实是我太天真了,我低估了这个应用的复杂度和新特性的数量。在我花了几个小时阅读 Nick Butcher 的代码之后, 我发现有些功能仅仅通过使用应用程序很难发现。一句话: 我意识到我没有时间把所有的想法付诸行动。因此我的“重构”集中于应用程序的“主页”和“搜索屏幕”。本来想看看有没有更多模块可以重构，但是我没有太多空闲时间来做了。重构代码可以在<a href="https://github.com/sockeqwe/plaid" target="_blank" rel="external">github上</a>找到</p>
<a id="more"></a>
<blockquote>
<ul>
<li>原文链接 :  <a href="http://hannesdorfmann.com/android/plaid-refactored-1/" target="_blank" rel="external">REFACTORING PLAID APP - A REACTIVE MVP APPROACH (PART 1)</a></li>
<li>原文作者 : <a href="http://hannesdorfmann.com/" target="_blank" rel="external">HANNES DORFMANN</a></li>
<li>译文出自 : <a href="http://hanks.xyz/2015/12/08/refactoring-plaid-1/">hanks.xyz</a></li>
<li>译者 : <a href="https://github.com/hanks-zyh" target="_blank" rel="external">hanks-zyh</a></li>
<li>校对者: <a href="https://github.com/desmond1121" target="_blank" rel="external">desmond1121</a></li>
<li>状态 :  完成</li>
</ul>
</blockquote>
<h2 id="初见">初见</h2><p>整体的用户体验和用户交互都非常赞.看下面这条tweet:<br> <img src="https://dn-coding-net-production-pp.qbox.me/754a0ecf-5545-4c24-9d4a-3f16bf89ed8e.png" alt="图片"></p>
<p>使用这个app真是在享受. 它的 UI / UX 对每个开发者或者设计师很激励, 然而,在使用过程中我遇到了一些bug:</p>
<ul>
<li><p>同时显示了加载提示和错误提示:</p>
<iframe width="880" height="660" src="https://www.youtube.com/embed/zCwESjEpNdk" frameborder="0" allowfullscreen></iframe>
</li>
<li><p>在筛选面板中你可以从 Dribbble, Designer News 和 Product Hunt 选择你想要显示的来源.但是当取消选择正在加载数据的”源”的时候,你会遇到item还在显示的问题:</p>
<iframe width="880" height="660" src="https://www.youtube.com/embed/nJ3VUjpW0N0" frameborder="0" allowfullscreen></iframe>
</li>
<li><p>而且app没有考虑屏幕旋转.当屏幕旋转界面会被重新创建,重新执行http请求,你可以看到加载提示</p>
<iframe width="880" height="660" src="https://www.youtube.com/embed/tuIDrtvL0lg" frameborder="0" allowfullscreen></iframe>

</li>
</ul>
<p>通常这样的“问题”是由于<strong>面条式代码</strong> 和架构不够好。所以我们来看看显示项目列表的源代码: 在 <code>HomeActivity</code> (大约750行代码)处理UI元素的可见性,如 <code>RecylcerView</code> 或 <code>ProgressBar</code>. <code>HomeActivity</code> 包含了何时显示Source-Filters-Drawer(右边侧滑栏)的逻辑。此外,它的 <code>onactivityresult()</code>方法里面  做了很多事情,包括发布新的post到designers news。而且它使用 <code>DataManager</code>为选定的 filter 加载数据。你看, <code>HomeActivity</code> 有很多责任,可能太多了。<code>DataManager</code> 基本上使用 <code>retrofit</code> 和 <code>asynctask</code> 来执行http请求加载数据。这里的最头疼的问题是分页,尤其是RecyclerView滑动到底部时需要加载更多数据。<code>DataManager</code> 内部使用<code>HashMap</code>来记录每个源显示的页面数据(后端的endpoint 如 “Dribbble Popular” , “Dribbble Recent” 或者 “Designer News Popular”)。项目中使用<code>FeedAdapter</code>来显示到 RecyclerView上。 并且<code>SearchActivity</code>跟<code>HomeActivity</code>非常相似:它也使用<code>DataManager</code>和<code>FeedAdapter</code>。</p>
<h2 id="架构">架构</h2><p>我觉得当前的项目架构不够清晰。<code>HomeActivity</code>管理了太多事情,简直就是神一样的存在。另一个“问题”是,<code>HomeActivity</code>从不同的方法和不同的事件中调用相同的(内部)方法去改变UI状态,如 <code>checkEmptyState()</code> 在<code>HomeActivity</code>的4个不同的地方被调用.</p>
<p>我们将使用 <code>Model-View-Presenter</code> 来重构一下.  passive view 仅仅用来展示, <code>presenter</code> 告诉 <code>passive view</code> 什么时候展示. 我比较热衷于MVP架构. 经常有人问我为什么我建议使用 passive view,而不是控制器或MVP派生的其他模式。好吧,如果你使用没有 passive view的MVP,你基本上是把<strong>面条式代码</strong>写成了一半的 presenter 一半的 passive view。</p>
<h2 id="HomeActivity_in_MVP">HomeActivity in MVP</h2><p>我们使用 <code>MVP +  passive view</code> 分出两个类: <code>HomeActivity</code> 和 <code>HomeView</code>,  <code>HomeActivity</code>作为View (passive view ) 实现了<code>HomeView</code>接口:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">interface HomeView : MvpView &#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">showLoading</span><span class="params">()</span></span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">showContent</span><span class="params">()</span></span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">showError</span><span class="params">()</span></span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">showLoadingMore</span><span class="params">(showing: <span class="typename">Boolean</span>)</span></span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">showLoadingMoreError</span><span class="params">(t: <span class="typename">Throwable</span>)</span></span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">addOlderItems</span><span class="params">(items: <span class="typename">List&lt;PlaidItem&gt;</span>)</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>现在 <code>HomeActivity</code> 负责管理UI(是否可见,位置,动画),但是由 <code>presenter</code> 决定什么时候去执行, 所以View的状态由<code>HomePresenter</code> 管理, <code>HomePresenter</code> 的代码如下:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HomePresenter</span></span>(<span class="keyword">private</span> <span class="variable"><span class="keyword">val</span> itemsLoader</span>: ItemsLoader<span class="type">&lt;List&lt;PlaidItem&gt;</span>&gt;) : RxPresenter<span class="type">&lt;HomeView, List&lt;PlaidItem&gt;</span>&gt;() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">loadItems</span><span class="params">()</span> &#123;</span></span><br><span class="line"></span><br><span class="line">        view?.showLoading()</span><br><span class="line">        subscribe(</span><br><span class="line">                itemsLoader.firstPage(),</span><br><span class="line">                &#123; <span class="comment">// onError</span></span><br><span class="line">                    view?.showError()</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123; <span class="comment">// onNext</span></span><br><span class="line">                    view?.addOlderItems(it)</span><br><span class="line">                    view?.showContent()</span><br><span class="line">                &#125;</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">loadMore</span><span class="params">()</span> &#123;</span></span><br><span class="line"></span><br><span class="line">        view?.showLoadingMore(<span class="literal">true</span>)</span><br><span class="line">        subscribe(</span><br><span class="line">                itemsLoader.olderPages(),</span><br><span class="line">                &#123; <span class="comment">// onError</span></span><br><span class="line">                    view?.showLoadingMoreError(it)</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123; <span class="comment">// onNext</span></span><br><span class="line">                    view.addOlderItems(it)</span><br><span class="line">                    view.showLoadingMore(<span class="literal">false</span>)</span><br><span class="line">                &#125;</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可能你注意到了,我使用的是kotlin语言,主要是因为我喜欢这个语言并且有幸看到kotlin的发展,由于kotlin的互操作性(与java相互调用)使得我很容易的重用 Nick Butcher的 java 代码(主要是UI 或者View 方面的东西).</p>
<p>为了实现 MVP, 我们使用了 <strong>Mosby</strong> 库,这是一个MVP 库,当旋转屏幕的时候允许我们保持 presenters, 这样就不会在旋转屏幕时重新启动界面,加载提示,进行请求了, <strong>Mosby</strong> 也可以在旋转屏幕的时候保持view的状态.</p>
<p>此外我决定在Model层使用  <code>RxJava</code> (这样在 presenters中可以使用 <code>subscribe()</code> 方法). <code>ItemsLoader</code>类 是我重构的 reactive版本的 DataManager. 我来花一分钟解释一下.</p>
<h2 id="SearchActivity_in_MVP">SearchActivity in MVP</h2><p>就像前面所说的, <code>SearchActivity</code> 和 <code>HomeActivity</code> 很像, 它展示了一个列表(grid),并且会在  <code>RecyclerView</code>滑动到底部的时候加载更多items, 所以 <code>SearchActivity</code> 应用MVP跟前面一样:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> interface SearchView extends MvpView &#123;</span><br><span class="line">  void showLoading();</span><br><span class="line">  void showContent();</span><br><span class="line">  void showError(Throwable t);</span><br><span class="line">  void showLoadingMore(boolean showing);</span><br><span class="line">  void showLoadingMoreError(Throwable t);</span><br><span class="line">  void addOlderItems(List<span class="type">&lt;PlaidItem&gt;</span> items);</span><br><span class="line">  void showSearchNotStarted();</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SearchPresenter</span></span>(<span class="keyword">private</span> <span class="variable"><span class="keyword">val</span> itemsLoaderFactory</span>: SearchItemsLoaderFactory) : RxPresenter<span class="type">&lt;SearchView, List&lt;PlaidItem&gt;</span>&gt;() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="variable"><span class="keyword">var</span> itemsLoader</span>: ItemsLoader<span class="type">&lt;List&lt;PlaidItem&gt;</span>&gt;? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">search</span><span class="params">(query: <span class="typename">String</span>)</span> &#123;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Create items loader for the given query string</span></span><br><span class="line">        itemsLoader = itemsLoaderFactory.create(query)</span><br><span class="line"></span><br><span class="line">        view?.showLoading()</span><br><span class="line"></span><br><span class="line">        subscribe(itemsLoader!!.firstPage(), &#123; <span class="comment">// Error handling</span></span><br><span class="line">            view?.showError(it)</span><br><span class="line">        &#125;, &#123; <span class="comment">// onNext</span></span><br><span class="line">            view?.addOlderItems(it)</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            view?.showContent()</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">searchMore</span><span class="params">(query: <span class="typename">String</span>)</span> &#123;</span></span><br><span class="line"></span><br><span class="line">        view?.showLoadingMore(<span class="literal">true</span>)</span><br><span class="line">        subscribe(itemsLoader!!.olderPages(), &#123; <span class="comment">// Error handling</span></span><br><span class="line">            view?.showLoadingMore(<span class="literal">false</span>)</span><br><span class="line">            view?.showLoadingMoreError(it)</span><br><span class="line">        &#125;, &#123; <span class="comment">// onNext</span></span><br><span class="line">            view?.addOlderItems(it)</span><br><span class="line">        &#125;, &#123; <span class="comment">// onComplete</span></span><br><span class="line">            view?.showLoadingMore(<span class="literal">false</span>)</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">clearSearch</span><span class="params">()</span> &#123;</span></span><br><span class="line">        <span class="comment">// Unsubscribe any previous search subscriptions</span></span><br><span class="line">        unsubscribe()</span><br><span class="line"></span><br><span class="line">        view.showSearchNotStarted()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>跟 <code>HomePresenter</code> 唯一不同的是,  <code>SearchPresenter</code> 通过传入一个<code>SearchItemsLoaderFactory</code> 作为构造方法的参数,为每次搜索查询创建了一个 <code>ItemsLoader</code>. 我们来简单看一下它是怎么工作的.</p>
<h2 id="ItemsLoader_和_Pagination">ItemsLoader 和 Pagination</h2><p>目前我们完成了 <code>View</code> 和 <code>Presenter</code>, 现在讨论一下如何重构 “Model”</p>
<p>在我们开始之前: 了解一下 <code>PlaidItem</code>类 ( 包含title和 image url). 这个类是单个item的基类<br><code>Shot</code> extends <code>PlaidItem</code> :代表从Dribbble加载的item<br><code>Story</code> extends <code>PlaidItem</code>: 代表从Designer News加载的item<br><code>Post</code> extends <code>PlaidItem</code>: 代表从 Product Hunt 加载的item<br>现在我们讨论一下使用<code>RxJava</code> 来高效的重写一下 <code>DataManager</code>, 我使用RxJava是因为它简直酷毙了, 你将会体会到它的强大(特别是这个系列的第二篇)并且从中受益.</p>
<p>加载项的困难的部分是,我们从不同的后端支持分页和加载items。我们“自下而上”构建 <code>ItemsLoader</code> 。“底部”有一个执行 http 的 Retrofit 接口。现在你可以搜索Dribbble和DesignerNews。分页的问题: Dribbble 调用 loadItems(0,100) 来加载100个items, 调用loadItems(100、200)加载下一个页面的100个, 而DesignerNews是每次page加1,通过调用 loadItems(0,1)来加载第一个页面, 调用loadItems(1,2)加载下一个页面。我们需要一个通用的API。我们可以使用kotlin的高级函数(传递函数参数或者匿名函数)。所以我们需要的是一个组件,这个组件包含一个可以执行http请求并返回一个Observable的方法。所以我们需要这样的:  <code>backendMethodToCall:(Int,Int)-&gt; Observable&lt;T&gt;</code>, 第一个参数代表page,第二个代表limit(每页加载多少条), T 泛型代表返回结果的类型(事实上类型总是&lt; PlaidItem&gt;)。<br> 我们把这个组件叫做 <code>RouteCaller</code>:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RouteCaller</span>&lt;<span class="type">T</span>&gt;</span>(<span class="keyword">private</span> <span class="variable"><span class="keyword">val</span> startPage</span>: <span class="typename">Int</span> = <span class="number">0</span>,</span><br><span class="line">                     <span class="keyword">private</span> <span class="variable"><span class="keyword">val</span> itemsPerPage</span>: <span class="typename">Int</span>,</span><br><span class="line">                     <span class="keyword">private</span> <span class="variable"><span class="keyword">val</span> backendMethodToCall</span>: (<span class="typename">Int</span>, <span class="typename">Int</span>) -&gt; Observable<span class="type">&lt;T&gt;</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * Offset for loading more</span><br><span class="line">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable"><span class="keyword">val</span> olderPageOffset</span> = AtomicInteger(startPage)</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * A queue that is used to retry "older"</span><br><span class="line">     * pages if they have failed before continue with even more older</span><br><span class="line">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable"><span class="keyword">val</span> olderFailedButRetryLater</span>: Queue<span class="type">&lt;Int&gt;</span> = LinkedBlockingQueue<span class="type">&lt;Int&gt;</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * Get an observable to load older data from backend.</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">getOlderWithRetry</span><span class="params">()</span>: Observable<span class="type">&lt;T&gt;</span> &#123;</span></span><br><span class="line"></span><br><span class="line">        <span class="variable"><span class="keyword">val</span> pageOffset</span> = <span class="keyword">if</span> (</span><br><span class="line">        olderFailedButRetryLater.isEmpty()) &#123;</span><br><span class="line">            olderPageOffset.addAndGet(itemsPerPage)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            olderFailedButRetryLater.poll()</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> backendMethodToCall(pageOffset, itemsPerPage)</span><br><span class="line">                .doOnError &#123;</span><br><span class="line">                    olderFailedButRetryLater.add(pageOffset)</span><br><span class="line">                &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * Get an observable to load the newest data from backend.</span><br><span class="line">     * This method should be invoked on pull to refresh</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">getFirst</span><span class="params">()</span>: Observable<span class="type">&lt;T&gt;</span> &#123;</span></span><br><span class="line">        <span class="keyword">return</span> backendMethodToCall(startPage, itemsPerPage)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>RouteCaller</code> 接受一个<code>method(Int, Int) -&gt; Observable&lt;T&gt;</code> 作为构造函数的参数, 根据传入不同的参数执行不同的动作:</p>
<ul>
<li>getFirst() 加载第一页</li>
<li>getOlderWithRetry(): 加载老的数据.<br>我们使用 <code>olderFailedButRetryLater</code> 字段来记录当前页码, 当执行加载更多的时候加1, 此外当加载下一页数据失败后,我们在 <code>.doOnError()</code> 方法中进行重试<br>所以 <code>RouteCaller</code>的职责就是传输参数,执行实际的后端请求,于是有下面的结构:</li>
</ul>
<p><img src="http://hannesdorfmann.com/images/plaid/routing1.png" alt="RouteCaller"></p>
<p>我们有两个接口 <code>DesignerNewsService</code> 和 <code>DribbleService</code> 去执行搜索, 这意味着我们需要两个 <code>RouteCaller</code>:</p>
<p><img src="http://hannesdorfmann.com/images/plaid/routing1.png" alt="RouteCaller"></p>
<p>下一个问题是:如何实例化一个 <code>RouteCalls</code>? 我们为每一个后端服务各定义一个 <code>RouteCallerFactory</code>,<br>它提供一个方法 <code>getAllBackendCallers()</code> 来得到一个 Observable的 <code>List&lt;RouteCaller&gt;</code>.</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">interface RouteCallerFactory<span class="type">&lt;T&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * Get all available backend route callers</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">getAllBackendCallers</span><span class="params">()</span>: Observable<span class="type">&lt;List&lt;RouteCaller&lt;T&gt;</span>&gt;&gt;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DesignerNewsSearchCallerFactory</span></span>(<span class="keyword">private</span> <span class="variable"><span class="keyword">val</span> searchQuery</span>: String, <span class="keyword">private</span> <span class="variable"><span class="keyword">val</span> backend</span>: DesignerNewsService) : RouteCallerFactory<span class="type">&lt;List&lt;PlaidItem&gt;</span>&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable"><span class="keyword">val</span> extractPlaidItemsFromStory</span> = <span class="function"><span class="title">fun</span><span class="params">(story: <span class="typename">StoriesResponse</span>)</span>: List<span class="type">&lt;PlaidItem&gt;</span> &#123;</span></span><br><span class="line">        <span class="keyword">return</span> story.stories</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// The method to execute from RouteCaller</span></span><br><span class="line">    <span class="variable"><span class="keyword">val</span> searchCall</span> = <span class="function"><span class="title">fun</span><span class="params">(pageOffset: <span class="typename">Int, itemsPerPage: Int</span>)</span>: Observable<span class="type">&lt;List&lt;PlaidItem&gt;</span>&gt; &#123;</span></span><br><span class="line">        <span class="keyword">return</span> backend.search(searchQuery, pageOffset).map(extractPlaidItemsFromStory)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Create a list with one single RouteCaller() with "searchCall" as method reference</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable"><span class="keyword">val</span> callers</span> = arrayListOf(RouteCaller(<span class="number">0</span>, <span class="number">100</span>, searchCall))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getAllBackendCallers</span><span class="params">()</span>: Observable<span class="type">&lt;List&lt;RouteCaller&lt;List&lt;PlaidItem&gt;</span>&gt;&gt;&gt; &#123;</span></span><br><span class="line">        <span class="keyword">return</span> Observable.just(callers)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果你是初学kotlin,乍一看 <code>DesignerNewsSearchCallerFactory</code> 有点奇怪,我们没有使用Lambda而是创建一个searchCall属性,它实际上是一个函数 <code>(Int, Int) -&gt; Observable&lt;List&lt;PlaidItem&gt;&gt;</code>。</p>
<p>这样做是有原因的: 最近我看到Android团队在<code>Android2015开发者峰会</code>被问到何时添加Java 8支持。<strong>Reto Meier</strong> 回答说,许多开发人员主要是对Lambda 感兴趣, 当他问观众:想要Android加入Lambda 的请举手,然后几乎所有人举手了。我认为,对于Lambda 有一种普遍的误解: Lambda如此强大是因为它的高阶函数和函数传递。Lambda 只不过是一个是匿名函数。实际上,Lambda并不能测试,它们是硬编码的。例如,我还会实现这样的:</p>
<figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RouteCaller<span class="list">(<span class="number">0</span>, <span class="number">100</span>, &#123; pageOffset, limit -&gt; backend.search<span class="list">(<span class="keyword">searchQuery</span>, pageOffset)</span> &#125;)</span></span><br></pre></td></tr></table></figure>
<p>Next we introduce a Router which is responsible to combine all RouteCaller from different RouteCallerFactories to one single Observable list:</p>
<p>我们应该怎么写单元测试呢? 不可能给匿名函数写单元测试,因为它们是”硬编码的”,  然而,如果我们传递一个函数作为参数,那么很容易为这个函数写一个单元测试. 在Java8中,传递一个函数参数这样写 <code>::searchCall</code>. 不幸的是, kotlin还不支持,目前仅仅支持静态方法,因此这里定义一个函数作为属性. 在这个系列文章的最后我会介绍一下我使用kotlin的体会.</p>
<p>好了,看一下”搜索”的结构</p>
<p><img src="http://hannesdorfmann.com/images/plaid/routing3.png" alt="RouteCallerFactory"></p>
<p>注意,<code>getAllBackendCallers()</code> 返回一个列表,其中包含一个RouteCaller,但这个想法是 RouteCallerFactory创建所有RouteCallers。稍后我们将看到,在Dribbble上RouteCallers HomeDribbbleCallerFactory返回一个RouteCaller的列表,代表每个端点加载item,如受欢迎的项目,最近的,动画等.</p>
<p><img src="http://hannesdorfmann.com/images/plaid/routing4.png" alt="RouteCallerFactory"></p>
<p>下面我们介绍<code>Router</code>, 它负责组合所有的 RouteCaller, 将不同的 RouteCallerFactories 返回一个单个的 Observable的list:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Router</span>&lt;<span class="type">T</span>&gt;</span>(<span class="keyword">private</span> <span class="variable"><span class="keyword">val</span> routeFactories</span>: List<span class="type">&lt;RouteCallerFactory&lt;T&gt;</span>&gt;) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">getAllRoutes</span><span class="params">()</span>: Observable<span class="type">&lt;List&lt;RouteCaller&lt;T&gt;</span>&gt;&gt; &#123;</span></span><br><span class="line">        <span class="variable"><span class="keyword">val</span> callers</span> = ArrayList<span class="type">&lt;Observable&lt;List&lt;RouteCaller&lt;T&gt;</span>&gt;&gt;&gt;()</span><br><span class="line"></span><br><span class="line">        routeFactories.forEach &#123;</span><br><span class="line">            callers.add(it.getAllBackendCallers())</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Observable.combineLatest(callers, &#123; calls -&gt;</span><br><span class="line">            <span class="variable"><span class="keyword">val</span> items</span> = ArrayList<span class="type">&lt;RouteCaller&lt;T&gt;</span>&gt;(calls.size)</span><br><span class="line">            calls.forEach &#123;</span><br><span class="line">                items.addAll(it <span class="keyword">as</span> List<span class="type">&lt;RouteCaller&lt;T&gt;</span>&gt;)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            items <span class="comment">// return items</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如你所见 <code>Route</code> 接收一个<code>RouteCallerFactory</code>列表,换句话说:通过构造函数可以配置Route。下面来完成“路由图”:</p>
<p><img src="http://hannesdorfmann.com/images/plaid/routing5.png" alt=""></p>
<p>好了,到目前为止,我们重构了“routing 部分”。最后<code>Router</code>提供了一个 <code>Observable&lt;List&lt;RouteCaller&lt;T&gt;&gt;&gt;</code> 。那么什么时候在RecyclerView中显示item呢?这就是<code>ItemsLoader</code>的职责了。正如它的名字,该组件用来加载item:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ItemsLoader</span>&lt;<span class="type">T</span>&gt;</span>(<span class="keyword">protected</span> <span class="variable"><span class="keyword">val</span> router</span>: Router<span class="type">&lt;T&gt;</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">firstPage</span><span class="params">()</span>: Observable<span class="type">&lt;T&gt;</span> &#123;</span></span><br><span class="line">        <span class="keyword">return</span> FirstPage<span class="type">&lt;T&gt;</span>(router.getAllRoutes()).asObservable()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">olderPages</span><span class="params">()</span>: Observable<span class="type">&lt;T&gt;</span> &#123;</span></span><br><span class="line">        <span class="keyword">return</span> OlderPage<span class="type">&lt;T&gt;</span>(router.getAllRoutes()).asObservable()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>ItemsLoader</code> 接受一个 <code>Router</code> 作为构造函数的参数, 此外接受两个方法, firstPage()返回一个代表first page的 <code>Observable</code>, olderPages()返回一个代表older pager的 <code>Observable</code>.一个page代表RecyclerView显示的一页items,当我们滑动到底部的时候加载下一页数据.<br>看一下 <code>Page</code>, <code>FirstPage</code> 和 <code>OlderPage</code> 的代码:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">abstract <span class="class"><span class="keyword">class</span> <span class="title">Page</span>&lt;<span class="type">T</span>&gt;</span>(<span class="variable"><span class="keyword">val</span> routeCalls</span>: Observable<span class="type">&lt;List&lt;RouteCaller&lt;T&gt;</span>&gt;&gt;) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="variable"><span class="keyword">var</span> failed</span> = AtomicInteger()</span><br><span class="line">    <span class="keyword">private</span> <span class="variable"><span class="keyword">var</span> backendCallsCount</span>: <span class="typename">Int</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * Return an observable for this page</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">asObservable</span><span class="params">()</span>: Observable<span class="type">&lt;T?&gt;</span> &#123;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> routeCalls.flatMap &#123; routeCalls -&gt;</span><br><span class="line"></span><br><span class="line">            backendCallsCount = routeCalls.size</span><br><span class="line">            <span class="variable"><span class="keyword">val</span> observables</span> = arrayListOf<span class="type">&lt;Observable&lt;T&gt;</span>&gt;()</span><br><span class="line">            routeCalls.forEach &#123; call -&gt;</span><br><span class="line">                    <span class="variable"><span class="keyword">val</span> observable</span> = getRouteCall(call).onErrorResumeNext &#123; error -&gt;</span><br><span class="line">                      <span class="comment">// Suppress errors as long as not all fail</span></span><br><span class="line">                        error.printStackTrace()</span><br><span class="line">                        <span class="variable"><span class="keyword">val</span> fails</span> = failed.incrementAndGet()</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (fails == backendCallsCount) &#123;</span><br><span class="line">                            Observable.error(error) <span class="comment">// All failed so emmit error</span></span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            Observable.empty() <span class="comment">// Not all failed, so ignore this error and emit nothing</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    observables.add(observable);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// return the created Observable</span></span><br><span class="line">                Observable.merge(observables)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> abstract <span class="function"><span class="keyword">fun</span> <span class="title">getRouteCall</span><span class="params">(caller: <span class="typename">RouteCaller&lt;T&gt;</span>)</span>: Observable<span class="type">&lt;T&gt;</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FirstPage</span>&lt;<span class="type">T</span>&gt;</span>(routeCalls: Observable<span class="type">&lt;List&lt;RouteCaller&lt;T&gt;</span>&gt;&gt;) : Page<span class="type">&lt;T&gt;</span>(routeCalls) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getRouteCall</span><span class="params">(caller: <span class="typename">RouteCaller&lt;T&gt;</span>)</span>: Observable<span class="type">&lt;T&gt;</span> &#123;</span></span><br><span class="line">        <span class="keyword">return</span> caller.getFirst();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OlderPage</span>&lt;<span class="type">T</span>&gt;</span>(routeCalls: Observable<span class="type">&lt;List&lt;RouteCaller&lt;T&gt;</span>&gt;&gt;) : Page<span class="type">&lt;T&gt;</span>(routeCalls) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getRouteCall</span><span class="params">(caller: <span class="typename">RouteCaller&lt;T&gt;</span>)</span>: Observable<span class="type">&lt;T&gt;</span> &#123;</span></span><br><span class="line">        <span class="keyword">return</span> caller.getOlderWithRetry();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>Page</code>类负责调用<code>RouteCaller</code>的方法来执行http请求,我们不希望因为某个后端的调用失败导致整个页面数据获取失败,因此我们使用 <code>onErrorResumeNext()</code> 来拦截错误,然后返回一个http请求调用失败的 error.然后 <code>Presenter</code>通过<code>ItemsLoader</code> 订阅页面的 <code>observable</code>.</p>
<h2 id="依赖注入">依赖注入</h2><p>你可能注意到了,到目前为止几乎所有的组件都拥有一个接受其他组件作为参数的构造方法. 这是设计好的,现在我们使用 <code>Dagger</code>(我使用的 <code>Dagger1</code>) 来组合我们需要的元素:<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Module</span>(</span><br><span class="line">    injects = &#123;</span><br><span class="line">        HomePresenter.<span class="keyword">class</span></span><br><span class="line">    &#125;,</span><br><span class="line">    addsTo = ApplicationModule.<span class="keyword">class</span> <span class="comment">// contains Retrofit interfaces</span></span><br><span class="line">)</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">HomeModule</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="annotation">@Provides</span> <span class="annotation">@Singleton</span> HomePresenter provideSearchPresenter(SourceDao sourceDao,</span><br><span class="line">      DribbbleService dribbbleBackend,</span><br><span class="line">      DesignerNewsService designerNewsBackend,</span><br><span class="line">      ProductHuntService productHuntBackend ) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Create the router</span></span><br><span class="line">    <span class="built_in">List</span>&lt;RouteCallerFactory&lt;<span class="built_in">List</span>&lt;? <span class="keyword">extends</span> PlaidItem&gt;&gt;&gt; routeCallerFactories = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="number">3</span>);</span><br><span class="line">    routeCallerFactories.add(<span class="keyword">new</span> HomeDribbbleCallerFactory(dribbbleBackend, sourceDao));</span><br><span class="line">    routeCallerFactories.add(<span class="keyword">new</span> HomeDesingerNewsCallerFactory(designerNewsBackend, sourceDao));</span><br><span class="line">    routeCallerFactories.add(<span class="keyword">new</span> HomeProductHuntCallerFactory(productHuntBackend, sourceDao));</span><br><span class="line"></span><br><span class="line">    Router&lt;<span class="built_in">List</span>&lt;? <span class="keyword">extends</span> PlaidItem&gt;&gt; router = <span class="keyword">new</span> Router&lt;&gt;(routeCallerFactories);</span><br><span class="line"></span><br><span class="line">    ItemsLoader&lt;<span class="built_in">List</span>&lt;? <span class="keyword">extends</span> PlaidItem&gt;&gt; itemsLoader = <span class="keyword">new</span> ItemsLoader&lt;&gt;(router);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> HomePresenterImpl(itemsLoader);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>正如你所见, 我们可以使用 <code>Dagger</code>来配置 <code>Router</code> 和 <code>ItemsLoader</code>. 我们给 <code>SearchModule</code>的<code>SearchPresenter</code>  配置一个 <code>ItemsLoader</code>和<code>Router</code>. 优势就是,如果有一天我们想要添加另一个“源”,如reddit,我们唯一要做的就是定义一个<code>RedditService</code>(Retrofit), <code>RedditCallerFactoy</code>并在<code>Router</code>中添加这个<code>CallerFactory</code>。我们可以在一个具体的 dagger module中,而不用修改其他类(开闭原则)。换句话说:我们已经通过依赖注入建立了一个可配置“插件系统”。<br>您可能已经注意到 <code>SourceDao</code> 类的代码。我们将在第二篇博客中讨论如何将响应式编程进行得更彻底。</p>
<h2 id="第一部分总结">第一部分总结</h2><p>这是这个系列博客的第一篇.这篇文章中我们使用了MVP模式,并且重构了一下从后端加载数据的方法. 主要任务就是将大的复杂的任务拆分成小的可重用的组件,如 <code>ItemsLoader</code>, <code>Page</code>, <code>Router</code> 和 <code>RouteCaller</code> ,更加遵循 SOLID (Single responsibility, Open-closed, Liskov substitution, Interface segregation and Dependency inversion) ,如 DataManager 的实现.</p>
<p>总之,有更好的方法去实现这样一个app. 特别是 <code>ItemsLoader</code> 可以以完全不同的方式实现,我首先想到的是使用<code>RxJava</code>的 <code>SwitchOnNext()</code>或者 <code>merge</code>操作符去创建一个Observable去加载下一页数据. 但是,关于UI和错误处理,如果我可以单一观测分割成两个可见(first Page,older Page )会更容易实现</p>
<p>总之,欢迎提建议或反馈!<br>在第二部分, 我将使用<code>RxJava</code> 去重构Plaid 来实现一个 “真正意义上的响应式”的app.</p>
<blockquote>
<p>文章出处<a href="http://hanks.xyz">Hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>Nick Butcher 在 <a href="https://github.com/nickbutcher/plaid">github</a> 上开源了Plaid。这个app不仅很酷,还拥有极致的 UI / UX。如此炫酷的app的代码对开发者来说copy下来阅读一下可谓是最佳实践。于是我也copy下来,决定深入Plaid的代码。和往常一样，你会发现里面的一些代码可以用其他的方式实现。因此不只是谈论代码,我决定花一些时间来重构Plaid的部分源代码。我将写3篇文章来分享我关于如何重构Plaid的,这篇文章是第一部分。</p>
<p>前言: 开始我以为自己能重构整个app. 然而,事实是我太天真了,我低估了这个应用的复杂度和新特性的数量。在我花了几个小时阅读 Nick Butcher 的代码之后, 我发现有些功能仅仅通过使用应用程序很难发现。一句话: 我意识到我没有时间把所有的想法付诸行动。因此我的“重构”集中于应用程序的“主页”和“搜索屏幕”。本来想看看有没有更多模块可以重构，但是我没有太多空闲时间来做了。重构代码可以在<a href="https://github.com/sockeqwe/plaid">github上</a>找到</p>]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
      <category term="Refactoring" scheme="http://hanks.xyz/tags/Refactoring/"/>
    
      <category term="Rxjava" scheme="http://hanks.xyz/tags/Rxjava/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Rx中的线程切换]]></title>
    <link href="http://hanks.xyz/2015/12/06/rx_thread/"/>
    <id>http://hanks.xyz/2015/12/06/rx_thread/</id>
    <published>2015-12-06T15:26:00.000Z</published>
    <updated>2015-12-10T02:01:55.013Z</updated>
    <content type="html"><![CDATA[<p>初学者在使用<code>RxJava</code>的过程中，经常搞不清Observable的事件序列和每次操作应该怎样切换线程，切换哪个线程<br>首先需要搞懂在<code>RxJava</code> 中<code>.subscribeOn()</code> 和  <code>observeOn()</code> 之间的区别：</p>
<ul>
<li><code>.subscribeOn()</code> 用来指定<code>Observable</code>应该操作的调度器(<code>Scheduler</code>)</li>
<li><code>.observeOn()</code> 指定 <code>Observable</code>在一个指定的调度器(<code>Scheduler</code>)上给观察者发送通知</li>
<li>默认情况下， 事件序列操作的线程与调用<code>.subscribe()</code>的线程一致</li>
</ul>
<p>没理解？<br><a id="more"></a></p>
<blockquote>
<p>英文原文: <a href="https://medium.com/@diolor/observe-in-the-correct-thread-1939bb9bb9d2#.nn1m7lrb8" target="_blank" rel="external">https://medium.com/@diolor/observe-in-the-correct-thread-1939bb9bb9d2#.nn1m7lrb8</a><br><br>翻译: <a href="https://github.com/hanks-zyh" target="_blank" rel="external">hanks</a><br>注: 不是完全翻译,添加了具体例子</p>
</blockquote>
<h2 id="例子">例子</h2><h3 id="1-主线程_/_-subscribe()_线程">1.主线程 /  .subscribe() 线程</h3><p>在 Activity的 <code>onCreate()</code>(主线程) 方法中添加以下代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Observable.just(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">  .subscribe();</span><br></pre></td></tr></table></figure>
<p>调用情况如下：</p>
<p><img src="https://dn-coding-net-production-pp.qbox.me/37e26756-da0d-46bb-bb2f-9b77ff067957.png" alt="图片"></p>
<p><strong>实验:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Observable.just(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">            .doOnNext(<span class="keyword">new</span> Action1&lt;Integer&gt;() &#123;</span><br><span class="line">                <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(Integer integer)</span> </span>&#123;</span><br><span class="line">                    Log.i(<span class="string">"RxThread"</span>, <span class="string">"doOnNext:"</span> + integer +<span class="string">", run In :"</span> + Thread.currentThread().getName() );</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            .subscribe(<span class="keyword">new</span> Action1&lt;Integer&gt;() &#123;</span><br><span class="line">                <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(Integer integer)</span> </span>&#123;</span><br><span class="line">                    Log.i(<span class="string">"RxThread"</span>, <span class="string">"get result:"</span> + integer +<span class="string">", run In :"</span> + Thread.currentThread().getName() );</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure>
<p><strong>输出结果:</strong></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">14</span>:<span class="number">39.225</span> <span class="number">15603</span>-<span class="number">15603</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">1</span>, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">14</span>:<span class="number">39.225</span> <span class="number">15603</span>-<span class="number">15603</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">1</span>, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">14</span>:<span class="number">39.225</span> <span class="number">15603</span>-<span class="number">15603</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">2</span>, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">14</span>:<span class="number">39.225</span> <span class="number">15603</span>-<span class="number">15603</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">2</span>, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">14</span>:<span class="number">39.225</span> <span class="number">15603</span>-<span class="number">15603</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">3</span>, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">14</span>:<span class="number">39.225</span> <span class="number">15603</span>-<span class="number">15603</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">3</span>, run In :main</span><br></pre></td></tr></table></figure>
<h3 id="2-_-subscribeOn()">2. .subscribeOn()</h3><p>即使你在主线程中添加下面的代码，但是整段代码将运行在 <code>.subscribeOn()</code>定义的线程上</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Observable.just(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">  .subscribeOn(Schedulers.newThread())</span><br><span class="line">  .subscribe();</span><br></pre></td></tr></table></figure>
<p><img src="https://dn-coding-net-production-pp.qbox.me/5004ed8c-6b4d-42fc-93d8-ed22c4af79d3.png" alt="图片"></p>
<p><strong>实验:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Observable.just(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">           .doOnNext(<span class="keyword">new</span> Action1&lt;Integer&gt;() &#123;</span><br><span class="line">               <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(Integer integer)</span> </span>&#123;</span><br><span class="line">                   Log.i(<span class="string">"RxThread"</span>, <span class="string">"doOnNext:"</span> + integer +<span class="string">", run In :"</span> + Thread.currentThread().getName() );</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">           .subscribeOn(Schedulers.newThread())</span><br><span class="line">           .subscribe(<span class="keyword">new</span> Action1&lt;Integer&gt;() &#123;</span><br><span class="line">               <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(Integer integer)</span> </span>&#123;</span><br><span class="line">                   Log.i(<span class="string">"RxThread"</span>, <span class="string">"get result:"</span> + integer +<span class="string">", run In :"</span> + Thread.currentThread().getName() );</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br></pre></td></tr></table></figure>
<p><strong>输出结果:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">13</span>:<span class="number">17.717</span> <span class="number">14294</span>-<span class="number">14319</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">1</span>, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">13</span>:<span class="number">17.717</span> <span class="number">14294</span>-<span class="number">14319</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">1</span>, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">13</span>:<span class="number">17.717</span> <span class="number">14294</span>-<span class="number">14319</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">2</span>, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">13</span>:<span class="number">17.717</span> <span class="number">14294</span>-<span class="number">14319</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">2</span>, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">13</span>:<span class="number">17.717</span> <span class="number">14294</span>-<span class="number">14319</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">3</span>, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">13</span>:<span class="number">17.717</span> <span class="number">14294</span>-<span class="number">14319</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">3</span>, run In :RxNewThreadScheduler-<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h3 id="3-_-observeOn()">3. .observeOn()</h3><p>加入在主线程中添加下面的代码，首先 <code>Observable</code> 将在 <code>.subscribe()</code> 的线程上创建，但是 <code>.observeOn()</code>方法被调用之后，代码将运行在指定的线程上：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">Observable</span><span class="class">.just</span>(1,2,3)</span><br><span class="line">  <span class="class">.observeOn</span>(<span class="tag">Schedulers</span><span class="class">.newThread</span>())</span><br><span class="line">  <span class="class">.subscribe</span>();</span><br></pre></td></tr></table></figure>
<p><img src="https://dn-coding-net-production-pp.qbox.me/97cc479d-fd85-4825-bdfa-b3b3b742a829.png" alt="图片"></p>
<p><strong>实验:</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread() &#123;</span><br><span class="line">           <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">               Observable.just(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>).doOnNext(<span class="keyword">new</span> Action1&lt;Integer&gt;() &#123;</span><br><span class="line">                   <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(Integer integer)</span> </span>&#123;</span><br><span class="line">                       Log.i(<span class="string">"RxThread"</span>, <span class="string">"doOnNext:"</span> + integer + <span class="string">", run In :"</span> + Thread.currentThread()</span><br><span class="line">                               .getName());</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;)</span><br><span class="line">               .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">               .subscribe(<span class="keyword">new</span> Action1&lt;Integer&gt;() &#123;</span><br><span class="line">                   <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(Integer integer)</span> </span>&#123;</span><br><span class="line">                       Log.i(<span class="string">"RxThread"</span>, <span class="string">"get result:"</span> + integer + <span class="string">", run In :"</span> + Thread.currentThread()</span><br><span class="line">                               .getName());</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;.start();</span><br></pre></td></tr></table></figure></p>
<p><strong>输出结果:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">18</span>:<span class="number">06.493</span> <span class="number">18584</span>-<span class="number">18606</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">1</span>, run In :Thread-<span class="number">155</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">18</span>:<span class="number">06.493</span> <span class="number">18584</span>-<span class="number">18606</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">2</span>, run In :Thread-<span class="number">155</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">18</span>:<span class="number">06.493</span> <span class="number">18584</span>-<span class="number">18606</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">3</span>, run In :Thread-<span class="number">155</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">18</span>:<span class="number">06.521</span> <span class="number">18584</span>-<span class="number">18584</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">1</span>, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">18</span>:<span class="number">06.521</span> <span class="number">18584</span>-<span class="number">18584</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">2</span>, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">18</span>:<span class="number">06.521</span> <span class="number">18584</span>-<span class="number">18584</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">3</span>, run In :main</span><br></pre></td></tr></table></figure>
<h3 id="3-_Combined_logic">3. Combined logic</h3><p>由于操作可以被组合使用,于是有了下面的代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Observable.just(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">  .subscribeOn(Schedulers.newThread())</span><br><span class="line">  .observeOn(Schedulers.newThread())</span><br><span class="line">  .subscribe();</span><br></pre></td></tr></table></figure>
<p><img src="https://dn-coding-net-production-pp.qbox.me/5abaaea0-babd-490c-abcb-6d404d3aa285.png" alt="图片"></p>
<p><strong>实验:</strong></p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">new</span> <span class="keyword">Thread</span>() &#123;</span><br><span class="line">     @Override <span class="keyword">public</span> <span class="literal">void</span> run() &#123;</span><br><span class="line">         Observable<span class="built_in">.</span>just(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)<span class="built_in">.</span>doOnNext(<span class="literal">new</span> Action1&lt;<span class="built_in">Integer</span>&gt;() &#123;</span><br><span class="line">             @Override <span class="keyword">public</span> <span class="literal">void</span> call(<span class="built_in">Integer</span> <span class="built_in">integer</span>) &#123;</span><br><span class="line">                 <span class="keyword">Log</span><span class="built_in">.</span>i(<span class="string">"RxThread"</span>, <span class="string">"doOnNext:"</span> + <span class="built_in">integer</span> + <span class="string">", run In :"</span> + <span class="keyword">Thread</span><span class="built_in">.</span>currentThread()</span><br><span class="line">                         <span class="built_in">.</span>getName());</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;)</span><br><span class="line">         <span class="built_in">.</span>subscribeOn(Schedulers<span class="built_in">.</span>newThread())</span><br><span class="line">         <span class="built_in">.</span>observeOn(AndroidSchedulers<span class="built_in">.</span>mainThread())</span><br><span class="line">         <span class="built_in">.</span>subscribe(<span class="literal">new</span> Action1&lt;<span class="built_in">Integer</span>&gt;() &#123;</span><br><span class="line">             @Override <span class="keyword">public</span> <span class="literal">void</span> call(<span class="built_in">Integer</span> <span class="built_in">integer</span>) &#123;</span><br><span class="line">                 <span class="keyword">Log</span><span class="built_in">.</span>i(<span class="string">"RxThread"</span>, <span class="string">"get result:"</span> + <span class="built_in">integer</span> + <span class="string">", run In :"</span> + <span class="keyword">Thread</span><span class="built_in">.</span>currentThread()</span><br><span class="line">                         <span class="built_in">.</span>getName());</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;<span class="built_in">.</span>start();</span><br></pre></td></tr></table></figure>
<p><strong>输出结果:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">19</span>:<span class="number">53.066</span> <span class="number">20247</span>-<span class="number">20274</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">1</span>, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">19</span>:<span class="number">53.066</span> <span class="number">20247</span>-<span class="number">20274</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">2</span>, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">19</span>:<span class="number">53.066</span> <span class="number">20247</span>-<span class="number">20274</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">3</span>, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">19</span>:<span class="number">53.077</span> <span class="number">20247</span>-<span class="number">20247</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">1</span>, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">19</span>:<span class="number">53.077</span> <span class="number">20247</span>-<span class="number">20247</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">2</span>, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">19</span>:<span class="number">53.077</span> <span class="number">20247</span>-<span class="number">20247</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">3</span>, run In :main</span><br></pre></td></tr></table></figure>
<h2 id="Tips_/_Gotchas:">Tips / Gotchas:</h2><h3 id="1-_“UI线程运行异常”">1. “UI线程运行异常”</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Observable.just(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">  .subscribeOn(Schedulers.newThread())</span><br><span class="line">  .subscribe(<span class="comment">/** logic which touches ui **/</span>/); <span class="comment">//在newThread中调用</span></span><br></pre></td></tr></table></figure>
<p>obviously.</p>
<h3 id="2-_逻辑处理放在后台(newThread)">2. 逻辑处理放在后台(newThread)</h3><p>错误姿势：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Observable.just(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">  .subscribeOn(Schedulers.newThread())</span><br><span class="line">  .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">  .flatMap(<span class="comment">/** logic which doesn't touch ui **/</span>/)</span><br><span class="line">  .subscribe();</span><br></pre></td></tr></table></figure>
<p><strong>实验:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread() &#123;</span><br><span class="line">       <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">           Observable.just(<span class="string">"Android-Picasso"</span>, <span class="string">"Android-Glide"</span>, <span class="string">"Android-Fresco"</span>).doOnNext(<span class="keyword">new</span> Action1&lt;String&gt;() &#123;</span><br><span class="line">               <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">                   Log.i(<span class="string">"RxThread"</span>, <span class="string">"doOnNext:"</span> + str + <span class="string">", run In :"</span> + Thread.currentThread()</span><br><span class="line">                           .getName());</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">           .subscribeOn(Schedulers.newThread())</span><br><span class="line">           .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">           .flatMap(<span class="keyword">new</span> Func1&lt;String, Observable&lt;String&gt;&gt;() &#123;</span><br><span class="line">               <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> Observable&lt;String&gt; <span class="title">call</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">                   Log.i(<span class="string">"RxThread"</span>, <span class="string">"flatMap:"</span> + str + <span class="string">", run In :"</span> + Thread.currentThread());</span><br><span class="line">                   <span class="keyword">return</span> Observable.from(str.split(<span class="string">"-"</span>) ); <span class="comment">// 返回平方</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">           .subscribe(<span class="keyword">new</span> Action1&lt;String&gt;() &#123;</span><br><span class="line">               <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">                   Log.i(<span class="string">"RxThread"</span>, <span class="string">"get result:"</span> + str + <span class="string">", run In :"</span> + Thread.currentThread()</span><br><span class="line">                           .getName());</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;.start();</span><br></pre></td></tr></table></figure>
<p><strong>输出结果:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.181</span> <span class="number">8161</span>-<span class="number">8190</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Picasso, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.181</span> <span class="number">8161</span>-<span class="number">8190</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Glide, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.181</span> <span class="number">8161</span>-<span class="number">8190</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Fresco, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.243</span> <span class="number">8161</span>-<span class="number">8161</span>/com.hanks.rxsearch I/RxThread: flatMap:Android-Picasso, run In :Thread[main,<span class="number">5</span>,main]</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.243</span> <span class="number">8161</span>-<span class="number">8161</span>/com.hanks.rxsearch I/RxThread: get result:Android, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.243</span> <span class="number">8161</span>-<span class="number">8161</span>/com.hanks.rxsearch I/RxThread: get result:Picasso, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.243</span> <span class="number">8161</span>-<span class="number">8161</span>/com.hanks.rxsearch I/RxThread: flatMap:Android-Glide, run In :Thread[main,<span class="number">5</span>,main]</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.243</span> <span class="number">8161</span>-<span class="number">8161</span>/com.hanks.rxsearch I/RxThread: get result:Android, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.243</span> <span class="number">8161</span>-<span class="number">8161</span>/com.hanks.rxsearch I/RxThread: get result:Glide, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.243</span> <span class="number">8161</span>-<span class="number">8161</span>/com.hanks.rxsearch I/RxThread: flatMap:Android-Fresco, run In :Thread[main,<span class="number">5</span>,main]</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.243</span> <span class="number">8161</span>-<span class="number">8161</span>/com.hanks.rxsearch I/RxThread: get result:Android, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.243</span> <span class="number">8161</span>-<span class="number">8161</span>/com.hanks.rxsearch I/RxThread: get result:Fresco, run In :main</span><br></pre></td></tr></table></figure>
<p>正确姿势:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Observable.just(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">  .subscribeOn(Schedulers.newThread())</span><br><span class="line">  .flatMap(<span class="comment">/** logic which doesn't touch ui **/</span>/)</span><br><span class="line">  .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">  .subscribe();</span><br></pre></td></tr></table></figure>
<p>第二段代码中 <code>flatMap</code> (或者其他逻辑处理)将运行在后台线程， 如果是在Android中，这样做不会阻塞UI，阻塞UI的话有可能导致ANR之类的异常。这跟 <code>AsyncTask</code>中的 <code>doInBackground()</code>类似，在 <code>doInBackground()</code>中做耗时操作</p>
<p><strong>实验:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread() &#123;</span><br><span class="line">       <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">           Observable.just(<span class="string">"Android-Picasso"</span>, <span class="string">"Android-Glide"</span>, <span class="string">"Android-Fresco"</span>).doOnNext(<span class="keyword">new</span> Action1&lt;String&gt;() &#123;</span><br><span class="line">               <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">                   Log.i(<span class="string">"RxThread"</span>, <span class="string">"doOnNext:"</span> + str + <span class="string">", run In :"</span> + Thread.currentThread()</span><br><span class="line">                           .getName());</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">           .subscribeOn(Schedulers.newThread())</span><br><span class="line">           .flatMap(<span class="keyword">new</span> Func1&lt;String, Observable&lt;String&gt;&gt;() &#123;</span><br><span class="line">               <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> Observable&lt;String&gt; <span class="title">call</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">                   Log.i(<span class="string">"RxThread"</span>, <span class="string">"flatMap:"</span> + str + <span class="string">", run In :"</span> + Thread.currentThread());</span><br><span class="line">                   <span class="keyword">return</span> Observable.from(str.split(<span class="string">"-"</span>) ); <span class="comment">// 返回平方</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">           .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">           .subscribe(<span class="keyword">new</span> Action1&lt;String&gt;() &#123;</span><br><span class="line">               <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">                   Log.i(<span class="string">"RxThread"</span>, <span class="string">"get result:"</span> + str + <span class="string">", run In :"</span> + Thread.currentThread()</span><br><span class="line">                           .getName());</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;.start();</span><br></pre></td></tr></table></figure>
<p><strong>输出结果:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.025</span> <span class="number">6812</span>-<span class="number">6839</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Picasso, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.025</span> <span class="number">6812</span>-<span class="number">6839</span>/com.hanks.rxsearch I/RxThread: flatMap:Android-Picasso, run In :Thread[RxNewThreadScheduler-<span class="number">1</span>,<span class="number">5</span>,main]</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.025</span> <span class="number">6812</span>-<span class="number">6839</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Glide, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.025</span> <span class="number">6812</span>-<span class="number">6839</span>/com.hanks.rxsearch I/RxThread: flatMap:Android-Glide, run In :Thread[RxNewThreadScheduler-<span class="number">1</span>,<span class="number">5</span>,main]</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.025</span> <span class="number">6812</span>-<span class="number">6839</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Fresco, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.025</span> <span class="number">6812</span>-<span class="number">6839</span>/com.hanks.rxsearch I/RxThread: flatMap:Android-Fresco, run In :Thread[RxNewThreadScheduler-<span class="number">1</span>,<span class="number">5</span>,main]</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.043</span> <span class="number">6812</span>-<span class="number">6812</span>/com.hanks.rxsearch I/RxThread: get result:Android, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.043</span> <span class="number">6812</span>-<span class="number">6812</span>/com.hanks.rxsearch I/RxThread: get result:Picasso, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.043</span> <span class="number">6812</span>-<span class="number">6812</span>/com.hanks.rxsearch I/RxThread: get result:Android, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.043</span> <span class="number">6812</span>-<span class="number">6812</span>/com.hanks.rxsearch I/RxThread: get result:Glide, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.043</span> <span class="number">6812</span>-<span class="number">6812</span>/com.hanks.rxsearch I/RxThread: get result:Android, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.043</span> <span class="number">6812</span>-<span class="number">6812</span>/com.hanks.rxsearch I/RxThread: get result:Fresco, run In :main</span><br></pre></td></tr></table></figure>
<h3 id="3-_最早的_-subscribeOn()_生效">3. 最早的 <code>.subscribeOn()</code> 生效</h3><p>看下面的代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Observable.just(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">  .subscribeOn(thread1)</span><br><span class="line">  .subscribeOn(thread2)</span><br><span class="line">  .subscribe();</span><br></pre></td></tr></table></figure>
<p><code>Observable</code> 的创建和  <code>.subscribeOn()</code> 的调用都将在 thread1 上面执行，所以没有必要多次调用 <code>.subscribeOn()</code>,因为只有第一次的是有用的。</p>
<p><strong>实验:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread() &#123;</span><br><span class="line">      <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">          Observable.just(<span class="string">"Android-Picasso"</span>, <span class="string">"Android-Glide"</span>, <span class="string">"Android-Fresco"</span>).doOnNext(<span class="keyword">new</span> Action1&lt;String&gt;() &#123;</span><br><span class="line">              <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">                  Log.i(<span class="string">"RxThread"</span>, <span class="string">"doOnNext:"</span> + str + <span class="string">", run In :"</span> + Thread.currentThread()</span><br><span class="line">                          .getName());</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">          .subscribeOn(Schedulers.newThread())</span><br><span class="line">          .subscribeOn(Schedulers.io())</span><br><span class="line">          .subscribeOn(Schedulers.computation())</span><br><span class="line">          .subscribe(<span class="keyword">new</span> Action1&lt;String&gt;() &#123;</span><br><span class="line">              <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">                  Log.i(<span class="string">"RxThread"</span>, <span class="string">"get result:"</span> + str + <span class="string">", run In :"</span> + Thread.currentThread()</span><br><span class="line">                          .getName());</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;.start();</span><br></pre></td></tr></table></figure>
<p><strong>输出结果</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">51</span>:<span class="number">17.581</span> <span class="number">15622</span>-<span class="number">15652</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Picasso, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">51</span>:<span class="number">17.581</span> <span class="number">15622</span>-<span class="number">15652</span>/com.hanks.rxsearch I/RxThread: get result:Android-Picasso, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">51</span>:<span class="number">17.581</span> <span class="number">15622</span>-<span class="number">15652</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Glide, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">51</span>:<span class="number">17.581</span> <span class="number">15622</span>-<span class="number">15652</span>/com.hanks.rxsearch I/RxThread: get result:Android-Glide, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">51</span>:<span class="number">17.581</span> <span class="number">15622</span>-<span class="number">15652</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Fresco, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">51</span>:<span class="number">17.581</span> <span class="number">15622</span>-<span class="number">15652</span>/com.hanks.rxsearch I/RxThread: get result:Android-Fresco, run In :RxNewThreadScheduler-<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p><strong>实验</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread() &#123;</span><br><span class="line">       <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">           Observable.just(<span class="string">"Android-Picasso"</span>, <span class="string">"Android-Glide"</span>, <span class="string">"Android-Fresco"</span>).doOnNext(<span class="keyword">new</span> Action1&lt;String&gt;() &#123;</span><br><span class="line">               <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">                   Log.i(<span class="string">"RxThread"</span>, <span class="string">"doOnNext:"</span> + str + <span class="string">", run In :"</span> + Thread.currentThread()</span><br><span class="line">                           .getName());</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">           .subscribeOn(Schedulers.io())</span><br><span class="line">           .subscribeOn(Schedulers.newThread())</span><br><span class="line">           .subscribeOn(Schedulers.computation())</span><br><span class="line">           .subscribe(<span class="keyword">new</span> Action1&lt;String&gt;() &#123;</span><br><span class="line">               <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">                   Log.i(<span class="string">"RxThread"</span>, <span class="string">"get result:"</span> + str + <span class="string">", run In :"</span> + Thread.currentThread()</span><br><span class="line">                           .getName());</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;.start();</span><br></pre></td></tr></table></figure>
<p><strong>输出结果</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">52</span>:<span class="number">13.378</span> <span class="number">16424</span>-<span class="number">16454</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Picasso, run In :RxCachedThreadScheduler-<span class="number">2</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">52</span>:<span class="number">13.379</span> <span class="number">16424</span>-<span class="number">16454</span>/com.hanks.rxsearch I/RxThread: get result:Android-Picasso, run In :RxCachedThreadScheduler-<span class="number">2</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">52</span>:<span class="number">13.379</span> <span class="number">16424</span>-<span class="number">16454</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Glide, run In :RxCachedThreadScheduler-<span class="number">2</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">52</span>:<span class="number">13.379</span> <span class="number">16424</span>-<span class="number">16454</span>/com.hanks.rxsearch I/RxThread: get result:Android-Glide, run In :RxCachedThreadScheduler-<span class="number">2</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">52</span>:<span class="number">13.379</span> <span class="number">16424</span>-<span class="number">16454</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Fresco, run In :RxCachedThreadScheduler-<span class="number">2</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">52</span>:<span class="number">13.379</span> <span class="number">16424</span>-<span class="number">16454</span>/com.hanks.rxsearch I/RxThread: get result:Android-Fresco, run In :RxCachedThreadScheduler-<span class="number">2</span></span><br></pre></td></tr></table></figure></p>
<p><code>Android</code> <code>Rxjava</code> <code>Rxandroid</code></p>
<blockquote>
<p><strong>文章出处</strong> (<a href="http://hanks.xyz">http://hanks.xyz</a>)</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>初学者在使用<code>RxJava</code>的过程中，经常搞不清Observable的事件序列和每次操作应该怎样切换线程，切换哪个线程<br>首先需要搞懂在<code>RxJava</code> 中<code>.subscribeOn()</code> 和  <code>observeOn()</code> 之间的区别：</p>
<ul>
<li><code>.subscribeOn()</code> 用来指定<code>Observable</code>应该操作的调度器(<code>Scheduler</code>)</li>
<li><code>.observeOn()</code> 指定 <code>Observable</code>在一个指定的调度器(<code>Scheduler</code>)上给观察者发送通知</li>
<li>默认情况下， 事件序列操作的线程与调用<code>.subscribe()</code>的线程一致</li>
</ul>
<p>没理解？<br>]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
      <category term="Rxandroid" scheme="http://hanks.xyz/tags/Rxandroid/"/>
    
      <category term="Rxjava" scheme="http://hanks.xyz/tags/Rxjava/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[OS X中Java环境变量配置]]></title>
    <link href="http://hanks.xyz/2015/12/04/mac_java_enviroment/"/>
    <id>http://hanks.xyz/2015/12/04/mac_java_enviroment/</id>
    <published>2015-12-04T15:50:26.000Z</published>
    <updated>2015-12-04T16:10:58.548Z</updated>
    <content type="html"><![CDATA[<p>类似Linux下Java环境的配置,流程就是 <code>下载</code> -&gt; <code>解压</code> -&gt; <code>配置环境变量文件</code></p>
<h3 id="下载_jdk">下载 jdk</h3><p>到oracle官网下最新 jdk <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="external">下载链接</a>,  注意下载的是jdk(Java Development Kit ),不是jre(Java Runtime Environment)</p>
<h3 id="配置Java环境变量">配置Java环境变量</h3><p>安装过jdk之后, 查看jdk的安装路径, 一般在 <code>/Library/Java/JavaVirtualMachines</code>目录下面<br>然后编辑环境变量, 打开文件 <code>/etc/profile</code></p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="keyword">vim</span> /etc/<span class="keyword">profile</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>在底部添加下面的环境变量, windows上面是图形化的编辑, linux 和 mac 下都是 添加到 <code>/etc/profile</code>文件中</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=<span class="string">"/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home/"</span></span><br><span class="line">CLASS_PATH=<span class="string">"<span class="variable">$JAVA_HOME</span>/lib"</span></span><br><span class="line">PATH=<span class="string">".;<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin"</span></span><br></pre></td></tr></table></figure>
<h3 id="验证配置">验证配置</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -<span class="property">version</span></span><br></pre></td></tr></table></figure>
<p>看到版本信息则为配置成功.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>类似Linux下Java环境的配置,流程就是 <code>下载</code> -&gt; <code>解压</code> -&gt; <code>配置环境变量文件</code></p>
<h3 id="下载_jdk">下载 jdk</h3><p>到oracle官网下最新 jdk <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">下载链接</a>,  注意下载的是jdk(Java Development Kit ),不是jre(Java Runtime Environment)</p>
<h3 id="配置Java环境变量">配置Java环境变量</h3><p>安装过jdk之后, 查看jdk的安装路径, 一般在 <code>/Library/Java/JavaVirtualMachines</code>目录下面<br>然后编辑环境变量, 打开文件 <code>/etc/profile</code></p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="keyword">vim</span> /etc/<span class="keyword">profile</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="Java" scheme="http://hanks.xyz/tags/Java/"/>
    
      <category term="OS X" scheme="http://hanks.xyz/tags/OS-X/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ubuntu 安装 OS X 10.11  虚拟机]]></title>
    <link href="http://hanks.xyz/2015/12/02/mac-os-in-Ubuntu/"/>
    <id>http://hanks.xyz/2015/12/02/mac-os-in-Ubuntu/</id>
    <published>2015-12-02T15:50:26.000Z</published>
    <updated>2015-12-03T03:11:09.312Z</updated>
    <content type="html"><![CDATA[<p>看到<a href="http://bbs.feng.com/read-htm-tid-9908410.html" target="_blank" rel="external">论坛</a>里有人在windows平台上面利用 <code>VirtualBox</code> 成功安装了 <code>OS X 10.11</code>,(我的是Ubuntu 14.04)于是尝试一下虚拟机装mac,既然 <code>VirtualBox</code> 有linux版, 于是尝试在Ubuntu下装mac os虚拟机.<br><a id="more"></a></p>
<h3 id="下载_VirtualBox">下载 <code>VirtualBox</code></h3><p>到 <a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="external">VirtualBox 官网</a>下载, 我已经安装过了,版本是 5.0.8, 最新的 5.0.10</p>
<h3 id="下载_mac_os_虚拟机文件">下载 mac os 虚拟机文件</h3><p>到这个论坛里下载安装好的<a href="http://bbs.feng.com/read-htm-tid-9908410.html" target="_blank" rel="external">OS X 10.11 El Capitan GM by TechReviews.vmdk</a></p>
<h3 id="添加虚拟机">添加虚拟机</h3><p> 打开 <code>VirtualBox</code>, 新建mac os 虚拟机, <strong>需要记住自己填写的名字</strong>,下面需要用命令更改配置<br>我分配了8G内存, 虚拟硬盘使用刚才下载的<br> <img src="https://dn-coding-net-production-pp.qbox.me/44703706-0ca7-4163-89ff-968e8962c57f.png" alt="图片"><br>注意设置<code>启动顺序</code>,和<code>芯片组</code><br> <img src="https://dn-coding-net-production-pp.qbox.me/1f97a9c1-09b0-428a-aac9-60a098b78d6c.png" alt="图片"><br>设置<code>显存</code>为128MB<br> <img src="https://dn-coding-net-production-pp.qbox.me/2adabc19-197d-46b4-a960-0203a6c7fd52.png" alt="图片"></p>
<h3 id="更改配置">更改配置</h3><p>输入以下命令,注意使用的 <code>VboxManage</code> 命令</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage modifyvm <span class="string">"OSXElCapitan"</span>  --cpuidset <span class="number">00000001</span> <span class="number">000306</span>a9 <span class="number">04100800</span> <span class="number">7f</span>bae3ff bfebfbff</span><br><span class="line">VBoxManage setextradata <span class="string">"OSXElCapitan"</span>  <span class="string">"VBoxInternal/Devices/efi/0/Config/DmiSystemProduct"</span> <span class="string">"MacBookPro11,3"</span></span><br><span class="line">VBoxManage setextradata <span class="string">"OSXElCapitan"</span>  <span class="string">"VBoxInternal/Devices/efi/0/Config/DmiSystemVersion"</span> <span class="string">"1.0"</span></span><br><span class="line">VBoxManage setextradata <span class="string">"OSXElCapitan"</span>  <span class="string">"VBoxInternal/Devices/efi/0/Config/DmiBoardProduct"</span> <span class="string">"Iloveapple"</span></span><br><span class="line">VBoxManage setextradata <span class="string">"OSXElCapitan"</span>  <span class="string">"VBoxInternal/Devices/smc/0/Config/DeviceKey"</span> <span class="string">"ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc"</span></span><br><span class="line">VBoxManage setextradata <span class="string">"OSXElCapitan"</span>  <span class="string">"VBoxInternal/Devices/smc/0/Config/GetKeyFromRealSMC"</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>如需要更改 虚拟机分辨率 1440×900 输入命令如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage setextradata <span class="string">"OSXElCapitan"</span> <span class="string">"VBoxInternal2/EfiGopMode"</span> <span class="number">4</span></span><br></pre></td></tr></table></figure></p>
<p>其中数字表示如下, 虚拟机默认分辨率值是 2 – 1024×768</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> – <span class="number">640</span>×<span class="number">480</span></span><br><span class="line"><span class="number">1</span> – <span class="number">800</span>×<span class="number">600</span></span><br><span class="line"><span class="number">2</span> – <span class="number">1024</span>×<span class="number">768</span></span><br><span class="line"><span class="number">3</span> – <span class="number">1280</span>×<span class="number">1024</span></span><br><span class="line"><span class="number">4</span> – <span class="number">1440</span>×<span class="number">900</span></span><br></pre></td></tr></table></figure>
<h3 id="启动虚拟机">启动虚拟机</h3><ol>
<li>关闭 VirtualBOX</li>
<li>重新正常启动 VirtualBOX, 及启动 OSXYosemite 虚拟机文件</li>
<li>进行一些系统设置</li>
</ol>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/2ba64c95-f5f1-4e66-b878-5bdc6d873c6e.png" alt="图片"></p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/9d66a4d0-b141-4920-bde4-2a89d0afcc15.png" alt="图片"></p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/255e709e-3416-4e89-80a8-30c10768332b.png" alt="图片"></p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/ba9d827a-41dd-4f8c-8ae9-1467907024e4.png" alt="图片"></p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/a256c81f-0820-4b8d-bd0a-e55eca3b4d05.png" alt="图片"></p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/f3c72d29-4966-46b4-99cc-faad0d7af4f3.png" alt="图片"></p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/9cf7a273-c89d-4715-b0c4-62e76a228faa.png" alt="图片"></p>
<h3 id="安装_xcode_7">安装 xcode 7</h3><p>下载xcode</p>
<hr>
<p>参考链接:<br><br><a href="http://bbs.feng.com/read-htm-tid-9908410.html" target="_blank" rel="external">http://bbs.feng.com/read-htm-tid-9908410.html</a><br><br><a href="http://bbs.feng.com/read-htm-tid-8474315.html" target="_blank" rel="external">http://bbs.feng.com/read-htm-tid-8474315.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>看到<a href="http://bbs.feng.com/read-htm-tid-9908410.html">论坛</a>里有人在windows平台上面利用 <code>VirtualBox</code> 成功安装了 <code>OS X 10.11</code>,(我的是Ubuntu 14.04)于是尝试一下虚拟机装mac,既然 <code>VirtualBox</code> 有linux版, 于是尝试在Ubuntu下装mac os虚拟机.<br>]]>
    
    </summary>
    
      <category term="Ubuntu" scheme="http://hanks.xyz/tags/Ubuntu/"/>
    
      <category term="mac os" scheme="http://hanks.xyz/tags/mac-os/"/>
    
      <category term="virtualBox" scheme="http://hanks.xyz/tags/virtualBox/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ReactiveX]]></title>
    <link href="http://hanks.xyz/2015/12/01/ReactiveX/"/>
    <id>http://hanks.xyz/2015/12/01/ReactiveX/</id>
    <published>2015-12-01T14:28:34.000Z</published>
    <updated>2015-12-08T14:09:30.189Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>An API for asynchronous programming with observable streams</p>
</blockquote>
<p><img src="http://file.bmob.cn/M02/CD/5C/oYYBAFZehqmAAvzxAAEPNTqMZeU527.gif" alt=""><br><a id="more"></a></p>
<p>理解这个图上面各个部分,简直生动形象的不能再生动了,以后这个图经常看到<br><img src="https://mcxiaoke.gitbooks.io/rxdocs/content/images/legend.png" alt="介绍"></p>
<h1 id="ReactiveX">ReactiveX</h1><p><a href="http://reactivex.io/intro.html" target="_blank" rel="external">官网</a></p>
<h2 id="Rx介绍">Rx介绍</h2><h3 id="ReactiveX的历史">ReactiveX的历史</h3><p>ReactiveX是Reactive Extensions的缩写，一般简写为Rx，最初是LINQ的一个扩展，由微软的架构师Erik Meijer领导的团队开发，在2012年11月开源，Rx是一个编程模型，目标是提供一致的编程接口，帮助开发者更方便的处理异步数据流，Rx库支持.NET、JavaScript和C++，Rx近几年越来越流行了，现在已经支持几乎全部的流行编程语言了，Rx的大部分语言库由ReactiveX这个组织负责维护，比较流行的有RxJava/RxJS/Rx.NET，社区网站是 <a href="http://reactivex.io/。" target="_blank" rel="external">http://reactivex.io/。</a></p>
<h3 id="什么是ReactiveX">什么是ReactiveX</h3><p>微软给的定义是，Rx是一个函数库，让开发者可以利用可观察序列和LINQ风格查询操作符来编写异步和基于事件的程序，使用Rx，开发者可以用Observables表示异步数据流，用LINQ操作符查询异步数据流， 用Schedulers参数化异步数据流的并发处理，Rx可以这样定义：Rx = Observables + LINQ + Schedulers。<br>ReactiveX.io给的定义是，Rx是一个使用可观察数据流进行异步编程的编程接口，ReactiveX结合了观察者模式、迭代器模式和函数式编程的精华。</p>
<h3 id="ReactiveX的应用">ReactiveX的应用</h3><p>很多公司都在使用ReactiveX，例如Microsoft、Netflix、Github、Trello、SoundCloud。</p>
<h3 id="ReactiveX宣言">ReactiveX宣言</h3><p>ReactiveX不仅仅是一个编程接口，它是一种编程思想的突破，它影响了许多其它的程序库和框架以及编程语言。</p>
<h2 id="Rx模式">Rx模式</h2><h3 id="使用观察者模式">使用观察者模式</h3><p>创建：Rx可以方便的创建事件流和数据流<br>组合：Rx使用查询式的操作符组合和变换数据流<br>监听：Rx可以订阅任何可观察的数据流并执行操作</p>
<h3 id="简化代码">简化代码</h3><p>函数式风格：对可观察数据流使用无副作用的输入输出函数，避免了程序里错综复杂的状态 简化代码：Rx的操作符通通常可以将复杂的难题简化为很少的几行代码<br>异步错误处理：传统的try/catch没办法处理异步计算，Rx提供了合适的错误处理机制<br>轻松使用并发：Rx的Observables和Schedulers让开发者可以摆脱底层的线程同步和各种并发问题</p>
<h3 id="使用Observable的优势">使用Observable的优势</h3><p>Rx扩展了观察者模式用于支持数据和事件序列，添加了一些操作符，它让你可以声明式的组合这些序列，而无需关注底层的实现：如线程、同步、线程安全、并发数据结构和非阻塞IO。<br>Observable通过使用最佳的方式访问异步数据序列填补了这个间隙</p>
<table>
<thead>
<tr>
<th style="text-align:left"></th>
<th style="text-align:left">单个数据</th>
<th style="text-align:left">多个数据</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">同步</td>
<td style="text-align:left">T getData()</td>
<td style="text-align:left">Iterable<t> getData()</t></td>
</tr>
<tr>
<td style="text-align:left">异步</td>
<td style="text-align:left">Future<t> getData()</t></td>
<td style="text-align:left">Observable<t> getData()</t></td>
</tr>
</tbody>
</table>
<p>Rx的Observable模型让你可以像使用集合数据一样操作异步事件流，对异步事件流使用各种简单、可组合的操作。</p>
<h3 id="Observable可组合">Observable可组合</h3><p>对于单层的异步操作来说，Java中Future对象的处理方式是非常简单有效的，但是一旦涉及到嵌套，它们就开始变得异常繁琐和复杂。使用Future很难很好的组合带条件的异步执行流程（考虑到运行时各种潜在的问题，甚至可以说是不可能的），当然，要想实现还是可以做到的，但是非常困难，或许你可以用Future.get()，但这样做，异步执行的优势就完全没有了。从另一方面说，Rx的Observable一开始就是为组合异步数据流准备的。</p>
<h3 id="Observable更灵活">Observable更灵活</h3><p>Rx的Observable不仅支持处理单独的标量值（就像Future可以做的），也支持数据序列，甚至是无穷的数据流。Observable是一个抽象概念，适用于任何场景。Observable拥有它的近亲Iterable的全部优雅与灵活。</p>
<table>
<thead>
<tr>
<th style="text-align:left">Observable是异步的双向push，Iterable是同步的单向pull，对比：</th>
<th style="text-align:left"></th>
<th style="text-align:left"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">事件</td>
<td style="text-align:left">Iterable(pull)</td>
<td style="text-align:left">Observable(push)</td>
</tr>
<tr>
<td style="text-align:left">获取数据</td>
<td style="text-align:left">T next()</td>
<td style="text-align:left">onNext(T)</td>
</tr>
<tr>
<td style="text-align:left">异常处理</td>
<td style="text-align:left">throws Exception</td>
<td style="text-align:left">onError(Exception)</td>
</tr>
<tr>
<td style="text-align:left">任务完成</td>
<td style="text-align:left">!hasNext()</td>
<td style="text-align:left">onCompleted()</td>
</tr>
</tbody>
</table>
<h3 id="Observable无偏见">Observable无偏见</h3><p>Rx对于对于并发性或异步性没有任何特殊的偏好，Observable可以用任何方式实现，线程池、事件循环、非阻塞IO、Actor模式，任何满足你的需求的，你擅长或偏好的方式都可以。无论你选择怎样实现它，无论底层实现是阻塞的还是非阻塞的，客户端代码将所有与Observable的交互都当做是异步的。</p>
<h4 id="Observable是如何实现的？">Observable是如何实现的？</h4><p>public Observable<data> getData();<br>它能与调用者在同一线程同步执行吗？<br>它能异步地在单独的线程执行吗？<br>它会将工作分发到多个线程，返回数据的顺序是任意的吗？<br>它使用Actor模式而不是线程池吗？<br>它使用NIO和事件循环执行异步网络访问吗？<br>它使用事件循环将工作线程从回调线程分离出来吗？<br>从Observer的视角看，这些都无所谓，重要的是：使用Rx，你可以改变你的观念，你可以在完全不影响Observable程序库使用者的情况下，彻底的改变Observable的底层实现。</data></p>
<h3 id="使用回调存在很多问题">使用回调存在很多问题</h3><p>回调在不阻塞任何事情的情况下，解决了Future.get()过早阻塞的问题。由于响应结果一旦就绪Callback就会被调用，它们天生就是高效率的。不过，就像使用Future一样，对于单层的异步执行来说，回调很容易使用，对于嵌套的异步组合，它们显得非常笨拙。</p>
<h3 id="Rx是一个多语言的实现">Rx是一个多语言的实现</h3><p>Rx在大量的编程语言中都有实现，并尊重实现语言的风格，而且更多的实现正在飞速增加。<br>响应式编程</p>
<p>Rx提供了一系列的操作符，你可以使用它们来过滤(filter)、选择(select)、变换(transform)、结合(combine)和组合(compose)多个Observable，这些操作符让执行和复合变得非常高效。<br>你可以把Observable当做Iterable的推送方式的等价物，使用Iterable，消费者从生产者那拉取数据，线程阻塞直至数据准备好。使用Observable，在数据准备好时，生产者将数据推送给消费者。数据可以同步或异步的到达，这种方式更灵活。<br>下面的例子展示了相似的高阶函数在Iterable和Observable上的应用</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Iterable</span></span><br><span class="line">getDataFromLocalMemory()</span><br><span class="line">  .skip(<span class="number">10</span>)</span><br><span class="line">  .take(<span class="number">5</span>)</span><br><span class="line">  .map(&#123; s -&gt; <span class="keyword">return</span> s + <span class="string">" transformed"</span> &#125;)</span><br><span class="line">  .forEach(&#123; println <span class="string">"next =&gt; "</span> + it &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Observable</span></span><br><span class="line">getDataFromNetwork()</span><br><span class="line">  .skip(<span class="number">10</span>)</span><br><span class="line">  .take(<span class="number">5</span>)</span><br><span class="line">  .map(&#123; s -&gt; <span class="keyword">return</span> s + <span class="string">" transformed"</span> &#125;)</span><br><span class="line">  .subscribe(&#123; println <span class="string">"onNext =&gt; "</span> + it &#125;)</span><br></pre></td></tr></table></figure>
<p>Observable类型给GOF的观察者模式添加了两种缺少的语义，这样就和Iterable类型中可用的操作一致了：<br>生产者可以发信号给消费者，通知它没有更多数据可用了（对于Iterable，一个for循环正常完成表示没有数据了；对于Observable，就是调用观察者的onCompleted方法）<br>生产者可以发信号给消费者，通知它遇到了一个错误（对于Iterable，迭代过程中发生错误会抛出异常；对于Observable，就是调用观察者(Observer)的onError方法）<br>有了这两种功能，Rx就能使Observable与Iterable保持一致了，唯一的不同是数据流的方向。任何对Iterable的操作，你都可以对Observable使用。<br>名词定义</p>
<h2 id="这里给出一些名词的翻译">这里给出一些名词的翻译</h2><p>Reactive 直译为反应性的，有活性的，根据上下文一般翻译为反应式、响应式<br>Iterable 可迭代对象，支持以迭代器的形式遍历，许多语言中都存在这个概念<br>Observable 可观察对象，在Rx中定义为更强大的Iterable，在观察者模式中是被观察的对象，一旦数据产生或发生变化，会通过某种方式通知观察者或订阅者<br>Observer 观察者对象，监听Observable发射的数据并做出响应，Subscriber是它的一个特殊实现 emit 直译为发射，发布，发出，含义是Observable在数据产生或变化时发送通知给Observer，调用Observer对应的方法，文章里一律译为发射 items 直译为项目，条目，在Rx里是指Observable发射的数据项，文章里一律译为数据，数据项</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>An API for asynchronous programming with observable streams</p>
</blockquote>
<p><img src="http://file.bmob.cn/M02/CD/5C/oYYBAFZehqmAAvzxAAEPNTqMZeU527.gif" alt=""><br>]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
      <category term="Rx" scheme="http://hanks.xyz/tags/Rx/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用RxJava 提升用户体验]]></title>
    <link href="http://hanks.xyz/2015/11/29/rx_ux/"/>
    <id>http://hanks.xyz/2015/11/29/rx_ux/</id>
    <published>2015-11-29T14:28:34.000Z</published>
    <updated>2015-12-06T15:43:13.858Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>原文链接：<a href="https://medium.com/@diolor/improving-ux-with-rxjava-4440a13b157f#.qdhu122d1" target="_blank" rel="external">https://medium.com/@diolor/improving-ux-with-rxjava-4440a13b157f#.qdhu122d1</a><br><br>翻译： <a href="https://github.com/hanks-zyh" target="_blank" rel="external">hanks</a></p>
</blockquote>
<p>“网络永连接，服务器不出错，培根没肥肉”</p>
<p><img src="http://file.bmob.cn/M02/C6/EF/oYYBAFZbFyCADEAkAAV75iu06QU497.gif" alt="Search list animation by Daley P Maasz from Dribbble."></p>
<a id="more"></a>
<p>友好的用户体验通常是用户很爽，但开发者很痛苦。 当用户点击一个按钮后，因为后端没有及时响应而卡住界面，这回让用户很失望。<br>现在让我们创建一个更好的搜索功能（当用户在EditText输入文字时进行搜索）：</p>
<ul>
<li>尽可能少的网络请求</li>
<li>尽可能少的错误信息<br>Rx 的逻辑会十分简单并且针对小的细节</li>
</ul>
<p>让我们从基本的逻辑开始:<br>让用户输入文字时执行网络请求，当结果返回时进行显示</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">RxTextView</span><span class="class">.textChanges</span>(<span class="tag">searchEditText</span>)</span><br><span class="line">     <span class="class">.flatMap</span>(<span class="tag">Api</span><span class="pseudo">::searchItems)</span></span><br><span class="line">     <span class="class">.subscribe</span>(<span class="tag">this</span><span class="pseudo">::updateList</span>, <span class="tag">t-</span>&gt;<span class="tag">showError</span>());</span><br></pre></td></tr></table></figure>
<h2 id="1-_减少网络请求">1. 减少网络请求</h2><p><strong>有两个问题</strong>：</p>
<ol>
<li>输入的文字每变化一个就执行请求（很垃圾），例如： 用户很快的输入 “a”（搜索”a“），然后”b”（搜索“ab”），然后“c”（搜索”abc”），然后又删除”c”（搜索“ab”）， 输入“e”（搜索”abe”）。这个过程执行了5次请求。</li>
<li>假如网络情况很差， 多个线程同时进行， 这时候就可能发生错误：如当用户输入“a”，然后”ab”，但是搜索“ab”的结果先返回了，之后返回了搜索“a的结果”，这时候输入框的文字是”ab”，但结果却是搜索“a”的</li>
</ol>
<p><strong>解决方案</strong>：</p>
<ol>
<li>增加 throttling （节流）行为<br><code>debounce()</code> 的作用正是如此， 时间为 100-150ms 为佳，如果服务器返回需要300ms，那么你可以在 500ms时更新UI界面</li>
</ol>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">RxTextView</span><span class="class">.textChanges</span>(<span class="tag">searchEditText</span>)</span><br><span class="line">     <span class="class">.debounce</span>(150, <span class="tag">MILLISECONDS</span>)</span><br><span class="line">     <span class="class">.flatMap</span>(<span class="tag">Api</span><span class="pseudo">::searchItems)</span></span><br><span class="line">     <span class="class">.subscribe</span>(<span class="tag">this</span><span class="pseudo">::updateList</span>, <span class="tag">t-</span>&gt;<span class="tag">showError</span>());</span><br></pre></td></tr></table></figure>
<ol>
<li>取消之前的请求:<br>使用 <code>switchMap</code>来替代  <code>flatMap</code>， <code>switchMap</code>停止之前发出的请求， 假如在150ms的时候搜索”ab“，在300ms的时候搜索了”abcd“，但是搜索”ab”的请求需要花费超过150ms，那么搜索“abcd”的请求开始的时候将会取消上一个请求，用户只会获取到最后的一次搜索的结果。</li>
</ol>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">RxTextView</span><span class="class">.textChanges</span>(<span class="tag">searchEditText</span>)</span><br><span class="line">     <span class="class">.debounce</span>(150, <span class="tag">MILLISECONDS</span>)</span><br><span class="line">     <span class="class">.switchMap</span>(<span class="tag">Api</span><span class="pseudo">::searchItems)</span></span><br><span class="line">     <span class="class">.subscribe</span>(<span class="tag">this</span><span class="pseudo">::updateList</span>, <span class="tag">t-</span>&gt;<span class="tag">showError</span>());</span><br></pre></td></tr></table></figure>
<h2 id="2-_没有错误提示/没有网络错误提示">2. 没有错误提示/没有网络错误提示</h2><p>如果网络请求失败，将不再观测文本的变化，（因为调用了OnError，整个事件流中断），这可以通过添加错误捕获函数轻松搞定</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">RxTextView</span><span class="class">.textChanges</span>(<span class="tag">searchEditText</span>)</span><br><span class="line">     <span class="class">.debounce</span>(150, <span class="tag">MILLISECONDS</span>)</span><br><span class="line">     <span class="class">.switchMap</span>(<span class="tag">Api</span><span class="pseudo">::searchItems)</span></span><br><span class="line">     <span class="class">.onErrorResumeNext</span>(<span class="tag">t-</span>&gt; <span class="tag">empty</span>())</span><br><span class="line">     <span class="class">.subscribe</span>(<span class="tag">this</span><span class="pseudo">::updateList)</span>;</span><br></pre></td></tr></table></figure>
<p>但是不要这样做， 我们需要更好的处理方案。假如   <code>searchItems()</code> api因为网络连接而返回失败的呢？ 或者是因为偶然的连接失败呢？<br>我们需要 <strong>重试机制</strong> :</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">RxTextView</span><span class="class">.textChanges</span>(<span class="tag">searchEditText</span>)</span><br><span class="line">     <span class="class">.debounce</span>(150, <span class="tag">MILLISECONDS</span>)</span><br><span class="line">     <span class="class">.switchMap</span>(<span class="tag">Api</span><span class="pseudo">::searchItems)</span></span><br><span class="line">     <span class="class">.retryWhen</span>(<span class="tag">new</span> <span class="tag">RetryWithConnectivity</span>())</span><br><span class="line">     <span class="class">.subscribe</span>(<span class="tag">this</span><span class="pseudo">::updateList</span>, <span class="tag">t-</span>&gt;<span class="tag">showError</span>());</span><br></pre></td></tr></table></figure>
<p>如何进一步提升呢？ 通过增加超时时间。 因为我们的 设计师 Lenzing 说 ”即使1s对用户来说也很漫长”，于是我们有做了下面的事情：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">RxTextView.textChanges(searchEditText)</span><br><span class="line">     .debounce(<span class="number">150</span>, MILLISECONDS)</span><br><span class="line">     .switchMap(Api::searchItems)</span><br><span class="line">     .retryWhen(<span class="keyword">new</span> RetryWithConnectivityIncremental(context, <span class="number">5</span>, <span class="number">15</span>, SECONDS))</span><br><span class="line">     .subscribe(<span class="keyword">this</span>::updateList, t-&gt;showErrorToUser());</span><br></pre></td></tr></table></figure>
<p>对比 <code>RetryWithConnectivityIncremental</code>  和 <code>RetryWithConnectivity</code> ， <code>RetryWithConnectivityIncremental</code> 更智能，它首先设置了 5 秒的超时时间， 如果这个时候连接失败，如果用户再次重试的话，超时时间会被设置的更长（如上面的15 秒）。</p>
<p>现在，使用RxJava 提示了用户体验， 请求防抖动， 取消上次请求获取最新的结果， 智能的网络超时重试。这些可能用户不会注意到，但是这是一个好的设计 ;)</p>
<p>标签： <strong>Android Rxjava UX</strong></p>
<p>完整代码：</p>
<figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Bind</span>(R.id.et_keyword) EditText et_keyword;</span><br><span class="line">    <span class="annotation">@Bind</span>(R.id.tv_result)  TextView tv_result;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span> protected <span class="keyword">void</span> onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ButterKnife.bind(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        RestAdapter retrofit = <span class="keyword">new</span> RestAdapter.Builder().setEndpoint(<span class="string">"https://suggest.taobao.com"</span>)</span><br><span class="line">                .setLogLevel(RestAdapter.LogLevel.FULL)</span><br><span class="line">                .setConverter(<span class="keyword">new</span> GsonConverter(<span class="keyword">new</span> Gson()))</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> SearchService service = retrofit.create(SearchService.<span class="keyword">class</span>);</span><br><span class="line"></span><br><span class="line">        RxTextView.textChanges(et_keyword)</span><br><span class="line">                <span class="comment">// 上面的对 tv_result 的操作需要在主线程</span></span><br><span class="line">                .subscribeOn(AndroidSchedulers.mainThread())</span><br><span class="line">                .debounce(<span class="number">600</span>, TimeUnit.MILLISECONDS, AndroidSchedulers.mainThread())</span><br><span class="line">                .filter(<span class="keyword">new</span> Func1&lt;CharSequence, Boolean&gt;() &#123;</span><br><span class="line">                    <span class="annotation">@Override</span> public Boolean call(CharSequence charSequence) &#123;</span><br><span class="line">                        <span class="comment">// 清空搜索出来的结构</span></span><br><span class="line">                        tv_result.setText(<span class="string">""</span>);</span><br><span class="line">                        <span class="comment">//当 EditText 中文字大于0的时候</span></span><br><span class="line">                        <span class="keyword">return</span> charSequence.length() &gt; <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .switchMap(<span class="keyword">new</span> Func1&lt;CharSequence, Observable&lt;Data&gt;&gt;() &#123;</span><br><span class="line">                    <span class="annotation">@Override</span> public Observable&lt;Data&gt; call(CharSequence charSequence) &#123;</span><br><span class="line">                        <span class="comment">// 搜索</span></span><br><span class="line">                        <span class="keyword">return</span> service.searchProdcut(<span class="string">"utf-8"</span>, charSequence.toString());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line"><span class="comment">//                .retryWhen(new RetryWithConnectivityIncremental(MainActivity.this, 5, 15, TimeUnit.MILLISECONDS))</span></span><br><span class="line">                <span class="comment">// 网络操作在io线程</span></span><br><span class="line">                .subscribeOn(Schedulers.io())</span><br><span class="line">                <span class="comment">//将 data 转换成 ArrayList&lt;ArrayList&lt;String&gt;&gt;</span></span><br><span class="line">                .map(<span class="keyword">new</span> Func1&lt;Data, ArrayList&lt;ArrayList&lt;<span class="built_in">String</span>&gt;&gt;&gt;() &#123;</span><br><span class="line">                    <span class="annotation">@Override</span> public ArrayList&lt;ArrayList&lt;<span class="built_in">String</span>&gt;&gt; call(Data data) &#123;</span><br><span class="line">                        <span class="keyword">return</span> data.result;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="comment">// 将 ArrayList&lt;ArrayList&lt;String&gt;&gt; 中每一项提取出来 ArrayList&lt;String&gt;</span></span><br><span class="line">                .flatMap(<span class="keyword">new</span> Func1&lt;ArrayList&lt;ArrayList&lt;<span class="built_in">String</span>&gt;&gt;, Observable&lt;ArrayList&lt;<span class="built_in">String</span>&gt;&gt;&gt;() &#123;</span><br><span class="line">                    <span class="annotation">@Override</span> public Observable&lt;ArrayList&lt;<span class="built_in">String</span>&gt;&gt; call(ArrayList&lt;ArrayList&lt;<span class="built_in">String</span>&gt;&gt; arrayLists) &#123;</span><br><span class="line">                        <span class="keyword">return</span> Observable.from(arrayLists);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .filter(<span class="keyword">new</span> Func1&lt;ArrayList&lt;<span class="built_in">String</span>&gt;, Boolean&gt;() &#123;</span><br><span class="line">                    <span class="annotation">@Override</span> public Boolean call(ArrayList&lt;<span class="built_in">String</span>&gt; strings) &#123;</span><br><span class="line">                        <span class="keyword">return</span> strings.size() &gt;= <span class="number">2</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .map(<span class="keyword">new</span> Func1&lt;ArrayList&lt;<span class="built_in">String</span>&gt;, <span class="built_in">String</span>&gt;() &#123;</span><br><span class="line">                    <span class="annotation">@Override</span> public <span class="built_in">String</span> call(ArrayList&lt;<span class="built_in">String</span>&gt; strings) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">"[商品名称:"</span> + strings.<span class="literal">get</span>(<span class="number">0</span>) + <span class="string">", ID:"</span> + strings.<span class="literal">get</span>(<span class="number">1</span>) + <span class="string">"]\n"</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="comment">// 发生错误后不要调用 onError，而是转到 onErrorResumeNext</span></span><br><span class="line">                <span class="comment">/*.onErrorResumeNext(new Func1&lt;Throwable, Observable&lt;? extends String&gt;&gt;() &#123;</span><br><span class="line">                    @Override public Observable&lt;? extends String&gt; call(Throwable throwable) &#123;</span><br><span class="line">                        return Observable.just("error result");</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)*/</span></span><br><span class="line"></span><br><span class="line">                .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">                .subscribe(<span class="keyword">new</span> Action1&lt;<span class="built_in">String</span>&gt;() &#123;</span><br><span class="line">                    <span class="annotation">@Override</span> public <span class="keyword">void</span> call(<span class="built_in">String</span> charSequence) &#123;</span><br><span class="line">                        showpop(charSequence);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private <span class="keyword">void</span> showpop(<span class="built_in">String</span> result) &#123;</span><br><span class="line">        tv_result.append(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">interface</span> <span class="title">SearchService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="annotation">@GET</span>(<span class="string">"/sug"</span>) Observable&lt;Data&gt; searchProdcut(<span class="annotation">@Query</span>(<span class="string">"code"</span>) <span class="built_in">String</span> code, <span class="annotation">@Query</span>(<span class="string">"q"</span>) <span class="built_in">String</span> keyword);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Data</span> </span>&#123;</span><br><span class="line">        public ArrayList&lt;ArrayList&lt;<span class="built_in">String</span>&gt;&gt; result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    https://suggest.taobao.com/sug?code=utf-8&amp;q=%E6%89%8B%E6%9C%BA</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>BroadcastObservable.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanks.rxsearch;</span><br><span class="line"><span class="keyword">import</span> android.content.BroadcastReceiver;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.content.IntentFilter;</span><br><span class="line"><span class="keyword">import</span> android.net.ConnectivityManager;</span><br><span class="line"><span class="keyword">import</span> android.net.NetworkInfo;</span><br><span class="line"><span class="keyword">import</span> android.os.Looper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rx.Observable;</span><br><span class="line"><span class="keyword">import</span> rx.Scheduler;</span><br><span class="line"><span class="keyword">import</span> rx.Subscriber;</span><br><span class="line"><span class="keyword">import</span> rx.Subscription;</span><br><span class="line"><span class="keyword">import</span> rx.android.schedulers.AndroidSchedulers;</span><br><span class="line"><span class="keyword">import</span> rx.functions.Action0;</span><br><span class="line"><span class="keyword">import</span> rx.subscriptions.Subscriptions;</span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by hanks on 15-11-29.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BroadcastObservable</span> <span class="keyword">implements</span> <span class="title">Observable</span>.<span class="title">OnSubscribe</span>&lt;<span class="title">Boolean</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Context context;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BroadcastObservable</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.context = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Observable&lt;Boolean&gt; <span class="title">fromConnectivityManager</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Observable.create(<span class="keyword">new</span> BroadcastObservable(context)).share();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Subscription <span class="title">unsubscribeInUiThread</span><span class="params">(<span class="keyword">final</span> Action0 unsubscribe)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Subscriptions.create(<span class="keyword">new</span> Action0() &#123;</span><br><span class="line">            <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (Looper.getMainLooper() == Looper.myLooper()) &#123;</span><br><span class="line">                    unsubscribe.call();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">final</span> Scheduler.Worker inner = AndroidSchedulers.mainThread().createWorker();</span><br><span class="line">                    inner.schedule(<span class="keyword">new</span> Action0() &#123;</span><br><span class="line">                        <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                            unsubscribe.call();</span><br><span class="line">                            inner.unsubscribe();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(<span class="keyword">final</span> Subscriber&lt;? <span class="keyword">super</span> Boolean&gt; subscriber)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> BroadcastReceiver receiver = <span class="keyword">new</span> BroadcastReceiver() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">                subscriber.onNext(isConnectedToInternet());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        context.registerReceiver(receiver, <span class="keyword">new</span> IntentFilter(ConnectivityManager.CONNECTIVITY_ACTION));</span><br><span class="line">        subscriber.add(unsubscribeInUiThread(<span class="keyword">new</span> Action0() &#123;</span><br><span class="line">            <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                context.unregisterReceiver(receiver);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Boolean <span class="title">isConnectedToInternet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ConnectivityManager manager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);</span><br><span class="line">        NetworkInfo networkInfo = manager.getActiveNetworkInfo();</span><br><span class="line">        <span class="keyword">return</span> networkInfo != <span class="keyword">null</span> &amp;&amp; networkInfo.isConnected();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>RetryWithConnectivityIncremental.java<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanks.rxsearch;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeoutException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> retrofit.RetrofitError;</span><br><span class="line"><span class="keyword">import</span> rx.Observable;</span><br><span class="line"><span class="keyword">import</span> rx.functions.Action1;</span><br><span class="line"><span class="keyword">import</span> rx.functions.Func1;</span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * RetryWithConnectivityIncremental</span><br><span class="line"> * &lt;p/&gt;</span><br><span class="line"> * Created by hanks on 15-11-29.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> RetryWithConnectivityIncremental <span class="keyword">implements</span> Func1&lt;Observable&lt;? <span class="keyword">extends</span> Throwable&gt;, Observable&lt;?&gt;&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> startTimeOut;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> maxTimeOut;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> TimeUnit timeUnit;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> timeOut;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Observable&lt;<span class="keyword">Boolean</span>&gt; isConnected;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> RetryWithConnectivityIncremental(Context context, <span class="keyword">int</span> startTimeOut, <span class="keyword">int</span> maxTimeOut, TimeUnit timeUnit) &#123;</span><br><span class="line">        <span class="keyword">this</span>.startTimeOut = startTimeOut;</span><br><span class="line">        <span class="keyword">this</span>.maxTimeOut = maxTimeOut;</span><br><span class="line">        <span class="keyword">this</span>.timeOut = startTimeOut;</span><br><span class="line">        <span class="keyword">this</span>.timeUnit = timeUnit;</span><br><span class="line">        isConnected = getConnectedObservable(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Observable&lt;<span class="keyword">Boolean</span>&gt; getConnectedObservable(Context context) &#123;</span><br><span class="line">        <span class="keyword">return</span> BroadcastObservable.fromConnectivityManager(context)</span><br><span class="line">                .distinctUntilChanged()</span><br><span class="line">                .filter(<span class="keyword">new</span> Func1&lt;<span class="keyword">Boolean</span>, <span class="keyword">Boolean</span>&gt;() &#123;</span><br><span class="line">                    @Override <span class="keyword">public</span> <span class="keyword">Boolean</span> <span class="keyword">call</span>(<span class="keyword">Boolean</span> isConnected) &#123;</span><br><span class="line">                        <span class="keyword">return</span> isConnected;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Observable.Transformer&lt;<span class="keyword">Boolean</span>, <span class="keyword">Boolean</span>&gt; attachIncementalTimeOut() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Observable.Transformer&lt;<span class="keyword">Boolean</span>, <span class="keyword">Boolean</span>&gt;() &#123;</span><br><span class="line"></span><br><span class="line">            @Override <span class="keyword">public</span> Observable&lt;<span class="keyword">Boolean</span>&gt; <span class="keyword">call</span>(Observable&lt;<span class="keyword">Boolean</span>&gt; observable) &#123;</span><br><span class="line">                <span class="keyword">return</span> observable.timeout(timeOut, timeUnit).doOnError(<span class="keyword">new</span> Action1&lt;Throwable&gt;() &#123;</span><br><span class="line"></span><br><span class="line">                    @Override <span class="keyword">public</span> <span class="keyword">void</span> <span class="keyword">call</span>(Throwable throwable) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (throwable <span class="keyword">instanceof</span> TimeoutException) &#123;</span><br><span class="line">                            timeOut = timeOut &gt; maxTimeOut ? maxTimeOut : timeOut + startTimeOut;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override <span class="keyword">public</span> Observable&lt;?&gt; <span class="keyword">call</span>(<span class="keyword">final</span> Observable&lt;? <span class="keyword">extends</span> Throwable&gt; observable) &#123;</span><br><span class="line">        <span class="keyword">return</span> observable.flatMap(<span class="keyword">new</span> Func1&lt;Throwable, Observable&lt;<span class="keyword">Boolean</span>&gt;&gt;() &#123;</span><br><span class="line">            @Override <span class="keyword">public</span> Observable&lt;<span class="keyword">Boolean</span>&gt; <span class="keyword">call</span>(Throwable throwable) &#123;</span><br><span class="line">                <span class="keyword">if</span> (throwable <span class="keyword">instanceof</span> RetrofitError &amp;&amp; ((RetrofitError) throwable).getKind() == RetrofitError.Kind.NETWORK) &#123;</span><br><span class="line">                    <span class="keyword">return</span> isConnected;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> Observable.error(throwable);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).compose(attachIncementalTimeOut());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>原文链接：<a href="https://medium.com/@diolor/improving-ux-with-rxjava-4440a13b157f#.qdhu122d1">https://medium.com/@diolor/improving-ux-with-rxjava-4440a13b157f#.qdhu122d1</a></br><br>翻译： <a href="https://github.com/hanks-zyh">hanks</a></p>
</blockquote>
<p>“网络永连接，服务器不出错，培根没肥肉”</p>
<p><img src="http://file.bmob.cn/M02/C6/EF/oYYBAFZbFyCADEAkAAV75iu06QU497.gif" alt="Search list animation by Daley P Maasz from Dribbble."></p>]]>
    
    </summary>
    
      <category term="RxJava" scheme="http://hanks.xyz/tags/RxJava/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[利器 -- 抓包工具总结]]></title>
    <link href="http://hanks.xyz/2015/11/26/%E5%88%A9%E5%99%A8_--_%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/"/>
    <id>http://hanks.xyz/2015/11/26/利器_--_抓包工具总结/</id>
    <published>2015-11-26T05:38:00.000Z</published>
    <updated>2015-12-04T17:20:04.324Z</updated>
    <content type="html"><![CDATA[<p>[github 地址] (<a href="https://github.com/hanks-zyh/capturedata" target="_blank" rel="external">https://github.com/hanks-zyh/capturedata</a>)</p>
<blockquote>
<p>抓包工具整理</p>
</blockquote>
<h1 id="抓包工具_–_Charles">抓包工具 – Charles</h1><p>基于Java 跨平台： Linux , Mac OS X, Windows<br><a href="https://www.charlesproxy.com/" target="_blank" rel="external">官网</a></p>
<blockquote>
<p>Charles is an HTTP proxy / HTTP monitor / Reverse Proxy that enables a developer to view all of the HTTP and SSL / HTTPS traffic between their machine and the Internet. This includes requests, responses and the HTTP headers (which contain the cookies and caching information).</p>
</blockquote>
<p><img src="https://www.charlesproxy.com/assets/img/sm/23/image/mac_screen_321.png?k=f28bf8eff3" alt=""></p>
<hr>
<p><strong>以下为Linux 平台</strong></p>
<h2 id="安装">安装</h2><p><a href="https://www.charlesproxy.com/latest-release/download.do" target="_blank" rel="external">下载 charles-proxy-3.11.2.tar.gz</a></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># 解压</span></span><br><span class="line">tar zxvf charles-proxy-<span class="number">3.11</span><span class="number">.2</span>.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 启动 charles</span></span><br><span class="line">./charles/bin/charles</span><br></pre></td></tr></table></figure>
<h2 id="手机抓包">手机抓包</h2><p><strong>前提：使手机和电脑在一个局域网内，不一定非要是一个ip段，只要是同一个路由下就可以了，比如电脑连接的有线网ip为192.168.16.12，然后手机链接的wifi ip为192.168.1.103，但是这个有线网和无线网的最终都是来自于一个外部ip，这样的话也是可以的。</strong></p>
<p>在安卓手机的 <code>设置 -&gt; wlan -&gt; 长按连接的wifi -&gt; 修改网络 -&gt;  高级选项 -&gt; 代理选手动</code> ， 填入电脑的 ip 和 charles 监听的 端口（默认为 8888）</p>
<blockquote>
<p>查看电脑端口 ： <code>ifconfig</code><br>查看/修改 charles 监听端口： charles的 <code>Proxy -&gt; Proxy Setting</code></p>
</blockquote>
<p>设置好之后Charles弹出确认框，点击Allow按钮即可</p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/ad193bbb-4d55-4feb-9e55-0634aa6dbfce.png" alt="图片"> </p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/c48ee820-f6ae-4814-b505-ff4870db1f5b.png" alt="图片"> </p>
<h2 id="抓取_https">抓取 https</h2><p> <img src="https://dn-coding-net-production-pp.qbox.me/027d34d1-c783-4aca-8db3-e0066bf4ca1b.png" alt="图片"> </p>
<h3 id="安装证书">安装证书</h3><p>charles的 Help -&gt; SSL Proxy -&gt; Install charles Root</p>
<h3 id="设置_ssl_enable">设置 ssl enable</h3><p>在需要抓取的 https 链接上 右键 <code>enable ssl proxy</code><br><img src="https://dn-coding-net-production-pp.qbox.me/4b91cf2a-e35b-4b9b-96ac-047eafe607e6.png" alt="图片"> </p>
<p>参考 <a href="http://drops.wooyun.org/tips/2423" target="_blank" rel="external">charles使用教程指南</a></p>
<h1 id="抓包工具_–_mitmproxy">抓包工具 – mitmproxy</h1><p>基于python 跨平台： linux, windows，    OSX (Mountain Lion and later)<br><a href="https://mitmproxy.org/" target="_blank" rel="external">官网</a></p>
<blockquote>
<p>Mitmproxy是一个基于python的中间人代理的框架。做过渗透测试的肯定很熟悉工具burpsuite或Fiddler，这些工具能够拦截并修改http或https的数据包，对于分析数据包交互的应用来说是非常有用的。但是这些工具都是整套给我们做好了。比如如果想自己定制一套这样的工具，添加一些自己需要的功能的话，那么我想，mitmproxy将是一个比较好的选择，因为它提供了一个可供用户调用的库libmproxy（注意该库目前只支持linux系统）。</p>
</blockquote>
<p><img src="https://dn-coding-net-production-pp.qbox.me/a2d09a30-ea72-42a1-818e-0982f7227784.png" alt="图片"></p>
<p><img src="https://dn-coding-net-production-pp.qbox.me/85e1f4e1-c914-4ac1-9984-4492aad7096f.png" alt="图片"></p>
<p><img src="https://dn-coding-net-production-pp.qbox.me/6992699a-cb21-44b7-9114-38d1b10f0272.png" alt="图片"></p>
<hr>
<p><strong>以下基于Linux台（Ubuntu14.04）</strong></p>
<h2 id="下载">下载</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pip <span class="keyword">install</span> mitmproxy</span><br></pre></td></tr></table></figure>
<p>如果下载速度慢可以下载<a href="https://mitmproxy.org/download/mitmproxy-0.14.0.tar.gz" target="_blank" rel="external">tar包</a></p>
<h2 id="启动">启动</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mitmproxy -b <span class="number">192.168</span><span class="number">.1</span><span class="number">.29</span> -p <span class="number">9999</span></span><br></pre></td></tr></table></figure>
<p>输入 <code>？</code> 查看帮助， <code>q</code>返回<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">A      accept all intercepted flows</span><br><span class="line">a      accept this intercepted flow</span><br><span class="line">b      save request/response body</span><br><span class="line">C      clear flow list or eventlog</span><br><span class="line">d      <span class="operator"><span class="keyword">delete</span> flow</span><br><span class="line"><span class="keyword">D</span>      <span class="keyword">duplicate</span> flow</span><br><span class="line"><span class="keyword">e</span>      toggle eventlog</span><br><span class="line"><span class="keyword">F</span>      toggle follow flow <span class="keyword">list</span></span><br><span class="line"><span class="keyword">l</span>      <span class="keyword">set</span> <span class="keyword">limit</span> filter pattern</span><br><span class="line"><span class="keyword">L</span>      <span class="keyword">load</span> saved flows</span><br><span class="line"><span class="keyword">m</span>      toggle flow mark</span><br><span class="line"><span class="keyword">n</span>      <span class="keyword">create</span> a <span class="keyword">new</span> request</span><br><span class="line"><span class="keyword">P</span>      copy flow <span class="keyword">to</span> clipboard</span><br><span class="line">r      replay request</span><br><span class="line">U      unmark all marked flows</span><br><span class="line">V      revert changes <span class="keyword">to</span> request</span><br><span class="line">w      <span class="keyword">save</span> flows</span><br><span class="line">W      stream flows <span class="keyword">to</span> <span class="keyword">file</span></span><br><span class="line">X      <span class="keyword">kill</span> <span class="keyword">and</span> <span class="keyword">delete</span> flow, even <span class="keyword">if</span> it<span class="string">'s mid-intercept</span><br><span class="line">tab    tab between eventlog and flow list</span><br><span class="line">enter  view flow</span><br><span class="line">|      run script on this flow</span></span></span><br></pre></td></tr></table></figure></p>
<p>手机设置好代理，界面上就可以看到请求了<br><img src="https://dn-coding-net-production-pp.qbox.me/c5446754-1d45-4d7d-ba48-44b6e26d3b4f.png" alt="图片"></p>
<h2 id="mitmproxy_查看http请求响应">mitmproxy 查看http请求响应</h2><p><code>C (大写)</code> 清除抓包结果</p>
<p><code>j</code>  <code>k</code> 选择请求， 回车查看详细信息</p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/5cfa3fd1-879b-4db6-8f05-f8885d730964.png" alt="图片"></p>
<p><code>tab</code>   切换 <strong>Request</strong> 和 <strong>Response</strong></p>
<p><code>m</code> Display Mode 美化信息<br> <img src="https://dn-coding-net-production-pp.qbox.me/70e7c4ad-f7c0-4e7a-bea6-2c4cdd36d50b.png" alt="图片"><br> 上图输入 m，在输入 s，便可以以json形式展示</p>
<p><code>e</code> 编辑<br>Edit request (cookies,query,path,url,header,form,raw body,method)?<br>Edit response (cookies,code,message,header,raw body)?</p>
<h3 id="mitmproxy拦截_(Intercept)">mitmproxy拦截 (Intercept)</h3><p>相当于在客户端和服务器做中间人，可以修改客户端请求，修改服务器返回</p>
<p>输入 <code>i</code>（代表Intercept filter）即可，此时界面便会让你输入想要拦截的条件：</p>
<p>mitmproxy的条件拦截在默认情况下是过滤抓包的URL的。也就是说当你直接输入要拦截的条件（比如输入“weibo”），那么接下来要出现抓包会将匹配的抓包整体变黄：</p>
<p>mitmproxy条件过滤效果<br>mitmproxy条件拦截效果<br>这些橘黄色的数据包都代表被拦截了，还未发送给服务器，这个时候你就可以对这些数据包进行修改，我们选择一个数据包enter进入：</p>
<p>mitmproxy 拦截 选择数据包<br>与之前的类似，输入“e”，进行request编辑模式，然后输入“h”代表要编辑request的头部:</p>
<p>mitmproxy 编辑拦截包的头部<br>输入enter便可对高亮的User-Agent的值进行修改，上图的weibo版本之前是5.0的，被我改成了6.0 。我们还可以对header进行添加属性，输入“a”即可，然后使用tab分别键入key和value。这里我添加了“test－test”键值对：</p>
<p>mitmproxy 拦截header添加键值对<br>至此，我对拦截的request header已经修改完毕，现在要做的就是我要认可接受这个修改，然后发给服务器。所以我们输入“a”（代表“accept”）即可，等到服务器响应后，注意，mitmproxy便又了拦截服务器发过来的response（注意那个“Response intercepted”）：</p>
<p>mitmproxy 拦截response<br>现在如果你想修改这个response也可以，方式同上面修改request一样。这个时候我再输入“a”，代表我接受了这个response，然后这个response便可发给客户端了:</p>
<p>mitmproxy 拦截response之后accept</p>
<p>更多类型的mitmproxy拦截</p>
<p>同时mitmproxy还支持不同类型的条件过滤，之前在拦截字符串前面加上特定的参数比如我要拦截所有的POST request怎么办？输入：~m POST 即可（m代表method）：</p>
<p>mitmproxy 拦截特定的request 方法</p>
<p>拦截所有的request： ~q</p>
<p>拦截特定的header： ~h</p>
<p>拦截特定的domain： ~d</p>
<p>拦截特定的响应代码（404之类的）： ~c</p>
<p>mitmproxy官方文档。</p>
<hr>
<h1 id="抓包工具_–_Fiddler">抓包工具 – Fiddler</h1><p>基于C#  windows, Linux看这里 <a href="http://fiddler.wikidot.com/mono" target="_blank" rel="external">Mono Fiddler</a></p>
<hr>
<h2 id="下载-1">下载</h2><p>直接下载，安装即可</p>
<h2 id="手机抓包-1">手机抓包</h2><p><img src="https://imququ.com/static/uploads/2013/09/Snip20130913_20.png.webp" alt=""></p>
<hr>
<h1 id="抓包工具_–_wireshark">抓包工具 – wireshark</h1><p>跨平台：Windows，OS X ，Linux</p>
<p><a href="https://www.wireshark.org/" target="_blank" rel="external">官网</a></p>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[解析 dex 文件结构 - DexHeader]]></title>
    <link href="http://hanks.xyz/2015/11/18/%E8%A7%A3%E6%9E%90_dex_%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84_-_DexHeader/"/>
    <id>http://hanks.xyz/2015/11/18/解析_dex_文件结构_-_DexHeader/</id>
    <published>2015-11-18T03:02:00.000Z</published>
    <updated>2015-12-06T04:32:37.893Z</updated>
    <content type="html"><![CDATA[
<p><span style="font-size:18px">原文:&nbsp;<a target="_blank" href="http://kiya-z.github.io/2015/11/17/parse-dex-file-part-dex-header/">http://kiya-z.github.io/2015/11/17/parse-dex-file-part-dex-header/</a></span></p>
<p><br>
</p>
<p></p>
<h1 class="post-title" style="font-size:26px; margin:0px; padding:0px; line-height:1; text-align:center; word-break:break-word">
解析 dex 文件结构 - DexHeader</h1>
<div class="post-meta" style="margin:3px 0px 60px; color:rgb(153,153,153); font-size:12px; text-align:center">
<span class="post-time">发表于&nbsp;2015-11-17&nbsp;</span><span class="post-category">&nbsp; | &nbsp; 分类于&nbsp;<span><a target="_blank" href="http://kiya-z.github.io/categories/Android/" rel="index" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent"><span>Android</span>&nbsp;</a></span></span><span class="post-comments-count">&nbsp;
 | &nbsp;&nbsp;<a target="_blank" href="http://kiya-z.github.io/2015/11/17/parse-dex-file-part-dex-header/#comments" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent"><span class="post-comments-count ds-thread-count">暂无评论</span>&nbsp;</a></span><span id="busuanzi_container_page_pv" style="display:inline">&nbsp;
 | &nbsp;&nbsp;<span id="busuanzi_value_page_pv">6</span>&nbsp; Hits</span></div>
<div class="post-body" style="text-align:justify; color:rgb(85,85,85); font-family:Lato,'PingFang SC','Microsoft YaHei',sans-serif; font-size:16px; line-height:32px">
<span></span>
<h3 id="简介" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
简介</h3>
<p style="margin-top:0px; margin-bottom:25px">dex 文件是 dalvik 虚拟机的可执行文件。</p>
<a target="_blank" id="more" style="border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent"></a>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<h3 id="dex_文件结构" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
dex 文件结构</h3>
<p style="margin-top:0px; margin-bottom:25px">该结构位于系统源码&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">dalvik\libdex\DexFile.h</code>&nbsp;中，描述的是
 dex 文件被映射到内存中的结构。</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
<span class="line" style="height:20px">4</span>
<span class="line" style="height:20px">5</span>
<span class="line" style="height:20px">6</span>
<span class="line" style="height:20px">7</span>
<span class="line" style="height:20px">8</span>
<span class="line" style="height:20px">9</span>
<span class="line" style="height:20px">10</span>
<span class="line" style="height:20px">11</span>
<span class="line" style="height:20px">12</span>
<span class="line" style="height:20px">13</span>
<span class="line" style="height:20px">14</span>
<span class="line" style="height:20px">15</span>
<span class="line" style="height:20px">16</span>
<span class="line" style="height:20px">17</span>
<span class="line" style="height:20px">18</span>
<span class="line" style="height:20px">19</span>
<span class="line" style="height:20px">20</span>
<span class="line" style="height:20px">21</span>
<span class="line" style="height:20px">22</span>
<span class="line" style="height:20px">23</span>
<span class="line" style="height:20px">24</span>
<span class="line" style="height:20px">25</span>
<span class="line" style="height:20px">26</span>
<span class="line" style="height:20px">27</span>
<span class="line" style="height:20px">28</span>
<span class="line" style="height:20px">29</span>
<span class="line" style="height:20px">30</span>
<span class="line" style="height:20px">31</span>
<span class="line" style="height:20px">32</span>
<span class="line" style="height:20px">33</span>
<span class="line" style="height:20px">34</span>
<span class="line" style="height:20px">35</span>
<span class="line" style="height:20px">36</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px">/<span class="keyword" style="color:rgb(178,148,187)">*</span></span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">*</span> Structure representing a DEX file.</span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">*</span></span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">*</span> Code should regard DexFile as opaque, using the API calls provided here</span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">*</span> to access specific structures.</span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">struct DexFile {</span>
<span class="line" style="height:20px">    /<span class="keyword" style="color:rgb(178,148,187)">*</span> directly-mapped <span class="string" style="color:rgb(181,189,104)">&quot;opt&quot;</span> header <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    const DexOptHeader<span class="keyword" style="color:rgb(178,148,187)">*</span> pOptHeader;</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">    /<span class="keyword" style="color:rgb(178,148,187)">*</span> pointers to directly-mapped structs and arrays in base DEX <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    const DexHeader<span class="keyword" style="color:rgb(178,148,187)">*</span>    pHeader;</span>
<span class="line" style="height:20px">    const DexStringId<span class="keyword" style="color:rgb(178,148,187)">*</span>  pStringIds;</span>
<span class="line" style="height:20px">    const DexTypeId<span class="keyword" style="color:rgb(178,148,187)">*</span>    pTypeIds;</span>
<span class="line" style="height:20px">    const DexFieldId<span class="keyword" style="color:rgb(178,148,187)">*</span>   pFieldIds;</span>
<span class="line" style="height:20px">    const DexMethodId<span class="keyword" style="color:rgb(178,148,187)">*</span>  pMethodIds;</span>
<span class="line" style="height:20px">    const DexProtoId<span class="keyword" style="color:rgb(178,148,187)">*</span>   pProtoIds;</span>
<span class="line" style="height:20px">    const DexClassDef<span class="keyword" style="color:rgb(178,148,187)">*</span>  pClassDefs;</span>
<span class="line" style="height:20px">    const DexLink<span class="keyword" style="color:rgb(178,148,187)">*</span>      pLinkData;</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">    /<span class="keyword" style="color:rgb(178,148,187)">*</span></span>
<span class="line" style="height:20px">     <span class="keyword" style="color:rgb(178,148,187)">*</span> These are mapped out of the <span class="string" style="color:rgb(181,189,104)">&quot;auxillary&quot;</span> section, and may not be</span>
<span class="line" style="height:20px">     <span class="keyword" style="color:rgb(178,148,187)">*</span> included in the file.</span>
<span class="line" style="height:20px">     <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    const DexClassLookup<span class="keyword" style="color:rgb(178,148,187)">*</span> pClassLookup;</span>
<span class="line" style="height:20px">    const void<span class="keyword" style="color:rgb(178,148,187)">*</span>         pRegisterMapPool;       // RegisterMapClassPool</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">    /<span class="keyword" style="color:rgb(178,148,187)">*</span> points to start of DEX file data <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    const u1<span class="keyword" style="color:rgb(178,148,187)">*</span>           baseAddr;</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">    /<span class="keyword" style="color:rgb(178,148,187)">*</span> track memory overhead for auxillary structures <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    int                 overhead;</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">    /<span class="keyword" style="color:rgb(178,148,187)">*</span> additional app-specific data structures associated with the DEX <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    //void<span class="keyword" style="color:rgb(178,148,187)">*</span>               auxData;</span>
<span class="line" style="height:20px">};</span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px">基本的文件结构只需关注:<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
<span class="line" style="height:20px">4</span>
<span class="line" style="height:20px">5</span>
<span class="line" style="height:20px">6</span>
<span class="line" style="height:20px">7</span>
<span class="line" style="height:20px">8</span>
<span class="line" style="height:20px">9</span>
<span class="line" style="height:20px">10</span>
<span class="line" style="height:20px">11</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px">struct DexFile{</span>
<span class="line" style="height:20px">    DexHeader    Header<span class="comment" style="color:rgb(150,152,150)">;</span></span>
<span class="line" style="height:20px">    DexStringId  StringIds[stringIdsSize]<span class="comment" style="color:rgb(150,152,150)">;</span></span>
<span class="line" style="height:20px">    DexTypeId    TypeIds[typeIdsSize]<span class="comment" style="color:rgb(150,152,150)">;</span></span>
<span class="line" style="height:20px">    DexFieldId   FieldIds[fieldIdsSize]<span class="comment" style="color:rgb(150,152,150)">;</span></span>
<span class="line" style="height:20px">    DexMethodId  MethodIds[methodIdsSize]<span class="comment" style="color:rgb(150,152,150)">;</span></span>
<span class="line" style="height:20px">    DexProtoId   ProtoIds[protoIdsSize]<span class="comment" style="color:rgb(150,152,150)">;</span></span>
<span class="line" style="height:20px">    DexClassDef  ClassDefs[classDefsSize]<span class="comment" style="color:rgb(150,152,150)">;</span></span>
<span class="line" style="height:20px">    DexData      Data[]<span class="comment" style="color:rgb(150,152,150)">;</span></span>
<span class="line" style="height:20px">    DexLink      LinkData<span class="comment" style="color:rgb(150,152,150)">;</span></span>
<span class="line" style="height:20px">}<span class="comment" style="color:rgb(150,152,150)">;</span></span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<h4 id="大体结构图" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1">
大体结构图</h4>
<p style="margin-top:0px; margin-bottom:25px"><a target="_blank" href="http://7xo976.com1.z0.glb.clouddn.com/images/github-io/Android/dex-file-general-structure.png" class="fancybox" rel="group" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent"><img src="http://7xo976.com1.z0.glb.clouddn.com/images/github-io/Android/dex-file-general-structure.png" alt="dex-file-general-structure" style="border:1px solid rgb(221,221,221); display:block!important; margin:0px auto; max-width:100%; height:auto; padding:3px"></a></p>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<h3 id="DexHeader_结构" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
DexHeader 结构</h3>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
<span class="line" style="height:20px">4</span>
<span class="line" style="height:20px">5</span>
<span class="line" style="height:20px">6</span>
<span class="line" style="height:20px">7</span>
<span class="line" style="height:20px">8</span>
<span class="line" style="height:20px">9</span>
<span class="line" style="height:20px">10</span>
<span class="line" style="height:20px">11</span>
<span class="line" style="height:20px">12</span>
<span class="line" style="height:20px">13</span>
<span class="line" style="height:20px">14</span>
<span class="line" style="height:20px">15</span>
<span class="line" style="height:20px">16</span>
<span class="line" style="height:20px">17</span>
<span class="line" style="height:20px">18</span>
<span class="line" style="height:20px">19</span>
<span class="line" style="height:20px">20</span>
<span class="line" style="height:20px">21</span>
<span class="line" style="height:20px">22</span>
<span class="line" style="height:20px">23</span>
<span class="line" style="height:20px">24</span>
<span class="line" style="height:20px">25</span>
<span class="line" style="height:20px">26</span>
<span class="line" style="height:20px">27</span>
<span class="line" style="height:20px">28</span>
<span class="line" style="height:20px">29</span>
<span class="line" style="height:20px">30</span>
<span class="line" style="height:20px">31</span>
<span class="line" style="height:20px">32</span>
<span class="line" style="height:20px">33</span>
<span class="line" style="height:20px">34</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px">/<span class="keyword" style="color:rgb(178,148,187)">*</span></span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">*</span> 160-bit SHA-1 digest.</span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">enum { kSHA1DigestLen = 20,</span>
<span class="line" style="height:20px">       kSHA1DigestOutputLen = kSHA1DigestLen<span class="keyword" style="color:rgb(178,148,187)">*</span>2 &#43;1 };</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">/<span class="keyword" style="color:rgb(178,148,187)">*</span></span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">*</span> Direct-mapped <span class="string" style="color:rgb(181,189,104)">&quot;header_item&quot;</span> struct.</span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">struct DexHeader {</span>
<span class="line" style="height:20px">    u1  magic[8];           /<span class="keyword" style="color:rgb(178,148,187)">*</span> 版本标识 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  checksum;           /<span class="keyword" style="color:rgb(178,148,187)">*</span> adler32 检验 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u1  signature[kSHA1DigestLen]; /<span class="keyword" style="color:rgb(178,148,187)">*</span> SHA-1 哈希&#20540; <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  fileSize;           /<span class="keyword" style="color:rgb(178,148,187)">*</span> 整个文件大小 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  headerSize;         /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexHeader 大小 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  endianTag;          /<span class="keyword" style="color:rgb(178,148,187)">*</span> 字节序标记 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  linkSize;           /<span class="keyword" style="color:rgb(178,148,187)">*</span> 链接段大小 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  linkOff;            /<span class="keyword" style="color:rgb(178,148,187)">*</span> 链接段偏移 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  mapOff;             /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexMapList 的文件偏移 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  stringIdsSize;      /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexStringId 的个数 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  stringIdsOff;       /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexStringId 的文件偏移 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  typeIdsSize;        /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexTypeId 的个数 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  typeIdsOff;         /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexTypeId 的文件偏移 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  protoIdsSize;       /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexProtoId 的个数 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  protoIdsOff;        /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexProtoId 的文件偏移 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  fieldIdsSize;       /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexFieldId 的个数 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  fieldIdsOff;        /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexFieldId 的文件偏移 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  methodIdsSize;      /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexMethodId 的个数 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  methodIdsOff;       /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexMethodId 的文件偏移 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  classDefsSize;      /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexClassDef 的个数 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  classDefsOff;       /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexClassDef 的文件偏移 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  dataSize;           /<span class="keyword" style="color:rgb(178,148,187)">*</span> 数据段的大小 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  dataOff;            /<span class="keyword" style="color:rgb(178,148,187)">*</span> 数据段的文件偏移 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">};</span>
</pre>
</td>
</tr>
</tbody>
</table>
<h4 id="其中：" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1">其中：</h4>
<p style="margin-top:0px; margin-bottom:25px"><strong>magic</strong>&nbsp;： dex文件标识，&#20540;必须为常量&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">DEX_FILE_MAGIC</code>；</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px">ubyte[<span class="number" style="color:rgb(222,147,95)">8</span>] DEX_FILE_MAGIC = { <span class="number" style="color:rgb(222,147,95)">0x64</span> <span class="number" style="color:rgb(222,147,95)">0x65</span> <span class="number" style="color:rgb(222,147,95)">0x78</span> <span class="number" style="color:rgb(222,147,95)">0x0a</span> <span class="number" style="color:rgb(222,147,95)">0x30</span> <span class="number" style="color:rgb(222,147,95)">0x33</span> <span class="number" style="color:rgb(222,147,95)">0x35</span> <span class="number" style="color:rgb(222,147,95)">0x00</span> }</span>
<span class="line" style="height:20px">                        = <span class="string" style="color:rgb(181,189,104)">&quot;dex\n035\0&quot;</span></span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"><strong>checkSum</strong>&nbsp;： 对除 magic 和 checkSum 外的剩余文件计算 adler32 校验&#20540;，目的是检测文件是否损坏；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>signature</strong>：对除 magic、checkSum 和 signature 外的剩余文件计算 SHA-1 校验&#20540;，用来确定文件的唯一性</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>fileSize</strong>：以字节为单位，整个文件（包括头部）的大小；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>headerSize</strong>：头部大小，0x70 字节，已经考虑到兼容性；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>endianTag</strong>：两种字节序取&#20540;；</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px">uint ENDIAN_CONSTANT = <span class="number" style="color:rgb(222,147,95)">0x12345678</span><span class="comment" style="color:rgb(150,152,150)">;</span></span>
<span class="line" style="height:20px">uint REVERSE_ENDIAN_CONSTANT = <span class="number" style="color:rgb(222,147,95)">0x78563412</span><span class="comment" style="color:rgb(150,152,150)">;</span></span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"><strong>linkSize</strong>：链接段的大小，如果没有使用静态链接，&#20540;为0；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>linkOff</strong>：链接段的文件偏移，指向链接数据段内，如果&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">linkSize</code>&nbsp;为
 0，则为 0；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>mapOff</strong>：map item 的文件偏移，指向数据段内，数据结构为&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">mapList</code>，如果没有
 map，&#20540;为 0；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>stringIdsSize</strong>：字符串 id 的个数；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>stringIdsOff</strong>：字符串 id 清单的文件偏移，指向&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">stringIds</code>&nbsp;的起始地址，如果
 stringIdsSize 为 0，&#20540;为0；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>typeIdsSize</strong>：类型标识符的个数；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>typeIdsOff</strong>：类型标识符清单的文件偏移，指向&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">typeIds</code>&nbsp;的起始地址，如果
 typeIdsSize 为 0，&#20540;为 0 (<em>这就很奇怪了哟</em>)；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>protoIdsSize</strong>：原型标识符的个数；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>protoIdsOff</strong>：原型标识符清单的文件偏移，指向&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">protoIds</code>&nbsp;的起始地址，如果
 protoIdsSize 为 0，&#20540;为 0 (<em>这就很奇怪了哟</em>)；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>fieldIdsSize</strong>：字段标识符的个数；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>fieldIdsOff</strong>：字段标识符清单的文件偏移，指向&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">fieldIds</code>&nbsp;的起始地址，如果
 fieldIdsSize 为 0，&#20540;为 0；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>methodIdsSize</strong>：方法标识符的个数；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>methodIdsOff</strong>：方法标识符清单的文件偏移，指向&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">methodIds</code>&nbsp;的起始地址，如果
 methodIdsSize 为 0，&#20540;为 0；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>classDefsSize</strong>：类的个数；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>classDefsOff</strong>：类清单的文件偏移，指向&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">classDefs</code>&nbsp;的起始地址，如果
 classDefsSize 为 0，&#20540;为 0 (<em>这就很奇怪了哟</em>)；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>dataSize</strong>：数据段的大小，以字节为单位，并且是 sizeof(uint) 的偶数倍；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>dataOff</strong>：数据段的文件偏移。</p>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<h3 id="手工查找" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
手工查找</h3>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
<span class="line" style="height:20px">4</span>
<span class="line" style="height:20px">5</span>
<span class="line" style="height:20px">6</span>
<span class="line" style="height:20px">7</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="number" style="color:rgb(222,147,95)">00000000</span>  <span class="number" style="color:rgb(222,147,95)">64</span> <span class="number" style="color:rgb(222,147,95)">65</span> <span class="number" style="color:rgb(222,147,95)">78</span> <span class="number" style="color:rgb(222,147,95)">0</span>a <span class="number" style="color:rgb(222,147,95)">30</span> <span class="number" style="color:rgb(222,147,95)">33</span> <span class="number" style="color:rgb(222,147,95)">35</span> <span class="number" style="color:rgb(222,147,95)">00</span>  <span class="number" style="color:rgb(222,147,95)">3</span>b ba fe c3 <span class="number" style="color:rgb(222,147,95)">83</span> <span class="number" style="color:rgb(222,147,95)">7</span>e aa be  |dex<span class="number" style="color:rgb(222,147,95)">.035</span>.;....~..|</span>
<span class="line" style="height:20px"><span class="number" style="color:rgb(222,147,95)">00000010</span>  <span class="number" style="color:rgb(222,147,95)">09</span> <span class="number" style="color:rgb(222,147,95)">97</span> <span class="number" style="color:rgb(222,147,95)">71</span> <span class="number" style="color:rgb(222,147,95)">1</span>e <span class="number" style="color:rgb(222,147,95)">17</span> <span class="number" style="color:rgb(222,147,95)">96</span> <span class="number" style="color:rgb(222,147,95)">9f</span> e9  <span class="number" style="color:rgb(222,147,95)">0</span>c bd <span class="number" style="color:rgb(222,147,95)">01</span> <span class="number" style="color:rgb(222,147,95)">60</span> b4 <span class="number" style="color:rgb(222,147,95)">2</span>a <span class="number" style="color:rgb(222,147,95)">1</span>a c9  |..q........`.*..|</span>
<span class="line" style="height:20px"><span class="number" style="color:rgb(222,147,95)">00000020</span>  c4 <span class="number" style="color:rgb(222,147,95)">10</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">70</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span>  <span class="number" style="color:rgb(222,147,95)">78</span> <span class="number" style="color:rgb(222,147,95)">56</span> <span class="number" style="color:rgb(222,147,95)">34</span> <span class="number" style="color:rgb(222,147,95)">12</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span>  |....p...xV4.....|</span>
<span class="line" style="height:20px"><span class="number" style="color:rgb(222,147,95)">00000030</span>  <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">10</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span>  <span class="number" style="color:rgb(222,147,95)">5</span>c <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">70</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span>  |........\...p...|</span>
<span class="line" style="height:20px"><span class="number" style="color:rgb(222,147,95)">00000040</span>  <span class="number" style="color:rgb(222,147,95)">19</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> e0 <span class="number" style="color:rgb(222,147,95)">01</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span>  <span class="number" style="color:rgb(222,147,95)">12</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">44</span> <span class="number" style="color:rgb(222,147,95)">02</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span>  |............D...|</span>
<span class="line" style="height:20px"><span class="number" style="color:rgb(222,147,95)">00000050</span>  <span class="number" style="color:rgb(222,147,95)">01</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">1</span>c <span class="number" style="color:rgb(222,147,95)">03</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span>  <span class="number" style="color:rgb(222,147,95)">2</span>b <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">24</span> <span class="number" style="color:rgb(222,147,95)">03</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span>  |........&#43;...$...|</span>
<span class="line" style="height:20px"><span class="number" style="color:rgb(222,147,95)">00000060</span>  <span class="number" style="color:rgb(222,147,95)">02</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">7</span>c <span class="number" style="color:rgb(222,147,95)">04</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span>  <span class="number" style="color:rgb(222,147,95)">08</span> <span class="number" style="color:rgb(222,147,95)">0</span>c <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> bc <span class="number" style="color:rgb(222,147,95)">04</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span>  |....|...........|</span>
</pre>
</td>
</tr>
</tbody>
</table>
<table style="border-collapse:collapse; border-spacing:0px; margin:20px 0px; width:899px; border:1px solid rgb(221,221,221); font-size:14px">
<thead>
<tr>
<th style="padding:8px 8px 10px; vertical-align:middle; border-bottom-width:3px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
binary</th>
<th style="padding:8px 8px 10px; vertical-align:middle; border-bottom-width:3px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
field</th>
</tr>
</thead>
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
64 65 78 0a 30 33 35 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
magic</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
3b ba fe c3</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
checksum</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
83 7e aa be 09 97 71 1e 17 96 9f e9 0c bd 01 60 b4 2a 1a c9</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
signature</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
c4 10 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
fileSize</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
70 00 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
headerSize</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
78 56 34 12</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
endianTag</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
00 00 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
linkSize</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
00 00 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
linkOff</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
00 10 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
mapOff</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
5c 00 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
stringIdsSize</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
70 00 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
stringIdsOff</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
19 00 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
typeIdsSize</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
e0 01 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
typeIdsOff</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
12 00 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
protoIdsSize</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
44 02 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
protoIdsOff</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
01 00 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
fieldIdsSize</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
1c 03 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
fieldIdsOff</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
2b 00 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
methodIdsSize</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
24 03 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
methodIdsOff</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
02 00 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
classDefsSize</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
7c 04 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
classDefsOff</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
08 0c 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
dataSize</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
bc 04 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
dataOff</td>
</tr>
</tbody>
</table>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<h3 id="写程序解析_DexHeader" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
写程序解析 DexHeader</h3>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
<span class="line" style="height:20px">4</span>
<span class="line" style="height:20px">5</span>
<span class="line" style="height:20px">6</span>
<span class="line" style="height:20px">7</span>
<span class="line" style="height:20px">8</span>
<span class="line" style="height:20px">9</span>
<span class="line" style="height:20px">10</span>
<span class="line" style="height:20px">11</span>
<span class="line" style="height:20px">12</span>
<span class="line" style="height:20px">13</span>
<span class="line" style="height:20px">14</span>
<span class="line" style="height:20px">15</span>
<span class="line" style="height:20px">16</span>
<span class="line" style="height:20px">17</span>
<span class="line" style="height:20px">18</span>
<span class="line" style="height:20px">19</span>
<span class="line" style="height:20px">20</span>
<span class="line" style="height:20px">21</span>
<span class="line" style="height:20px">22</span>
<span class="line" style="height:20px">23</span>
<span class="line" style="height:20px">24</span>
<span class="line" style="height:20px">25</span>
<span class="line" style="height:20px">26</span>
<span class="line" style="height:20px">27</span>
<span class="line" style="height:20px">28</span>
<span class="line" style="height:20px">29</span>
<span class="line" style="height:20px">30</span>
<span class="line" style="height:20px">31</span>
<span class="line" style="height:20px">32</span>
<span class="line" style="height:20px">33</span>
<span class="line" style="height:20px">34</span>
<span class="line" style="height:20px">35</span>
<span class="line" style="height:20px">36</span>
<span class="line" style="height:20px">37</span>
<span class="line" style="height:20px">38</span>
<span class="line" style="height:20px">39</span>
<span class="line" style="height:20px">40</span>
<span class="line" style="height:20px">41</span>
<span class="line" style="height:20px">42</span>
<span class="line" style="height:20px">43</span>
<span class="line" style="height:20px">44</span>
<span class="line" style="height:20px">45</span>
<span class="line" style="height:20px">46</span>
<span class="line" style="height:20px">47</span>
<span class="line" style="height:20px">48</span>
<span class="line" style="height:20px">49</span>
<span class="line" style="height:20px">50</span>
<span class="line" style="height:20px">51</span>
<span class="line" style="height:20px">52</span>
<span class="line" style="height:20px">53</span>
<span class="line" style="height:20px">54</span>
<span class="line" style="height:20px">55</span>
<span class="line" style="height:20px">56</span>
<span class="line" style="height:20px">57</span>
<span class="line" style="height:20px">58</span>
<span class="line" style="height:20px">59</span>
<span class="line" style="height:20px">60</span>
<span class="line" style="height:20px">61</span>
<span class="line" style="height:20px">62</span>
<span class="line" style="height:20px">63</span>
<span class="line" style="height:20px">64</span>
<span class="line" style="height:20px">65</span>
<span class="line" style="height:20px">66</span>
<span class="line" style="height:20px">67</span>
<span class="line" style="height:20px">68</span>
<span class="line" style="height:20px">69</span>
<span class="line" style="height:20px">70</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="atom">import</span> <span class="atom">struct</span></span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px"><span class="atom">class</span> <span class="name">DexStruct</span>(<span class="atom">object</span>):</span>
<span class="line" style="height:20px">    <span class="name">DexHeader</span> = {</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;magic&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;checkSum&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">'signature'</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">'fileSize'</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;headerSize&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;endianTag&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;linkSize&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;linkOff&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;mapOff&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;stringIdsSize&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;stringIdsOff&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;typeIdsSize&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;typeIdsOff&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;protoIdsSize&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;protoIdsOff&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;fieldIdsSize&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;fieldIdsOff&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;methodIdsSize&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;methodIdsOff&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;classDefsSize&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;classDefsOff&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;dataSize&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;dataOff&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,   }</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px"><span class="atom">def</span> <span class="atom">parseHeader</span>(<span class="atom">header_data</span>):</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">        <span class="atom">header_list</span> = [<span class="atom">header_data</span>[<span class="atom">i</span>:<span class="atom">i</span>&#43;<span class="number" style="color:rgb(222,147,95)">4</span>] <span class="atom">for</span> <span class="atom">i</span> <span class="atom">in</span> <span class="atom">range</span>(<span class="number" style="color:rgb(222,147,95)">32</span>,<span class="number" style="color:rgb(222,147,95)">112</span>,<span class="number" style="color:rgb(222,147,95)">4</span>)]</span>
<span class="line" style="height:20px">        <span class="atom">header_list</span>.<span class="atom">insert</span>(<span class="number" style="color:rgb(222,147,95)">0</span>,<span class="atom">header_data</span>[<span class="number" style="color:rgb(222,147,95)">12</span>:<span class="number" style="color:rgb(222,147,95)">32</span>])</span>
<span class="line" style="height:20px">        <span class="atom">header_list</span>.<span class="atom">insert</span>(<span class="number" style="color:rgb(222,147,95)">0</span>,<span class="atom">header_data</span>[<span class="number" style="color:rgb(222,147,95)">8</span>:<span class="number" style="color:rgb(222,147,95)">12</span>])</span>
<span class="line" style="height:20px">        <span class="atom">header_list</span>.<span class="atom">insert</span>(<span class="number" style="color:rgb(222,147,95)">0</span>,<span class="atom">header_data</span>[:<span class="number" style="color:rgb(222,147,95)">8</span>])</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'magic'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'8s'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">0</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="atom">if</span> <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'magic'</span>] != <span class="string" style="color:rgb(181,189,104)">&quot;dex\n035\0&quot;</span>:</span>
<span class="line" style="height:20px">            <span class="atom">print</span> <span class="string" style="color:rgb(181,189,104)">'invalid dex file.'</span></span>
<span class="line" style="height:20px">            <span class="atom">exit</span>(-<span class="number" style="color:rgb(222,147,95)">1</span>)</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'checkSum'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">1</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'signature'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'20s'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">2</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'fileSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">3</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'headerSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">4</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'endianTag'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">5</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'linkSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">6</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'linkOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">7</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'mapOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">8</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'stringIdsSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">9</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'stringIdsOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">10</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'typeIdsSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">11</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'typeIdsOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">12</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'protoIdsSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">13</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'protoIdsOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">14</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'fieldIdsSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">15</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'fieldIdsOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">16</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'methodIdsSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">17</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'methodIdsOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">18</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'classDefsSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">19</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'classDefsOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">20</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'dataSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">21</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'dataOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">22</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px"><span class="atom">if</span> <span class="name">__name__</span> == <span class="string" style="color:rgb(181,189,104)">'__main__'</span>:</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">    <span class="atom">with</span> <span class="atom">open</span>(<span class="string" style="color:rgb(181,189,104)">&quot;classes.dex&quot;</span>, <span class="string" style="color:rgb(181,189,104)">'rb'</span>) <span class="atom">as</span> <span class="atom">f</span>:</span>
<span class="line" style="height:20px">        <span class="atom">parseHeader</span>(<span class="atom">f</span>.<span class="atom">read</span>(<span class="number" style="color:rgb(222,147,95)">0x70</span>))</span>
<span class="line" style="height:20px">        <span class="atom">for</span> <span class="atom">x</span> <span class="atom">in</span> <span class="name">DexStruct</span>.<span class="name">DexHeader</span>:</span>
<span class="line" style="height:20px">            <span class="atom">print</span> <span class="atom">x</span>, <span class="atom">hex</span>(<span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="atom">x</span>])</span>
</pre>
</td>
</tr>
</tbody>
</table>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<h3 id="Reference" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
Reference</h3>
<p style="margin-top:0px; margin-bottom:25px"><a target="_blank" href="http://www.ituring.com.cn/book/1131" rel="external" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent">《Android
 软件安全与逆向分析》</a></p>
<p style="margin-top:0px; margin-bottom:25px"><a target="_blank" href="http://www.blogfshare.com/dex-format.html" rel="external" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent">Android安全–Dex文件&#26684;式详解</a></p>
</div>
<div class="post-tags" style="margin-top:40px; text-align:center"><a target="_blank" href="http://kiya-z.github.io/tags/Android-%E5%AE%89%E5%85%A8/" rel="tag" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; display:inline-block; margin-right:10px; font-size:13px; background-color:transparent">#Android
 安全</a>&nbsp;<a target="_blank" href="http://kiya-z.github.io/tags/dex/" rel="tag" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; display:inline-block; margin-right:10px; font-size:13px; background-color:transparent">#dex</a></div>
<br>
<p></p>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何运行 .smali 程序]]></title>
    <link href="http://hanks.xyz/2015/11/17/%E5%A6%82%E4%BD%95%E8%BF%90%E8%A1%8C_.smali_%E7%A8%8B%E5%BA%8F/"/>
    <id>http://hanks.xyz/2015/11/17/如何运行_.smali_程序/</id>
    <published>2015-11-17T03:53:00.000Z</published>
    <updated>2015-12-04T17:20:04.328Z</updated>
    <content type="html"><![CDATA[
<h1 class="post-title" style="margin:0px; padding:0px; line-height:1; text-align:center; word-break:break-word">
<span style="font-size:18px">原文:&nbsp;<a target="_blank" href="http://kiya-z.github.io/2015/11/16/how-to-run-file-ended-with-smali/">http://kiya-z.github.io/2015/11/16/how-to-run-file-ended-with-smali/</a></span></h1>
<h1 class="post-title" style="margin:0px; padding:0px; line-height:1; text-align:center; word-break:break-word">
<span style="font-size:18px"><br>
</span></h1>
<h1 class="post-title" style="font-size:26px; margin:0px; padding:0px; line-height:1; text-align:center; word-break:break-word">
<br>
</h1>
<h1 class="post-title" style="font-size:26px; margin:0px; padding:0px; line-height:1; text-align:center; word-break:break-word">
<br>
如何运行 .smali 程序</h1>
<div class="post-meta" style="font-size:12px; margin:3px 0px 60px; color:rgb(153,153,153); text-align:center">
<span class="post-time">发表于&nbsp;2015-11-16&nbsp;</span><span class="post-category">&nbsp; | &nbsp; 分类于&nbsp;<span><a target="_blank" href="http://kiya-z.github.io/categories/Android/" rel="index" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent"><span>Android</span>&nbsp;</a></span></span><span class="post-comments-count">&nbsp;
 | &nbsp;&nbsp;<a target="_blank" href="http://kiya-z.github.io/2015/11/16/how-to-run-file-ended-with-smali/#comments" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent"><span class="post-comments-count ds-thread-count">暂无评论</span>&nbsp;</a></span><span id="busuanzi_container_page_pv" style="display:inline">&nbsp;
 | &nbsp;&nbsp;<span id="busuanzi_value_page_pv">3</span>&nbsp; Hits</span></div>
<div class="post-body" style="text-align:justify; color:rgb(85,85,85); font-family:Lato,'PingFang SC','Microsoft YaHei',sans-serif; font-size:16px; line-height:32px">
<span></span>
<h2 id="准备_smali_程序" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:20px">
准备 smali 程序</h2>
<a target="_blank" id="more" style="border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent"></a>
<p style="margin-top:0px; margin-bottom:25px">从 《Android 软件安全与逆向》书中抠出一段，起名为&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">FirstSmali.smali</code>&nbsp;：<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
<span class="line" style="height:20px">4</span>
<span class="line" style="height:20px">5</span>
<span class="line" style="height:20px">6</span>
<span class="line" style="height:20px">7</span>
<span class="line" style="height:20px">8</span>
<span class="line" style="height:20px">9</span>
<span class="line" style="height:20px">10</span>
<span class="line" style="height:20px">11</span>
<span class="line" style="height:20px">12</span>
<span class="line" style="height:20px">13</span>
<span class="line" style="height:20px">14</span>
<span class="line" style="height:20px">15</span>
<span class="line" style="height:20px">16</span>
<span class="line" style="height:20px">17</span>
<span class="line" style="height:20px">18</span>
<span class="line" style="height:20px">19</span>
<span class="line" style="height:20px">20</span>
<span class="line" style="height:20px">21</span>
<span class="line" style="height:20px">22</span>
<span class="line" style="height:20px">23</span>
<span class="line" style="height:20px">24</span>
<span class="line" style="height:20px">25</span>
<span class="line" style="height:20px">26</span>
<span class="line" style="height:20px">27</span>
<span class="line" style="height:20px">28</span>
<span class="line" style="height:20px">29</span>
<span class="line" style="height:20px">30</span>
<span class="line" style="height:20px">31</span>
<span class="line" style="height:20px">32</span>
<span class="line" style="height:20px">33</span>
<span class="line" style="height:20px">34</span>
<span class="line" style="height:20px">35</span>
<span class="line" style="height:20px">36</span>
<span class="line" style="height:20px">37</span>
<span class="line" style="height:20px">38</span>
<span class="line" style="height:20px">39</span>
<span class="line" style="height:20px">40</span>
<span class="line" style="height:20px">41</span>
<span class="line" style="height:20px">42</span>
<span class="line" style="height:20px">43</span>
<span class="line" style="height:20px">44</span>
<span class="line" style="height:20px">45</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="keyword" style="color:rgb(178,148,187)">.class</span><span class="keyword" style="color:rgb(178,148,187)"> public</span> <span class="class">LFirstSmali;</span>  <span class="comment" style="color:rgb(150,152,150)"># 定义类名</span></span>
<span class="line" style="height:20px"><span class="keyword" style="color:rgb(178,148,187)">.super</span> <span class="class">Ljava/lang/Object;</span>   <span class="comment" style="color:rgb(150,152,150)"># 定义父类</span></span>
<span class="line" style="height:20px"><span class="keyword" style="color:rgb(178,148,187)">.method</span><span class="keyword" style="color:rgb(178,148,187)"> public</span><span class="keyword" style="color:rgb(178,148,187)"> static</span><span class="function" style="color:rgb(129,162,190)"> main(</span><span class="keyword" style="color:rgb(178,148,187)">[</span><span class="class">Ljava/lang/String;</span><span class="function" style="color:rgb(129,162,190)">)</span>V     <span class="comment" style="color:rgb(150,152,150)"># 声明静态方法</span></span>
<span class="line" style="height:20px"><span class="keyword" style="color:rgb(178,148,187)">    .registers</span> 4     <span class="comment" style="color:rgb(150,152,150)"># 寄存器</span></span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#.parameter      # 参数</span></span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px"><span class="keyword" style="color:rgb(178,148,187)">    .prologue</span>      <span class="comment" style="color:rgb(150,152,150)"># 代码起始</span></span>
<span class="line" style="height:20px">   <span class="instruction"> nop</span>
<span class="line" style="height:20px"></span>   <span class="instruction"> nop</span>
<span class="line" style="height:20px"></span>   <span class="instruction"> nop</span>
<span class="line" style="height:20px"></span>   <span class="instruction"> nop</span>
<span class="line" style="height:20px"></span>    <span class="comment" style="color:rgb(150,152,150)">#数据定义</span></span>
<span class="line" style="height:20px">   <span class="instruction"> const/16 </span><span class="variable" style="color:rgb(204,102,102)">v0</span>,0x8</span>
<span class="line" style="height:20px">   <span class="instruction"> const/4 </span><span class="variable" style="color:rgb(204,102,102)">v1</span>,0x5</span>
<span class="line" style="height:20px">   <span class="instruction"> const/4 </span><span class="variable" style="color:rgb(204,102,102)">v2</span>,0x3</span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#数据操作</span></span>
<span class="line" style="height:20px">   <span class="instruction"> move </span><span class="variable" style="color:rgb(204,102,102)">v1</span>,<span class="variable" style="color:rgb(204,102,102)">v2</span></span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#数组操作</span></span>
<span class="line" style="height:20px">   <span class="instruction"> new-array </span><span class="variable" style="color:rgb(204,102,102)">v0</span>,<span class="variable" style="color:rgb(204,102,102)">v0</span>,<span class="keyword" style="color:rgb(178,148,187)">[</span>I</span>
<span class="line" style="height:20px">   <span class="instruction"> array-length </span><span class="variable" style="color:rgb(204,102,102)">v1</span>,<span class="variable" style="color:rgb(204,102,102)">v0</span></span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#实例操作</span></span>
<span class="line" style="height:20px">   <span class="instruction"> new-instance </span><span class="variable" style="color:rgb(204,102,102)">v1</span>,<span class="class">Ljava/lang/StringBuilder;</span></span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#方法调用</span></span>
<span class="line" style="height:20px">   <span class="instruction"> invoke-direct </span>{<span class="variable" style="color:rgb(204,102,102)">v1</span>},<span class="class">Ljava/lang/StringBuilder;</span><span class="function" style="color:rgb(129,162,190)">-&gt;&lt;init&gt;(</span><span class="function" style="color:rgb(129,162,190)">)</span>V</span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#跳转</span></span>
<span class="line" style="height:20px">   <span class="instruction"> if-nez </span><span class="variable" style="color:rgb(204,102,102)">v0</span>,<span class="keyword" style="color:rgb(178,148,187)"> :cond_0</span></span>
<span class="line" style="height:20px">   <span class="instruction"> goto </span>:goto_0</span>
<span class="line" style="height:20px">   <span class="keyword" style="color:rgb(178,148,187)"> :cond_0</span></span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#数据转换</span></span>
<span class="line" style="height:20px">   <span class="instruction"> int-to-float </span><span class="variable" style="color:rgb(204,102,102)">v2</span>,<span class="variable" style="color:rgb(204,102,102)">v2</span></span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#运算</span></span>
<span class="line" style="height:20px">   <span class="instruction"> add-float </span><span class="variable" style="color:rgb(204,102,102)">v2</span>,<span class="variable" style="color:rgb(204,102,102)">v2</span>,<span class="variable" style="color:rgb(204,102,102)">v2</span></span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#比较</span></span>
<span class="line" style="height:20px">   <span class="instruction"> cmpl-float </span><span class="variable" style="color:rgb(204,102,102)">v0</span>,<span class="variable" style="color:rgb(204,102,102)">v2</span>,<span class="variable" style="color:rgb(204,102,102)">v2</span></span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#字段操作</span></span>
<span class="line" style="height:20px">   <span class="instruction"> sget-object </span><span class="variable" style="color:rgb(204,102,102)">v0</span>,<span class="class">Ljava/lang/System;</span>-&gt;out:<span class="class">Ljava/io/PrintStream;</span></span>
<span class="line" style="height:20px">   <span class="instruction"> const-string </span><span class="variable" style="color:rgb(204,102,102)">v1</span>,<span class="string" style="color:rgb(181,189,104)">&quot;Hello Smali&quot;</span></span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#调用</span></span>
<span class="line" style="height:20px">   <span class="instruction"> invoke-virtual </span>{<span class="variable" style="color:rgb(204,102,102)">v0</span>,<span class="variable" style="color:rgb(204,102,102)">v1</span>}, <span class="class">Ljava/io/PrintStream;</span><span class="function" style="color:rgb(129,162,190)">-&gt;println(</span><span class="class">Ljava/lang/String;</span><span class="function" style="color:rgb(129,162,190)">)</span>V</span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#返回</span></span>
<span class="line" style="height:20px">   <span class="keyword" style="color:rgb(178,148,187)"> :goto_0</span></span>
<span class="line" style="height:20px">   <span class="instruction"> return-void</span>
<span class="line" style="height:20px"></span>   <span class="instruction"> return-void </span>    <span class="comment" style="color:rgb(150,152,150)"># 返回空</span><span class="keyword" style="color:rgb(178,148,187)"></span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">.end method</span></span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<h2 id="编译_smali_程序" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:20px">
编译 smali 程序</h2>
<p style="margin-top:0px; margin-bottom:25px">将&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">.smali</code>&nbsp;文件编译为&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">.dex</code>&nbsp;文件
 :<br>
<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">java -jar smali.jar -o FirstSmali.dex FirstSmali.smali</code></p>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<h2 id="执行_smali_程序" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:20px">
执行 smali 程序</h2>
<p style="margin-top:0px; margin-bottom:25px">打开&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">adb</code>&nbsp;环境，连上手机，在命令行下<br>
执行&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">adb devices</code>&nbsp;查看手机是否连接成功；<br>
执行&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">adb push FirstSmali.dex /sdcard/</code>&nbsp;将 dex 文件推到手机上；<br>
执行如下命令就 OK 了。<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px">adb shell dalvikvm -cp /sdcard/FirstSmali<span class="class">.dex</span> FirstSmali</span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<h3 id="备注" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
备注</h3>
<p style="margin-top:0px; margin-bottom:25px"><code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">-cp</code>&nbsp;是&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">classpath</code>&nbsp;的意思，<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">dalvikvm</code>&nbsp;命令第一个参数指定类路径，第二个指定类名。</p>
<p style="margin-top:0px; margin-bottom:25px">另外，如果想要 push 到如&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">data/local</code>&nbsp;之类的目录下是没有权限的，可以先
 push 到 sdcard，进入&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">adb shell</code>&nbsp;执行&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">su</code>&nbsp;获得
 root 权限之后，就可以复制到&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">data</code>&nbsp;目录了。</p>
<p style="margin-top:0px; margin-bottom:25px">本文程序只有一个 dex 文件，多个的话需要打包为&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">zip</code>&nbsp;，将此 zip
 文件作为&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">dalvikvm</code>&nbsp;的第一个参数便可。</p>
</div>
<div class="post-tags" style="margin-top:40px; text-align:center"><a target="_blank" href="http://kiya-z.github.io/tags/Android-%E5%AE%89%E5%85%A8/" rel="tag" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; display:inline-block; margin-right:10px; font-size:13px; background-color:transparent">#Android
 安全</a>&nbsp;<a target="_blank" href="http://kiya-z.github.io/tags/smali/" rel="tag" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; display:inline-block; margin-right:10px; font-size:13px; background-color:transparent">#smali</a>&nbsp;<a target="_blank" href="http://kiya-z.github.io/tags/%E5%8F%8D%E7%BC%96%E8%AF%91/" rel="tag" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; display:inline-block; margin-right:10px; font-size:13px; background-color:transparent">#反编译</a></div>
<div class="post-nav" style="overflow:hidden; margin-top:60px; padding:10px; white-space:nowrap; border-top-width:1px; border-top-style:solid; border-top-color:rgb(238,238,238)">
<h1 class="post-title" style="color:rgb(85,85,85); font-family:Lato,'PingFang SC','Microsoft YaHei',sans-serif; margin:0px; padding:0px; line-height:1; text-align:center; word-break:break-word">
<span style="font-size:18px">原文:&nbsp;<a target="_blank" href="http://kiya-z.github.io/2015/11/16/how-to-run-file-ended-with-smali/">http://kiya-z.github.io/2015/11/16/how-to-run-file-ended-with-smali/</a></span></h1>
<div><br>
</div>
<div><br>
</div>
<div><br>
</div>
<div class="post-nav-next post-nav-item" style="display:inline-block; width:440px; white-space:normal">
<a target="_blank" href="http://kiya-z.github.io/2015/11/12/check-signature-for-avoiding-fake-app-java-level-check/" rel="next" title="校验数字签名防止 apk 被二次打包 - Java层校验（大众点评为例）" style="color:rgb(85,85,85); text-decoration:none; border-bottom-style:none; word-wrap:break-word; position:relative; display:inline-block; line-height:25px; font-size:14px; background-color:transparent"><span class="fa fa-chevron-left" style=""></span></a></div>
</div>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[校验数字签名防止 apk 被二次打包 - Java层校验（大众点评为例）]]></title>
    <link href="http://hanks.xyz/2015/11/17/%E6%A0%A1%E9%AA%8C%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E9%98%B2%E6%AD%A2_apk_%E8%A2%AB%E4%BA%8C%E6%AC%A1%E6%89%93%E5%8C%85_-_Java%E5%B1%82%E6%A0%A1%E9%AA%8C%EF%BC%88%E5%A4%A7%E4%BC%97%E7%82%B9%E8%AF%84%E4%B8%BA%E4%BE%8B%EF%BC%89/"/>
    <id>http://hanks.xyz/2015/11/17/校验数字签名防止_apk_被二次打包_-_Java层校验（大众点评为例）/</id>
    <published>2015-11-17T03:51:00.000Z</published>
    <updated>2015-12-04T17:20:04.332Z</updated>
    <content type="html"><![CDATA[
<div class="post-body" style="text-align:justify; color:rgb(85,85,85); font-family:Lato,'PingFang SC','Microsoft YaHei',sans-serif; font-size:16px; line-height:32px">
<span></span>
<blockquote style="margin:0px; padding:0px 15px; color:rgb(102,102,102); border-left-width:4px; border-left-style:solid; border-left-color:rgb(221,221,221)">
<p style="margin-top:0px; margin-bottom:25px">原文链接: &nbsp;http://kiya-z.github.io/2015/11/12/check-signature-for-avoiding-fake-app-java-level-check/<br>
测试环境<br>
Ubuntu 14.04<br>
Lenovo Android 5.1<br>
Lenovo Android 4.2.2<br>
Android Studio</p>
</blockquote>
<a target="_blank" id="more" style="border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent"></a>
<h2 id="普及签名包名知识" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:20px">
普及签名包名知识</h2>
<p style="margin-top:0px; margin-bottom:25px">包名 (Package Name) 相当于「应用的身份证」，是系统用来<strong>区分不同应用</strong>的字段，重复的包名会被认为是同一款应用。<br>
签名文件相当于「开发者的身份证」，目的是为了<strong>检验应用是否被人更改过</strong>（应用必须签名过才能正常安装）。</p>
<p style="margin-top:0px; margin-bottom:25px">包名相同签名相同时，会发生 替换安装 / 应用升级；<br>
包名相同签名不同时，安装失败；<br>
包名不同签名相同时，相当于同一开发者的两个应用，互相不冲突。</p>
<blockquote style="margin:0px; padding:0px 15px; color:rgb(102,102,102); border-left-width:4px; border-left-style:solid; border-left-color:rgb(221,221,221)">
<p style="margin-top:0px; margin-bottom:25px">签名的注意事项<br>
所有的Android应用都必须有数字签名，没有不存在数字签名的应用，包括模拟器上运行的。Android系统不会安装没有数字证书的应用。<br>
签名的数字证书不需要权威机构来认证，是开发者自己产生的数字证书，即所谓的自签名。<br>
正式发布一个Android应用时，必须使用一个合适的私钥生成的数字证书来给程序签名，不能使用ADT插件或者ANT工具生成的调试证书来发布。<br>
Android将数字证书用来标识应用程序的作者和在应用程序之间建立信任关系，而不是用来决定最终用户可以安装哪些应用程序。</p>
</blockquote>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<h2 id="为大众点评换签名" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:20px">
为大众点评换签名</h2>
<p style="margin-top:0px; margin-bottom:25px">按照常规步骤使用&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">apktool</code>&nbsp;&#43;&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">signapk</code>&nbsp;反编译、编译、签名并安装到手机上（没有修改任何代码），打开
 app 选择城市后界面如下图并很快退出：</p>
<p style="margin-top:0px; margin-bottom:25px"><a target="_blank" href="http://7xo976.com1.z0.glb.clouddn.com/images/github-io/Android/dianping-crash.jpeg-style1" class="fancybox" rel="group" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent"><img src="http://7xo976.com1.z0.glb.clouddn.com/images/github-io/Android/dianping-crash.jpeg-style1" alt="dianping-crash" style="border:1px solid rgb(221,221,221); display:block!important; margin:0px auto; max-width:100%; height:auto; padding:3px"></a></p>
<p style="margin-top:0px; margin-bottom:25px">说明点评对签名进行了校验 。</p>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<h2 id="分析校验方法" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:20px">
分析校验方法</h2>
<h3 id="怎么退出的？" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
怎么退出的？</h3>
<p style="margin-top:0px; margin-bottom:25px">打开 apktool 反编译得到的文件夹下的&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">AndroidManifest.xml</code>&nbsp;，得到程序包名：<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">com.dianping.v1</code>&nbsp;。<br>
清除大众点评的数据，打开 as，连上手机，log 的过滤条件设为 com.dianping ，在选择城市之前清一下 log ，在 log 里搜索 “die”，比较明显的是有四处：</p>
<p style="margin-top:0px; margin-bottom:25px">进程死亡：<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px">Process com<span class="class">.dianping</span><span class="class">.v1</span> (pid <span class="number" style="color:rgb(222,147,95)">19182</span>) has died</span>
<span class="line" style="height:20px">Process com<span class="class">.dianping</span><span class="class">.v1</span> (pid <span class="number" style="color:rgb(222,147,95)">19586</span>) has died</span>
<span class="line" style="height:20px">Process com<span class="class">.dianping</span><span class="class">.v1</span> (pid <span class="number" style="color:rgb(222,147,95)">19650</span>) has died</span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<p style="margin-top:0px; margin-bottom:25px">app 死亡：<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px">Force removing ActivityRecord{<span class="number" style="color:rgb(222,147,95)">266</span>e5efd u0 com.dianping.v1/.NovaMainActivity t14010}: app died, no saved <span class="keyword" style="color:rgb(178,148,187)">state</span></span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<p style="margin-top:0px; margin-bottom:25px">其中前两个进程死亡之后都有开启进程的操作，说明第一次校验失败后重试了两次：<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="string" style="color:rgb(181,189,104)">startProcess:</span> name=com.dianping.v1 app=<span class="literal" style="color:rgb(222,147,95)">null</span> knownToBeDead=<span class="literal" style="color:rgb(222,147,95)">true</span> thread=<span class="literal" style="color:rgb(222,147,95)">null</span> pid=-<span class="number" style="color:rgb(222,147,95)">1</span></span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="string" style="color:rgb(181,189,104)">startProcess:</span> name=com.dianping.v1 app=<span class="literal" style="color:rgb(222,147,95)">null</span> knownToBeDead=<span class="literal" style="color:rgb(222,147,95)">true</span> thread=<span class="literal" style="color:rgb(222,147,95)">null</span> pid=-<span class="number" style="color:rgb(222,147,95)">1</span></span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px">最后一个直接杀死了 app，没有再继续创建进程。</p>
<p style="margin-top:0px; margin-bottom:25px">在进程结束之前，发生错误的调用记录：<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
<span class="line" style="height:20px">4</span>
<span class="line" style="height:20px">5</span>
<span class="line" style="height:20px">6</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="number" style="color:rgb(222,147,95)">9586</span>-<span class="number" style="color:rgb(222,147,95)">19586</span>/? D/AccessibilityManager:     at com.dianping.base.app.NovaActivity.setContentView(NovaActivity.java:<span class="number" style="color:rgb(222,147,95)">722</span>)</span>
<span class="line" style="height:20px"> <span class="number" style="color:rgb(222,147,95)">9586</span>-<span class="number" style="color:rgb(222,147,95)">19586</span>/? D/AccessibilityManager:     at com.dianping.main.guide.MainActivity.setOnContentView(MainActivity.java:<span class="number" style="color:rgb(222,147,95)">339</span>)</span>
<span class="line" style="height:20px"> <span class="number" style="color:rgb(222,147,95)">9586</span>-<span class="number" style="color:rgb(222,147,95)">19586</span>/? D/AccessibilityManager:     at com.dianping.base.basic.FragmentTabActivity.onCreate(FragmentTabActivity.java:<span class="number" style="color:rgb(222,147,95)">51</span>)</span>
<span class="line" style="height:20px"> <span class="number" style="color:rgb(222,147,95)">9586</span>-<span class="number" style="color:rgb(222,147,95)">19586</span>/? D/AccessibilityManager:     at com.dianping.base.widget.NovaFragmentTabActivity.onCreate(NovaFragmentTabActivity.java:<span class="number" style="color:rgb(222,147,95)">26</span>)</span>
<span class="line" style="height:20px"> <span class="number" style="color:rgb(222,147,95)">9586</span>-<span class="number" style="color:rgb(222,147,95)">19586</span>/? D/AccessibilityManager:     at com.dianping.main.guide.MainActivity.onCreate(MainActivity.java:<span class="number" style="color:rgb(222,147,95)">169</span>)</span>
<span class="line" style="height:20px"> <span class="number" style="color:rgb(222,147,95)">9586</span>-<span class="number" style="color:rgb(222,147,95)">19586</span>/? D/AccessibilityManager:     at com.dianping.v1.NovaMainActivity.onCreate(NovaMainActivity.java:<span class="number" style="color:rgb(222,147,95)">15</span>)</span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<h3 id="代码探索" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
代码探索</h3>
<p style="margin-top:0px; margin-bottom:25px">解压 apk 文件，发现有 3 个 dex 文件，先拿第一个下手，JD-GUI 打开发现代码没有混淆！</p>
<p style="margin-top:0px; margin-bottom:25px">调用记录中的文件从上往下过一遍，发现在&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">com.dianping.main.guide.MainActivity.onCreate()</code>&nbsp;方法中有校验签名的函数：<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="keyword" style="color:rgb(178,148,187)">if</span> <span class="comment" style="color:rgb(150,152,150)">(!checkSignature()</span>) {    </span>
<span class="line" style="height:20px">      Process.killProcess<span class="comment" style="color:rgb(150,152,150)">(Process.myPid()</span>);</span>
<span class="line" style="height:20px">    }</span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<p style="margin-top:0px; margin-bottom:25px"><code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">checkSignature</code>&nbsp;函数：<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
<span class="line" style="height:20px">4</span>
<span class="line" style="height:20px">5</span>
<span class="line" style="height:20px">6</span>
<span class="line" style="height:20px">7</span>
<span class="line" style="height:20px">8</span>
<span class="line" style="height:20px">9</span>
<span class="line" style="height:20px">10</span>
<span class="line" style="height:20px">11</span>
<span class="line" style="height:20px">12</span>
<span class="line" style="height:20px">13</span>
<span class="line" style="height:20px">14</span>
<span class="line" style="height:20px">15</span>
<span class="line" style="height:20px">16</span>
<span class="line" style="height:20px">17</span>
<span class="line" style="height:20px">18</span>
<span class="line" style="height:20px">19</span>
<span class="line" style="height:20px">20</span>
<span class="line" style="height:20px">21</span>
<span class="line" style="height:20px">22</span>
<span class="line" style="height:20px">23</span>
<span class="line" style="height:20px">24</span>
<span class="line" style="height:20px">25</span>
<span class="line" style="height:20px">26</span>
<span class="line" style="height:20px">27</span>
<span class="line" style="height:20px">28</span>
<span class="line" style="height:20px">29</span>
<span class="line" style="height:20px">30</span>
<span class="line" style="height:20px">31</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="function" style="color:rgb(129,162,190)"><span class="keyword" style="color:rgb(178,148,187)">private</span> boolean <span class="title" style="color:rgb(138,190,183)">checkSignature</span><span class="params" style="color:rgb(222,147,95)">()</span></span>
<span class="line" style="height:20px"></span>{</span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">try</span></span>
<span class="line" style="height:20px"> {</span>
<span class="line" style="height:20px">   Signature[] arrayOfSignature = getPackageManager().getPackageInfo(getPackageName(), <span class="number" style="color:rgb(222,147,95)">64</span>).signatures;     <span class="comment" style="color:rgb(150,152,150)">//获得签名数组</span></span>
<span class="line" style="height:20px">   <span class="keyword" style="color:rgb(178,148,187)">if</span> (arrayOfSignature != null)</span>
<span class="line" style="height:20px">   {</span>
<span class="line" style="height:20px">     <span class="keyword" style="color:rgb(178,148,187)">if</span> (arrayOfSignature.length == <span class="number" style="color:rgb(222,147,95)">0</span>) {</span>
<span class="line" style="height:20px">       <span class="keyword" style="color:rgb(178,148,187)">return</span> <span class="literal" style="color:rgb(222,147,95)">false</span>;</span>
<span class="line" style="height:20px">     }</span>
<span class="line" style="height:20px">     <span class="keyword" style="color:rgb(178,148,187)">int</span> j = arrayOfSignature.length;</span>
<span class="line" style="height:20px">     <span class="keyword" style="color:rgb(178,148,187)">int</span> i = <span class="number" style="color:rgb(222,147,95)">0</span>;</span>
<span class="line" style="height:20px">     <span class="keyword" style="color:rgb(178,148,187)">while</span> (i &lt; j)   <span class="comment" style="color:rgb(150,152,150)">//如果数组中的某个元素&#20540;与 'ac6fc3fe' 相等，返回校验成功；如果直到结束也没有相等的元素，返回失败</span></span>
<span class="line" style="height:20px">     {               <span class="comment" style="color:rgb(150,152,150)">//只比较一个特定的元素，可能也是为了不把整个签名泄露出来，同时也做到了一定程度的校验</span></span>
<span class="line" style="height:20px">       String str = Integer.toHexString(arrayOfSignature[i].toCharsString().hashCode());</span>
<span class="line" style="height:20px">       <span class="keyword" style="color:rgb(178,148,187)">if</span> (!<span class="string" style="color:rgb(181,189,104)">&quot;ac6fc3fe&quot;</span>.equalsIgnoreCase(str))   </span>
<span class="line" style="height:20px">       {</span>
<span class="line" style="height:20px">         boolean <span class="keyword" style="color:rgb(178,148,187)">bool</span> = <span class="string" style="color:rgb(181,189,104)">&quot;600cf559&quot;</span>.equalsIgnoreCase(str);       <span class="comment" style="color:rgb(150,152,150)">//这个比较好像没用</span></span>
<span class="line" style="height:20px">         <span class="keyword" style="color:rgb(178,148,187)">if</span> (!<span class="keyword" style="color:rgb(178,148,187)">bool</span>) {}</span>
<span class="line" style="height:20px">       }</span>
<span class="line" style="height:20px">       <span class="keyword" style="color:rgb(178,148,187)">else</span></span>
<span class="line" style="height:20px">       {</span>
<span class="line" style="height:20px">         <span class="keyword" style="color:rgb(178,148,187)">return</span> <span class="literal" style="color:rgb(222,147,95)">true</span>;</span>
<span class="line" style="height:20px">       }</span>
<span class="line" style="height:20px">       i &#43;= <span class="number" style="color:rgb(222,147,95)">1</span>;</span>
<span class="line" style="height:20px">     }</span>
<span class="line" style="height:20px">   }</span>
<span class="line" style="height:20px">   <span class="keyword" style="color:rgb(178,148,187)">return</span> <span class="literal" style="color:rgb(222,147,95)">false</span>;</span>
<span class="line" style="height:20px"> }</span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">catch</span> (Exception localException) {}</span>
<span class="line" style="height:20px">}</span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<p style="margin-top:0px; margin-bottom:25px">相关 API：</p>
<p style="margin-top:0px; margin-bottom:25px"><code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">public Signature[] signatures</code><br>
Array of all signatures read from the package file. This is only filled in if the flag GET_SIGNATURES was set.</p>
<p style="margin-top:0px; margin-bottom:25px"><code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">public static final int GET_SIGNATURES</code><br>
PackageInfo flag: return information about the signatures included in the package.<br>
Constant Value: 64 (0x00000040)</p>
<p style="margin-top:0px; margin-bottom:25px"><code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">public boolean equalsIgnoreCase (String string)</code><br>
Compares the given string to this string ignoring case.<br>
The strings are compared one char at a time.</p>
<h3 id="流程修改" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
流程修改</h3>
<p style="margin-top:0px; margin-bottom:25px">在&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">smali/com/dianping/main/guide/MainActivity.smali</code>&nbsp;中搜索&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">ac6fc3fe</code>&nbsp;:<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
<span class="line" style="height:20px">4</span>
<span class="line" style="height:20px">5</span>
<span class="line" style="height:20px">6</span>
<span class="line" style="height:20px">7</span>
<span class="line" style="height:20px">8</span>
<span class="line" style="height:20px">9</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="keyword" style="color:rgb(178,148,187)">.line</span> 358</span>
<span class="line" style="height:20px"><span class="keyword" style="color:rgb(178,148,187)">    .local</span> <span class="variable" style="color:rgb(204,102,102)">v4</span>, <span class="string" style="color:rgb(181,189,104)">&quot;myHash&quot;</span>:<span class="class">Ljava/lang/String;</span></span>
<span class="line" style="height:20px">   <span class="instruction"> const-string </span><span class="variable" style="color:rgb(204,102,102)">v9</span>, <span class="string" style="color:rgb(181,189,104)">&quot;ac6fc3fe&quot;</span></span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">   <span class="instruction"> invoke-virtual </span>{<span class="variable" style="color:rgb(204,102,102)">v9</span>, <span class="variable" style="color:rgb(204,102,102)">v4</span>}, <span class="class">Ljava/lang/String;</span><span class="function" style="color:rgb(129,162,190)">-&gt;equalsIgnoreCase(</span><span class="class">Ljava/lang/String;</span><span class="function" style="color:rgb(129,162,190)">)</span>Z</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">   <span class="instruction"> move-result </span><span class="variable" style="color:rgb(204,102,102)">v9</span></span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">   <span class="instruction"> if-nez </span><span class="variable" style="color:rgb(204,102,102)">v9</span>,<span class="keyword" style="color:rgb(178,148,187)"> :cond_2</span>     <span class="function" style="color:rgb(129,162,190)"> //if(</span>!equal(..<span class="function" style="color:rgb(129,162,190)">)</span><span class="function" style="color:rgb(129,162,190)">)</span><span class="instruction"> return </span>1</span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<p style="margin-top:0px; margin-bottom:25px">找到&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">con_2</code>&nbsp;的定义:<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
<span class="line" style="height:20px">4</span>
<span class="line" style="height:20px">5</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="keyword" style="color:rgb(178,148,187)">.line</span> 359<span class="keyword" style="color:rgb(178,148,187)"></span>
<span class="line" style="height:20px">:cond_2</span><span class="instruction"></span>
<span class="line" style="height:20px">const/4 </span><span class="variable" style="color:rgb(204,102,102)">v8</span>, 0x1</span>
<span class="line" style="height:20px"><span class="instruction"></span>
<span class="line" style="height:20px">goto </span>:goto_0</span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="symbol">:goto_0</span></span>
<span class="line" style="height:20px">    <span class="keyword" style="color:rgb(178,148,187)">return</span> v8</span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px">所以把&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">if-nez v9, :cond_2</code>&nbsp;改成&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">if-eqz
 v9, :cond_2</code>&nbsp;就可以了，当然，修改方法还有很多。</p>
<h3 id="打包签名" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
打包签名</h3>
<p style="margin-top:0px; margin-bottom:25px">点评可以正常打开，正常登录，正常使用了。</p>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<blockquote style="margin:0px; padding:0px 15px; color:rgb(102,102,102); border-left-width:4px; border-left-style:solid; border-left-color:rgb(221,221,221)">
<p style="margin-top:0px; margin-bottom:25px">番外：<br>
而另一台手机 (Lenovo Android 4.2.2) 测试进程会不断重新创建。<br>
应用 crash 之后 App 对应的 Process 都被杀死，然后安排重启 Service，重新启动 Task 栈顶的 Activity 。</p>
</blockquote>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<h2 id="Reference" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:20px">
Reference</h2>
<p style="margin-top:0px; margin-bottom:25px"><a target="_blank" href="http://www.ituring.com.cn/book/1131" rel="external" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent">Android软件安全与逆向分析</a><br>
<a target="_blank" href="http://www.wandoujia.com/blog/xibaibai-diary-3" rel="external" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent">洗白白手记：绕开
 Android 应用开发的那些「坑」</a><br>
<a target="_blank" href="http://www.oschina.net/question/163910_27292#tags_nav" rel="external" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent">给
 Android 应用程序签名</a></p>
</div>
<div class="post-tags" style="margin-top:40px; text-align:center"><a target="_blank" href="http://kiya-z.github.io/tags/Android-%E5%AE%89%E5%85%A8/" rel="tag" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; display:inline-block; margin-right:10px; font-size:13px; background-color:transparent">#Android
 安全</a>&nbsp;<a target="_blank" href="http://kiya-z.github.io/tags/%E5%8F%8D%E7%BC%96%E8%AF%91/" rel="tag" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; display:inline-block; margin-right:10px; font-size:13px; background-color:transparent">#反编译</a></div>
<div class="post-tags" style="margin-top:40px; text-align:center"><span style="color:rgb(102,102,102); font-family:Lato,'PingFang SC','Microsoft YaHei',sans-serif; font-size:16px; line-height:32px; text-align:justify">原文链接:
<a target="_blank" href="http://kiya-z.github.io/2015/11/12/check-signature-for-avoiding-fake-app-java-level-check/">
&nbsp;</a></span><span style="color:rgb(102,102,102); font-family:Lato,'PingFang SC','Microsoft YaHei',sans-serif; font-size:16px; line-height:32px; text-align:justify"><a target="_blank" href="http://kiya-z.github.io/2015/11/12/check-signature-for-avoiding-fake-app-java-level-check/">http://kiya-z.github.io/2015/11/12/check-signature-for-avoiding-fake-app-java-level-check/</a></span><br>
</div>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[抓包工具整理]]></title>
    <link href="http://hanks.xyz/2015/11/02/capture/"/>
    <id>http://hanks.xyz/2015/11/02/capture/</id>
    <published>2015-11-02T08:36:49.000Z</published>
    <updated>2015-12-02T09:29:32.138Z</updated>
    <content type="html"><![CDATA[<p><a href="https://github.com/hanks-zyh/capturedata" target="_blank" rel="external">github 地址</a></p>
<blockquote>
<p>抓包工具整理</p>
</blockquote>
<h1 id="抓包工具_–_Charles">抓包工具 – Charles</h1><p>基于Java 跨平台： Linux , Mac OS X, Windows<br><a href="https://www.charlesproxy.com/" target="_blank" rel="external">官网</a></p>
<blockquote>
<p>Charles is an HTTP proxy / HTTP monitor / Reverse Proxy that enables a developer to view all of the HTTP and SSL / HTTPS traffic between their machine and the Internet. This includes requests, responses and the HTTP headers (which contain the cookies and caching information).</p>
</blockquote>
<p><img src="https://www.charlesproxy.com/assets/img/sm/23/image/mac_screen_321.png?k=f28bf8eff3" alt=""></p>
<hr>
<a id="more"></a>
<p><strong>以下为Linux 平台</strong></p>
<h2 id="安装">安装</h2><p><a href="https://www.charlesproxy.com/latest-release/download.do" target="_blank" rel="external">下载 charles-proxy-3.11.2.tar.gz</a></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># 解压</span></span><br><span class="line">tar zxvf charles-proxy-<span class="number">3.11</span><span class="number">.2</span>.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 启动 charles</span></span><br><span class="line">./charles/bin/charles</span><br></pre></td></tr></table></figure>
<h2 id="手机抓包">手机抓包</h2><p><strong>前提：使手机和电脑在一个局域网内，不一定非要是一个ip段，只要是同一个路由下就可以了，比如电脑连接的有线网ip为192.168.16.12，然后手机链接的wifi ip为192.168.1.103，但是这个有线网和无线网的最终都是来自于一个外部ip，这样的话也是可以的。</strong></p>
<p>在安卓手机的 <code>设置 -&gt; wlan -&gt; 长按连接的wifi -&gt; 修改网络 -&gt;  高级选项 -&gt; 代理选手动</code> ， 填入电脑的 ip 和 charles 监听的 端口（默认为 8888）</p>
<blockquote>
<p>查看电脑端口 ： <code>ifconfig</code><br>查看/修改 charles 监听端口： charles的 <code>Proxy -&gt; Proxy Setting</code></p>
</blockquote>
<p>设置好之后Charles弹出确认框，点击Allow按钮即可</p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/ad193bbb-4d55-4feb-9e55-0634aa6dbfce.png" alt="图片"></p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/c48ee820-f6ae-4814-b505-ff4870db1f5b.png" alt="图片"></p>
<h2 id="抓取_https">抓取 https</h2><p> <img src="https://dn-coding-net-production-pp.qbox.me/027d34d1-c783-4aca-8db3-e0066bf4ca1b.png" alt="图片"></p>
<h3 id="安装证书">安装证书</h3><p>charles的 Help -&gt; SSL Proxy -&gt; Install charles Root</p>
<h3 id="设置_ssl_enable">设置 ssl enable</h3><p>在需要抓取的 https 链接上 右键 <code>enable ssl proxy</code><br><img src="https://dn-coding-net-production-pp.qbox.me/4b91cf2a-e35b-4b9b-96ac-047eafe607e6.png" alt="图片"></p>
<p>参考 <a href="http://drops.wooyun.org/tips/2423" target="_blank" rel="external">charles使用教程指南</a></p>
<h1 id="抓包工具_–_mitmproxy">抓包工具 – mitmproxy</h1><p>基于python 跨平台： linux, windows，    OSX (Mountain Lion and later)<br><a href="https://mitmproxy.org/" target="_blank" rel="external">官网</a></p>
<blockquote>
<p>Mitmproxy是一个基于python的中间人代理的框架。做过渗透测试的肯定很熟悉工具burpsuite或Fiddler，这些工具能够拦截并修改http或https的数据包，对于分析数据包交互的应用来说是非常有用的。但是这些工具都是整套给我们做好了。比如如果想自己定制一套这样的工具，添加一些自己需要的功能的话，那么我想，mitmproxy将是一个比较好的选择，因为它提供了一个可供用户调用的库libmproxy（注意该库目前只支持linux系统）。</p>
</blockquote>
<p><img src="https://dn-coding-net-production-pp.qbox.me/a2d09a30-ea72-42a1-818e-0982f7227784.png" alt="图片"></p>
<p><img src="https://dn-coding-net-production-pp.qbox.me/85e1f4e1-c914-4ac1-9984-4492aad7096f.png" alt="图片"></p>
<p><img src="https://dn-coding-net-production-pp.qbox.me/6992699a-cb21-44b7-9114-38d1b10f0272.png" alt="图片"></p>
<hr>
<p><strong>以下基于Linux台（Ubuntu14.04）</strong></p>
<h2 id="下载">下载</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pip <span class="keyword">install</span> mitmproxy</span><br></pre></td></tr></table></figure>
<p>如果下载速度慢可以下载<a href="https://mitmproxy.org/download/mitmproxy-0.14.0.tar.gz" target="_blank" rel="external">tar包</a></p>
<h2 id="启动">启动</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mitmproxy -b <span class="number">192.168</span><span class="number">.1</span><span class="number">.29</span> -p <span class="number">9999</span></span><br></pre></td></tr></table></figure>
<p>输入 <code>？</code> 查看帮助， <code>q</code>返回<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">A      accept all intercepted flows</span><br><span class="line">a      accept this intercepted flow</span><br><span class="line">b      save request/response body</span><br><span class="line">C      clear flow list or eventlog</span><br><span class="line">d      <span class="operator"><span class="keyword">delete</span> flow</span><br><span class="line"><span class="keyword">D</span>      <span class="keyword">duplicate</span> flow</span><br><span class="line"><span class="keyword">e</span>      toggle eventlog</span><br><span class="line"><span class="keyword">F</span>      toggle follow flow <span class="keyword">list</span></span><br><span class="line"><span class="keyword">l</span>      <span class="keyword">set</span> <span class="keyword">limit</span> filter pattern</span><br><span class="line"><span class="keyword">L</span>      <span class="keyword">load</span> saved flows</span><br><span class="line"><span class="keyword">m</span>      toggle flow mark</span><br><span class="line"><span class="keyword">n</span>      <span class="keyword">create</span> a <span class="keyword">new</span> request</span><br><span class="line"><span class="keyword">P</span>      copy flow <span class="keyword">to</span> clipboard</span><br><span class="line">r      replay request</span><br><span class="line">U      unmark all marked flows</span><br><span class="line">V      revert changes <span class="keyword">to</span> request</span><br><span class="line">w      <span class="keyword">save</span> flows</span><br><span class="line">W      stream flows <span class="keyword">to</span> <span class="keyword">file</span></span><br><span class="line">X      <span class="keyword">kill</span> <span class="keyword">and</span> <span class="keyword">delete</span> flow, even <span class="keyword">if</span> it<span class="string">'s mid-intercept</span><br><span class="line">tab    tab between eventlog and flow list</span><br><span class="line">enter  view flow</span><br><span class="line">|      run script on this flow</span></span></span><br></pre></td></tr></table></figure></p>
<p>手机设置好代理，界面上就可以看到请求了<br><img src="https://dn-coding-net-production-pp.qbox.me/c5446754-1d45-4d7d-ba48-44b6e26d3b4f.png" alt="图片"></p>
<h2 id="mitmproxy_查看http请求响应">mitmproxy 查看http请求响应</h2><p><code>C (大写)</code> 清除抓包结果</p>
<p><code>j</code>  <code>k</code> 选择请求， 回车查看详细信息</p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/5cfa3fd1-879b-4db6-8f05-f8885d730964.png" alt="图片"></p>
<p><code>tab</code>   切换 <strong>Request</strong> 和 <strong>Response</strong></p>
<p><code>m</code> Display Mode 美化信息<br> <img src="https://dn-coding-net-production-pp.qbox.me/70e7c4ad-f7c0-4e7a-bea6-2c4cdd36d50b.png" alt="图片"><br> 上图输入 m，在输入 s，便可以以json形式展示</p>
<p><code>e</code> 编辑<br>Edit request (cookies,query,path,url,header,form,raw body,method)?<br>Edit response (cookies,code,message,header,raw body)?</p>
<h3 id="mitmproxy拦截_(Intercept)">mitmproxy拦截 (Intercept)</h3><p>相当于在客户端和服务器做中间人，可以修改客户端请求，修改服务器返回</p>
<p>输入 <code>i</code>（代表Intercept filter）即可，此时界面便会让你输入想要拦截的条件：</p>
<p>mitmproxy的条件拦截在默认情况下是过滤抓包的URL的。也就是说当你直接输入要拦截的条件（比如输入“weibo”），那么接下来要出现抓包会将匹配的抓包整体变黄：</p>
<p>mitmproxy条件过滤效果<br>mitmproxy条件拦截效果<br>这些橘黄色的数据包都代表被拦截了，还未发送给服务器，这个时候你就可以对这些数据包进行修改，我们选择一个数据包enter进入：</p>
<p>mitmproxy 拦截 选择数据包<br>与之前的类似，输入“e”，进行request编辑模式，然后输入“h”代表要编辑request的头部:</p>
<p>mitmproxy 编辑拦截包的头部<br>输入enter便可对高亮的User-Agent的值进行修改，上图的weibo版本之前是5.0的，被我改成了6.0 。我们还可以对header进行添加属性，输入“a”即可，然后使用tab分别键入key和value。这里我添加了“test－test”键值对：</p>
<p>mitmproxy 拦截header添加键值对<br>至此，我对拦截的request header已经修改完毕，现在要做的就是我要认可接受这个修改，然后发给服务器。所以我们输入“a”（代表“accept”）即可，等到服务器响应后，注意，mitmproxy便又了拦截服务器发过来的response（注意那个“Response intercepted”）：</p>
<p>mitmproxy 拦截response<br>现在如果你想修改这个response也可以，方式同上面修改request一样。这个时候我再输入“a”，代表我接受了这个response，然后这个response便可发给客户端了:</p>
<p>mitmproxy 拦截response之后accept</p>
<p>更多类型的mitmproxy拦截</p>
<p>同时mitmproxy还支持不同类型的条件过滤，之前在拦截字符串前面加上特定的参数比如我要拦截所有的POST request怎么办？输入：~m POST 即可（m代表method）：</p>
<p>mitmproxy 拦截特定的request 方法</p>
<p>拦截所有的request： ~q</p>
<p>拦截特定的header： ~h</p>
<p>拦截特定的domain： ~d</p>
<p>拦截特定的响应代码（404之类的）： ~c</p>
<p>mitmproxy官方文档。</p>
<hr>
<h1 id="抓包工具_–_Fiddler">抓包工具 – Fiddler</h1><p>基于C#  windows, Linux看这里 <a href="http://fiddler.wikidot.com/mono" target="_blank" rel="external">Mono Fiddler</a></p>
<hr>
<h2 id="下载-1">下载</h2><p>直接下载，安装即可</p>
<h2 id="手机抓包-1">手机抓包</h2><p><img src="https://imququ.com/static/uploads/2013/09/Snip20130913_20.png.webp" alt=""></p>
<hr>
<h1 id="抓包工具_–_wireshark">抓包工具 – wireshark</h1><p>跨平台：Windows，OS X ，Linux</p>
<p><a href="https://www.wireshark.org/" target="_blank" rel="external">官网</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://github.com/hanks-zyh/capturedata">github 地址</a></p>
<blockquote>
<p>抓包工具整理</p>
</blockquote>
<h1 id="抓包工具_–_Charles">抓包工具 – Charles</h1><p>基于Java 跨平台： Linux , Mac OS X, Windows<br><a href="https://www.charlesproxy.com/">官网</a></p>
<blockquote>
<p>Charles is an HTTP proxy / HTTP monitor / Reverse Proxy that enables a developer to view all of the HTTP and SSL / HTTPS traffic between their machine and the Internet. This includes requests, responses and the HTTP headers (which contain the cookies and caching information).</p>
</blockquote>
<p><img src="https://www.charlesproxy.com/assets/img/sm/23/image/mac_screen_321.png?k=f28bf8eff3" alt=""></p>
<hr>]]>
    
    </summary>
    
      <category term="必备知识" scheme="http://hanks.xyz/tags/%E5%BF%85%E5%A4%87%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[利用ADB 来进行无线调试]]></title>
    <link href="http://hanks.xyz/2015/11/01/adb-wifi/"/>
    <id>http://hanks.xyz/2015/11/01/adb-wifi/</id>
    <published>2015-11-01T14:28:34.000Z</published>
    <updated>2015-12-02T08:33:27.929Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>通过wifi连接进行 adb 调试, 也是插件 <strong><a href="https://github.com/pedrovgs/AndroidWiFiADB" target="_blank" rel="external">AndroidWiFiADB</a></strong> 的原理</p>
<p>前提: 电脑和手机在同一局域网下</p>
</blockquote>
<h3 id="adb_connect_命令">adb connect 命令</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb connect &lt;host&gt;[<span class="symbol">:&lt;port&gt;</span>]</span><br></pre></td></tr></table></figure>
<ol>
<li><p>通过USB线连接电脑</p>
</li>
<li><p>查看 <code>adb</code> 连接的设备列表</p>
</li>
</ol>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ adb devices -l</span><br><span class="line"></span><br><span class="line">List of devices attached</span><br><span class="line"><span class="number">005</span>deabe1919a90b       device <span class="string">usb:</span><span class="number">1</span>-<span class="number">2</span> <span class="string">product:</span>occam <span class="string">model:</span>Nexus_4 <span class="string">device:</span>mako</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<ol>
<li>重置 TCP端口</li>
</ol>
<figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ adb tcpip <span class="number">5555</span></span><br><span class="line"></span><br><span class="line"><span class="title">restarting</span> <span class="keyword">in</span> <span class="type">TCP</span> mode <span class="foreign"><span class="keyword">port</span>: 5555</span></span><br></pre></td></tr></table></figure>
<ol>
<li>查看手机设备的 ip</li>
</ol>
<p>设置 -&gt; wifi -&gt; 高级设置, 查看手机在局域网的 ip<br>我的是 192.168.1.230</p>
<ol>
<li><code>adb</code>连接手机</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ adb connect <span class="number">192.168</span><span class="number">.1</span><span class="number">.230</span></span><br><span class="line"></span><br><span class="line">connected to <span class="number">192.168</span><span class="number">.1</span><span class="number">.230</span>:<span class="number">5555</span></span><br></pre></td></tr></table></figure>
<ol>
<li>断开USB数据线, 验证adb连接是否断开</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ adb devices -l</span><br><span class="line">List of devices attached</span><br><span class="line"><span class="number">192.168</span><span class="number">.1</span><span class="number">.230</span>:<span class="number">5555</span>     device product:occam model:Nexus_4 device:mako</span><br></pre></td></tr></table></figure>
<p>现在可以执行各种adb 命令了, 当然包括安装调试apk,查看log等等</p>
<p>相关链接:<br><a href="http://adbshell.com/commands/adb-connect" target="_blank" rel="external">adb shell- adb conntect</a><br><a href="https://github.com/pedrovgs/AndroidWiFiADB" target="_blank" rel="external">AndroidWiFiADB</a><br><a href="https://github.com/Bob1993/adbwifi/blob/master/adbwifi.sh" target="_blank" rel="external">adbwifi(shell脚本)</a><br><a href="http://developer.android.com/intl/zh-cn/tools/help/adb.html#directingcommands" target="_blank" rel="external">Android Debug Bridge</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>通过wifi连接进行 adb 调试, 也是插件 <strong><a href="https://github.com/pedrovgs/AndroidWiFiADB">AndroidWiFiADB</a></strong> 的原理</p>
<p>前提: 电脑和手机在同一局域网下</p>
</blockquote>
<h3 id="adb_connect_命令">adb connect 命令</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb connect &lt;host&gt;[<span class="symbol">:&lt;port&gt;</span>]</span><br></pre></td></tr></table></figure>
<ol>
<li><p>通过USB线连接电脑</p>
</li>
<li><p>查看 <code>adb</code> 连接的设备列表</p>
</li>
</ol>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ adb devices -l</span><br><span class="line"></span><br><span class="line">List of devices attached</span><br><span class="line"><span class="number">005</span>deabe1919a90b       device <span class="string">usb:</span><span class="number">1</span>-<span class="number">2</span> <span class="string">product:</span>occam <span class="string">model:</span>Nexus_4 <span class="string">device:</span>mako</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[上传自己的库到jcenter]]></title>
    <link href="http://hanks.xyz/2015/10/31/%E4%B8%8A%E4%BC%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BA%93%E5%88%B0jcenter/"/>
    <id>http://hanks.xyz/2015/10/31/上传自己的库到jcenter/</id>
    <published>2015-10-31T12:24:00.000Z</published>
    <updated>2015-12-20T09:50:42.017Z</updated>
    <content type="html"><![CDATA[<h1 id="注册">注册</h1><p><a href="https://bintray.com/" target="_blank" rel="external">https://bintray.com/</a><br>注册一个账号。</p>
<p>获取API Key<br><a href="https://bintray.com/profile/edit" target="_blank" rel="external">https://bintray.com/profile/edit</a></p>
<h1 id="创建与配置项目">创建与配置项目</h1><ol>
<li>修改项目目录下的 <code>build.gradle</code>,添加依赖</li>
</ol>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Top-level build file where you can add configuration options common to all sub-projects/modules.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">buildscript</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">dependencies</span> &#123;</span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.android.tools.build:gradle:1.3.0'</span></span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'</span></span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.github.dcendents:android-maven-gradle-plugin:1.3'</span></span><br><span class="line">        <span class="comment">// <span class="doctag">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class="line">        <span class="comment">// in the individual module build.gradle files</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">allprojects</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>修改要打包成aar的moudle下的<code>build.gradle</code></li>
</ol>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: <span class="string">'com.android.library'</span></span><br><span class="line">apply plugin: <span class="string">'com.github.dcendents.android-maven'</span></span><br><span class="line">apply plugin: <span class="string">'com.jfrog.bintray'</span></span><br><span class="line"></span><br><span class="line">version = <span class="string">"0.6.6"</span>                                                              <span class="comment">// #CONFIG# // project version</span></span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">21</span></span><br><span class="line">    buildToolsVersion <span class="string">"21.1.2"</span></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        minSdkVersion <span class="number">8</span></span><br><span class="line">        targetSdkVersion <span class="number">21</span></span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        versionName <span class="string">"1.0"</span></span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="keyword">false</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">fileTree</span>(dir: <span class="string">'libs'</span>, <span class="keyword">include</span>: [<span class="string">'*.jar'</span>])</span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:support-v4:22.2.1'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:recyclerview-v7:22.2.1'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> siteUrl = <span class="string">'https://github.com/hanks-zyh/AnimateCheckBox'</span>                    <span class="comment">// #CONFIG# // project homepage</span></span><br><span class="line"><span class="keyword">def</span> gitUrl = <span class="string">'https://github.com/hanks-zyh/AnimateCheckBox.git'</span>                <span class="comment">// #CONFIG# // project git</span></span><br><span class="line"><span class="keyword">group</span> = <span class="string">"com.hanks"</span>                                                           <span class="comment">// #CONFIG# // Maven Group ID for the artifact (pageckage name is ok)</span></span><br><span class="line"></span><br><span class="line">install &#123;</span><br><span class="line">    <span class="keyword">repositories</span>.mavenInstaller &#123;</span><br><span class="line">        <span class="comment">// This generates POM.xml with proper parameters</span></span><br><span class="line">        pom &#123;</span><br><span class="line">            <span class="keyword">project</span> &#123;</span><br><span class="line">                packaging <span class="string">'aar'</span></span><br><span class="line">                name <span class="string">'Less Code For Android'</span>                                   <span class="comment">// #CONFIG# // project title</span></span><br><span class="line">                url siteUrl</span><br><span class="line">                <span class="comment">// Set your license</span></span><br><span class="line">                licenses &#123;</span><br><span class="line">                    license &#123;</span><br><span class="line">                        name <span class="string">'The Apache Software License, Version 2.0'</span></span><br><span class="line">                        url <span class="string">'http://www.apache.org/licenses/LICENSE-2.0.txt'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                developers &#123;</span><br><span class="line">                    developer &#123;</span><br><span class="line">                        id <span class="string">'hanks'</span>                                           <span class="comment">// #CONFIG# // your user id (you can write your nickname)</span></span><br><span class="line">                        name <span class="string">'hanks'</span>                                       <span class="comment">// #CONFIG# // your user name</span></span><br><span class="line">                        email <span class="string">'zhangyuhan2014@gmail.com'</span>                               <span class="comment">// #CONFIG# // your email</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                scm &#123;</span><br><span class="line">                    connection gitUrl</span><br><span class="line">                    developerConnection gitUrl</span><br><span class="line">                    url siteUrl</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">task</span> sourcesJar(type: Jar) &#123;</span><br><span class="line">    <span class="keyword">from</span> android.<span class="keyword">sourceSets</span>.main.java.srcDirs</span><br><span class="line">    classifier = <span class="string">'sources'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">task</span> javadoc(type: Javadoc) &#123;</span><br><span class="line">    <span class="keyword">source</span> = android.<span class="keyword">sourceSets</span>.main.java.srcDirs</span><br><span class="line">    <span class="keyword">classpath</span> += <span class="keyword">project</span>.files(android.getBootClasspath().<span class="keyword">join</span>(<span class="keyword">File</span>.pathSeparator))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">task</span> javadocJar(type: Jar, dependsOn: javadoc) &#123;</span><br><span class="line">    classifier = <span class="string">'javadoc'</span></span><br><span class="line">    <span class="keyword">from</span> javadoc.<span class="keyword">destinationDir</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">artifacts</span> &#123;</span><br><span class="line">    archives javadocJar</span><br><span class="line">    archives sourcesJar</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在local.properties添加bintray.user和bintray.apikey</span></span><br><span class="line">Properties properties = <span class="keyword">new</span> Properties()</span><br><span class="line">properties.load(<span class="keyword">project</span>.rootProject.<span class="keyword">file</span>(<span class="string">'local.properties'</span>).newDataInputStream())</span><br><span class="line">bintray &#123;</span><br><span class="line">    user = properties.getProperty(<span class="string">"bintray.user"</span>)</span><br><span class="line">    key = properties.getProperty(<span class="string">"bintray.apikey"</span>)</span><br><span class="line">    <span class="keyword">configurations</span> = [<span class="string">'archives'</span>]</span><br><span class="line">    pkg &#123;</span><br><span class="line">        repo = <span class="string">"maven"</span></span><br><span class="line">        name = <span class="string">"AnimateCheckBox"</span>     <span class="comment">// #CONFIG# project name in jcenter</span></span><br><span class="line">        websiteUrl = siteUrl</span><br><span class="line">        vcsUrl = gitUrl</span><br><span class="line">        licenses = [<span class="string">"Apache-2.0"</span>]</span><br><span class="line">        publish = <span class="keyword">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="执行创建的_install_任务(Gradle)">执行创建的 install 任务(Gradle)</h1><p>用于生产 jar 和 jardoc</p>
<h1 id="执行_bintrayUpload">执行 bintrayUpload</h1><p><img src="https://dn-coding-net-production-pp.qbox.me/3d7fb771-5d4a-48ac-8f2b-1d9cce14dcc8.png" alt="图片"><br>当bintrayUpload成功之后，</p>
<p>到 <a href="https://bintray.com/" target="_blank" rel="external">https://bintray.com/</a> 查看刚上传的项目<br>找到 <strong>Maven Central</strong> 标签，提示体积jcenter审核</p>
<h1 id="上传到_jcenter">上传到 jcenter</h1><p>等邮件通知，审核通过之后可以查看</p>
<p>到<a href="http://jcenter.bintray.com/" target="_blank" rel="external">http://jcenter.bintray.com/</a> 按照路径查看是否存在<br>如 <strong>otto</strong> 的 <a href="http://jcenter.bintray.com/com/squareup/otto/1.3.7/" target="_blank" rel="external">http://jcenter.bintray.com/com/squareup/otto/1.3.7/</a><br>然后别人就可以添加引用，从远程下载了</p>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ubuntu下Java环境配置]]></title>
    <link href="http://hanks.xyz/2015/10/25/Ubuntu%E4%B8%8BJava%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>http://hanks.xyz/2015/10/25/Ubuntu下Java环境配置/</id>
    <published>2015-10-25T14:42:00.000Z</published>
    <updated>2015-12-06T03:19:40.385Z</updated>
    <content type="html"><![CDATA[<p>#Java环境配置</p>
<ol>
<li>下载 <code>jdk-8u60-linux-x64.tar.gz</code></li>
<li>解压文件</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入到下载目录</span></span><br><span class="line"><span class="built_in">cd</span> ~/Downloads</span><br><span class="line"><span class="comment"># 在 /usr/lib/ 下创建jvm目录，如果有可以跳过</span></span><br><span class="line">sudo mkdir /usr/lib/jvm</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">sudo tar zxvf jdk-<span class="number">8</span>u60-linux-x64.tar.gz -C /usr/lib/jvm</span><br><span class="line"><span class="comment"># 进入到解压过后的文件</span></span><br><span class="line"><span class="built_in">cd</span> /usr/lib/jvm/</span><br><span class="line"><span class="comment"># 重命名目录</span></span><br><span class="line">mv jdk1.<span class="number">8.0</span>_60/ java-<span class="number">8</span>u60-sun</span><br></pre></td></tr></table></figure>
<ol>
<li>修改环境变量</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑.bashrc文件</span></span><br><span class="line">vim ~/.bashrc</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在文件底部添加：</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-<span class="number">8</span>u60-sun  </span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre  </span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib  </span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>
<p>保存退出</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使更改生效</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>
<ol>
<li>测试</li>
</ol>
<p><img src="http://file.bmob.cn/M02/44/E5/oYYBAFYs6cGAUXgGAAQQhkbBVNA434.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
      <category term="Java" scheme="http://hanks.xyz/tags/Java/"/>
    
      <category term="Ubuntu" scheme="http://hanks.xyz/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Anko for Android]]></title>
    <link href="http://hanks.xyz/2015/10/21/Anko_for_Android/"/>
    <id>http://hanks.xyz/2015/10/21/Anko_for_Android/</id>
    <published>2015-10-21T10:39:00.000Z</published>
    <updated>2015-12-06T03:19:40.237Z</updated>
    <content type="html"><![CDATA[<h1 id="Anko_for_Android">Anko for Android</h1><blockquote>
<p><a href="https://github.com/JetBrains/anko" target="_blank" rel="external">Anko</a> 是一个使开发Android应用更简单更快捷的库,Anko使你的代码简洁易懂, 使开发者不用再在意Android SDK对Java版本的限制(目前还不支持Java8  =。= ).</p>
</blockquote>
<p> Anko版本的 <code>hello world</code> :<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">verticalLayout &#123;</span><br><span class="line">    <span class="variable"><span class="keyword">val</span> name</span> = editText()</span><br><span class="line">    button(<span class="string">"Say Hello"</span>) &#123;</span><br><span class="line">        onClick &#123; toast(<span class="string">"Hello, $&#123;name.text&#125;!"</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>上面的代码创建了一个Button,放在 <code>LinearLayout</code> 内, 并为其设置了一个点击监听器<code>OnClickListener</code> .</p>
<p><img src="http://file.bmob.cn/M02/32/C1/oYYBAFYnZ7GAHENVAATT_iv8nqY107.gif" alt=""></p>
<p>上面是一个DSL(Domain Specific Language),使用的是 <a href="http://kotlinlang.org" target="_blank" rel="external">Kotlin</a>语言.</p>
<blockquote>
<p>DSL，即 Domain Specific Language，领域相关语言。什么是 DSL，说白了它就是某个行业中的行话。</p>
</blockquote>
<p>[TOC]</p>
<h2 id="Why_Anko?">Why Anko?</h2><h3 id="为啥_DSL?">为啥 DSL?</h3><p>平时开发android, UI写在xml中,这就导致了下面的几个问题 :</p>
<ul>
<li>It is not typesafe</li>
<li>It is not null-safe</li>
<li>It forces you to write almost <em>the same code</em> for every layout you make</li>
<li>XML is parsed on the device wasting CPU time and battery 渲染xml为对象过程耗时耗电</li>
<li>Most of all, it allows no code reuse. 大部分不能重用</li>
</ul>
<p>但是全部只在代码中写UI,这很难,不仅代码丑,而且冗余难维护,下面是 <strong>Ktolin</strong>版本的(Java甚至更长):</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable"><span class="keyword">val</span> act</span> = this</span><br><span class="line"><span class="variable"><span class="keyword">val</span> layout</span> = LinearLayout(act)</span><br><span class="line">layout.setOrientation(LinearLayout.VERTICAL)</span><br><span class="line"><span class="variable"><span class="keyword">val</span> name</span> = EditText(act)</span><br><span class="line"><span class="variable"><span class="keyword">val</span> button</span> = Button(act)</span><br><span class="line">button.setText(<span class="string">"Say Hello"</span>)</span><br><span class="line">button.setOnClickListener &#123;</span><br><span class="line">    Toast.makeText(act, <span class="string">"Hello, $&#123;name.getText()&#125;!"</span>, Toast.LENGTH_SHORT).show()  </span><br><span class="line">&#125;</span><br><span class="line">layout.addView(name)</span><br><span class="line">layout.addView(button)</span><br></pre></td></tr></table></figure>
<p>DSL 就不一样类,相同的逻辑,但简洁易懂, 易于编写而且没有运行开销(runtime overhead)看下面的代码:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">verticalLayout &#123;</span><br><span class="line">    <span class="variable"><span class="keyword">val</span> name</span> = editText()</span><br><span class="line">    button(<span class="string">"Say Hello"</span>) &#123;</span><br><span class="line">        onClick &#123; toast(<span class="string">"Hello, $&#123;name.text&#125;!"</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="为啥不用_Scaloid?">为啥不用 Scaloid?</h3><p><a href="https://github.com/pocorall/scaloid" target="_blank" rel="external">Scaloid</a> 是一个类似与 Scala 的库, 有很多非常酷的特性可供 Scala 开发者使用. Anko主要是针对 Java 和 Kotlin developers.</p>
<h3 id="兼容已有的代码">兼容已有的代码</h3><p>不需要用Anko重写所有的UI, 你可以保留原有的Java代码. 此外, 如果你想写一个 <strong>Kotlin</strong>的activity类并且由于某些需求需要使用 inflate来渲染xml, 你完全可以按照原来的写法:<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Same as findViewById(), simpler to use</span></span><br><span class="line"><span class="variable"><span class="keyword">val</span> name</span> = find<span class="type">&lt;TextView&gt;</span>(R.id.name)</span><br><span class="line">name.hint = <span class="string">"Enter your name"</span></span><br><span class="line">name.onClick &#123; <span class="comment">/*do something*/</span> &#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="工作原理">工作原理</h3><p>There is no :tophat:. Anko 由一些 <strong>Kotlin</strong>的 <a href="http://kotlinlang.org/docs/reference/extensions.html" target="_blank" rel="external">扩展函数和属性</a>,被设置成<strong>类型安全</strong>(<em>type-safe builders</em>)的, <a href="http://kotlinlang.org/docs/reference/type-safe-builders.html" target="_blank" rel="external">under Type Safe Builders</a>.</p>
<p>他们繁琐的手工编写所有这些扩展, 使用Android SDK的源码中的 <em>android.jar</em> 文件自动生成</p>
<h3 id="可扩展吗?">可扩展吗?</h3><p>答案是: <strong>yes</strong>.<br>例如. 你可能想使用 <code>MapView</code> 在DSL中.你可以编写下面的代码(kotlin文件中),然后就可已到处使用了<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> ViewManager.<span class="title">mapView</span><span class="params">()</span> = mapView &#123;&#125;</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> ViewManager.<span class="title">mapView</span><span class="params">(init: <span class="typename">MapView.(</span>)</span> -&gt; Unit): MapView &#123;</span></span><br><span class="line">    <span class="keyword">return</span> ankoView(&#123; MapView(it) &#125;, init)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><code>{ MapView(it) }</code> 是你自定义View的一个工厂方法<code>View</code>. 接受一个 <code>Context</code> .</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">frameLayout &#123;</span><br><span class="line">    <span class="variable"><span class="keyword">val</span> mapView</span> = mapView().lparams(width = matchParent)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果你想创建一个 顶级的 DSL,看<a href="https://github.com/JetBrains/anko/blob/master/doc/ADVANCED.md#extending-anko" target="_blank" rel="external">这里Extending Anko</a>.</p>
<h3 id="使用_Gradle">使用 Gradle</h3><p>这里有个例子 <a href="https://github.com/yanex/anko-template-project" target="_blank" rel="external">template project</a> 展示类如果在Android中Gradle配置.</p>
<p>基本上,你只需要配置  <code>repository</code> 和一个 <code>compile dependency</code>:</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'org.jetbrains.anko:anko-sdk15:0.7.1'</span> <span class="comment">// sdk19, sdk21, sdk23 are also available</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'org.jetbrains.anko:anko-support-v4:0.7.1'</span> <span class="comment">// In case you need support.v4 bindings</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="当作_Jar_library使用">当作 Jar library使用</h3><p>加入你的项目不是基于Gradl, 不需要配置 Maven. 只要添加<a href="https://github.com/JetBrains/anko/releases" target="_blank" rel="external">这里</a> 的jar包即可.</p>
<h3 id="编译_Anko">编译 Anko</h3><p>如何编译看<a href="https://github.com/JetBrains/anko/blob/master/doc/BUILDING.md" target="_blank" rel="external">under Building</a>.</p>
<h2 id="理解_Anko">理解 Anko</h2><p>Anko 是使用 <strong>Kotlin</strong>语言编写的.<br>如果不熟悉<strong>Kotlin</strong>看 <a href="http://kotlinlang.org/docs/reference/" target="_blank" rel="external">kotlinlang.org</a>.<br><strong>Kotlin</strong>与Java很类似,所以很容易学.</p>
<h3 id="基础">基础</h3><p>Anko中, 你不需要继承其他奇怪的类,只要标准的<code>Activity</code>, <code>Fragment</code>, <code>FragmentActivity</code> 或者其他任意的类</p>
<p>首先, 在使用Anko的DSL的类中导入 <code>org.jetbrains.anko.*</code> .</p>
<p>DSL 可以在 <code>onCreate()</code>中使用:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="typename">Bundle?</span>)</span> &#123;</span></span><br><span class="line">    super<span class="type">&lt;Activity&gt;</span>.onCreate(savedInstanceState)</span><br><span class="line"></span><br><span class="line">    verticalLayout &#123;</span><br><span class="line">        padding = dip(<span class="number">30</span>)</span><br><span class="line">        editText &#123;</span><br><span class="line">            hint = <span class="string">"Name"</span></span><br><span class="line">            textSize = <span class="number">24</span>f</span><br><span class="line">        &#125;</span><br><span class="line">        editText &#123;</span><br><span class="line">            hint = <span class="string">"Password"</span></span><br><span class="line">            textSize = <span class="number">24</span>f</span><br><span class="line">        &#125;</span><br><span class="line">        button(<span class="string">"Login"</span>) &#123;</span><br><span class="line">            textSize = <span class="number">26</span>f</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>不需要显示的调用 <code>setContentView(R.layout.something)</code>,  Anko 自动为Activity（只会对Activity）进行 set content view</p>
<p><code>padding</code>, <code>hint</code> 和 <code>textSize</code> 是 <a href="http://kotlinlang.org/docs/reference/extensions.html#extension-properties" target="_blank" rel="external">扩展属性</a>. 大多数 <code>View</code> 具有这些属性，允许使用<code>text = &quot;Some text&quot;</code> 代替 <code>setText(&quot;Some text&quot;)</code>.</p>
<p><code>verticalLayout</code> (一个竖直方向的 <code>LinearLayout</code>), <code>editText</code> 和 <code>button</code> are<br><a href="http://kotlinlang.org/docs/reference/extensions.html" target="_blank" rel="external">扩展函数</a>. 这些函数存在与ANdroid 框架中的大部View中,  <code>Activities</code>, <code>Fragments</code> ( <code>android.support</code> 包中的) 甚至 <code>Context</code>同样适用.</p>
<p>如果有一个 <code>Context</code> 实例, 可以写出下面的DSL结构:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable"><span class="keyword">val</span> name</span> = with(myContext) &#123;</span><br><span class="line">    editText &#123;</span><br><span class="line">        hint = <span class="string">"Name"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>变量 <code>name</code> 成为了 <code>EditText</code>类型.</p>
<h3 id="Helper_方法">Helper 方法</h3><p>你可能注意到了，前面章节中  <code>button</code> 方法接了一个字符串参数，这样的Helper方法同样使用与 <code>TextView</code>, <code>EditText</code>, <code>Button</code> ， <code>ImageView</code>.</p>
<p>如果你不需要 <code>View</code> 其他的属性，你可以省略 <code>{}</code> 直接写 <code>button(&quot;Ok&quot;)</code> 或只有 <code>button()</code>:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">verticalLayout &#123;</span><br><span class="line">    button(<span class="string">"Ok"</span>)</span><br><span class="line">    button(<span class="string">"Cancel"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Layouts_和_LayoutParams">Layouts 和 LayoutParams</h3><p>在父布局中布局控件可能需要使用 <code>LayoutParams</code>. xml中长这样:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">ImageView</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android_layout_marginLeft</span>=<span class="value">"5dip"</span></span><br><span class="line">    <span class="attribute">android_layout_marginTop</span>=<span class="value">"10dip"</span></span><br><span class="line">    <span class="attribute">android:src</span>=<span class="value">"@drawable/something"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>Anko中, 在<code>View</code>的后面使用 <code>lparams</code>来实现类似与xml的 <code>LayoutParams</code>。</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">linearLayout &#123;</span><br><span class="line">    button(<span class="string">"Login"</span>) &#123;</span><br><span class="line">        textSize = <span class="number">26</span>f</span><br><span class="line">    &#125;.lparams(width = wrapContent) &#123;</span><br><span class="line">        horizontalMargin = dip(<span class="number">5</span>)</span><br><span class="line">        topMargin = dip(<span class="number">10</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果指定了 <code>lparams</code>,但是没有指定 <code>width</code> 或者 <code>height</code>, 默认是 <code>WRAP_CONTENT</code>.但是你可以自己通过使用<a href="http://kotlinlang.org/docs/reference/functions.html#named-arguments" target="_blank" rel="external">named arguments</a>指定.</p>
<p>注意下面一些方便的属性:</p>
<ul>
<li><code>horizontalMargin</code> 同时设置 left 和 right margins,</li>
<li><code>verticalMargin</code> 同时设置   top 和 bottom  </li>
<li><code>margin</code> 同时设置4个方向的 margins.</li>
</ul>
<p><strong>注意</strong>  <code>lparams</code> 的使用在不同的布局中是不同的, 例如在 <code>RelativeLayout</code>中:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable"><span class="keyword">val</span> ID_OK</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">relativeLayout &#123;</span><br><span class="line">    button(<span class="string">"Ok"</span>) &#123;</span><br><span class="line">        id = ID_OK</span><br><span class="line">    &#125;.lparams &#123; alignParentTop() &#125;</span><br><span class="line"></span><br><span class="line">    button(<span class="string">"Cancel"</span>).lparams &#123; below(ID_OK) &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Listeners">Listeners</h3><p>设置listeners:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">button(<span class="string">"Login"</span>) &#123;</span><br><span class="line">    onClick &#123;</span><br><span class="line">        login(name, password)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>下面的效果一样:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">button.setOnClickListener(<span class="keyword">object</span> : OnClickListener &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onClick</span><span class="params">(v: <span class="typename">View</span>)</span> &#123;</span></span><br><span class="line">        login(name, password)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>当一个Listener有多个方法时，Anko就显得很方便类. 看下面的代码（没有使用Anko）:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">seekBar.setOnSeekBarChangeListener(<span class="keyword">object</span>: OnSeekBarChangeListener &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onProgressChanged</span><span class="params">(seekBar: <span class="typename">SeekBar, progress: Int, fromUser: Boolean</span>)</span> &#123;</span></span><br><span class="line">        <span class="comment">// Something</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onStartTrackingTouch</span><span class="params">(seekBar: <span class="typename">SeekBar?</span>)</span> &#123;</span></span><br><span class="line">        <span class="comment">// Just an empty method</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onStopTrackingTouch</span><span class="params">(seekBar: <span class="typename">SeekBar</span>)</span> &#123;</span></span><br><span class="line">        <span class="comment">// Another empty method</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>使用了Anko:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">seekBar &#123;</span><br><span class="line">    onSeekBarChangeListener &#123;</span><br><span class="line">        onProgressChanged &#123; seekBar, progress, fromUser -&gt;</span><br><span class="line">            <span class="comment">// Something</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果你同时设置了<code>onProgressChanged</code> 和 <code>onStartTrackingTouch</code>  , 两个方法将被合并. 对于多个相同的方法，最后的一个有效.</p>
<h3 id="Resources,_Colors_和_Dimensions">Resources, Colors 和 Dimensions</h3><h4 id="Using_resource_identifiers">Using resource identifiers</h4><p>前面的所有例子直接使用的 Java的字符串，但是大多数时候字符串都是放在  <code>res/values/</code> 目录下，并且是运行时调用的，例如 <code>getString(R.string.login)</code>.</p>
<p>幸运的是，Anko中可以使用以下两个 helper方法 (<code>button(R.string.login)</code>) 和 (<code>button { textResource = R.string.login }</code>).</p>
<p><strong>注意</strong>，这些属性不是 <code>text</code>, <code>hint</code>, <code>image</code>, 而是 <code>textResource</code>, <code>hintResource</code> and <code>imageResource</code>.</p>
<blockquote>
<p>Resource properties always throw <code>AnkoException</code> when read.</p>
</blockquote>
<h4 id="Colors">Colors</h4><p>两个简单的扩展函数使代码更加易懂。</p>
<table>
<thead>
<tr>
<th>Function</th>
<th>Result</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>0xff0000.opaque</code></td>
<td><span style="color:#ff0000">non-transparent red</span></td>
</tr>
<tr>
<td><code>0x99.gray.opaque</code></td>
<td><span style="color:#999">non-transparent #999999 gray</span></td>
</tr>
</tbody>
</table>
<h4 id="Dimensions">Dimensions</h4><p>你可以指定 dimension 的 <strong>dip</strong> (density-independent pixels) 或  <strong>sp</strong> (scale-independent pixels)值: <code>dip(dipValue)</code> 或 <code>sp(spValue)</code>. <strong>注意</strong> <code>textSize</code>属性默认接受<strong>sp</strong> (<code>textSize = 16f</code>). 使用 <code>px2dip</code> 和 <code>px2sp</code> 相互转换.</p>
<h3 id="Instance_shorthands">Instance shorthands</h3><p>在Activity中，有时你需要传一个 <code>Context</code>实例给一个 Android SDK中的方法，通常你会写 <code>this</code>, 如果在内部类呢?你可能写<code>SomeActivity.this</code> ，如果你使用 <strong>Kotlin</strong>，你只需写 <code>this@SomeActivity</code> ，<br>使用 Anko，你可以只写  <code>ctx</code>. <code>ctx</code>是<code>Activity</code> 和 <code>Service</code> 或者 <code>Fragment</code> (使用的 <code>getActivity()</code> )内部的一个属性. 你也可以使用<code>act</code>扩展属性获取 <code>Activity</code>实例.</p>
<h3 id="UI_wrapper">UI wrapper</h3><p>开始使用Anko 之前，将 <code>UI</code> tag 作为 DSL 顶级元素:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">UI &#123;</span><br><span class="line">    editText &#123;</span><br><span class="line">        hint = <span class="string">"Name"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这将更易于扩展 DSL ，因为你必须声明一个函数 <code>ViewManager.customView</code>.<br>看这里 <a href="https://github.com/JetBrains/anko/blob/master/doc/ADVANCED.md#extending-anko" target="_blank" rel="external">Extending Anko</a> 获取更多信息.</p>
<h3 id="Include_tag">Include tag</h3><p>使用 <code>include</code> tag 很容易向 DSL 插入 一个 XML layout ：</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">include<span class="type">&lt;View&gt;</span>(R.layout.something) &#123;</span><br><span class="line">    backgroundColor = Color.RED</span><br><span class="line">&#125;.lparams(width = matchParent) &#123; margin = dip(<span class="number">12</span>) &#125;</span><br></pre></td></tr></table></figure>
<p>通常可以使用 <code>lparams</code> ， 如果类型不是 <code>View</code>,仍然可以用 <code>{}</code>:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">include<span class="type">&lt;TextView&gt;</span>(R.layout.textfield) &#123;</span><br><span class="line">    text = <span class="string">"Hello, world!"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Styles">Styles</h3><p>Anko 支持 styling: <code>style</code> 是一个简单的函数，接受一个<code>View</code>, 效果作用于这个 <code>View</code> , 并且当这个<code>View</code> 是一个<code>ViewGroup</code> 时，可以可以递归的作用与 这个View的 child View:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">verticalLayout &#123;</span><br><span class="line">    editText &#123;</span><br><span class="line">        hint = <span class="string">"Name"</span></span><br><span class="line">    &#125;</span><br><span class="line">    editText &#123;</span><br><span class="line">        hint = <span class="string">"Password"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;.style &#123; view -&gt; <span class="keyword">when</span>(view) &#123;</span><br><span class="line">    <span class="keyword">is</span> EditText -&gt; view.textSize = <span class="number">20</span>f</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure>
<hr>
<p><a href="http://kotlinlang.org" target="_blank" rel="external"><img src="http://file.bmob.cn/M02/32/C5/oYYBAFYnaXGAU36mAAA-AHHYR0Y038.png" alt=""></a></p>
<hr>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
  </entry>
  
</feed>
