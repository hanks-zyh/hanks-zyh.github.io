<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Hanks.xyz]]></title>
  <subtitle><![CDATA[coding]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://hanks.xyz/"/>
  <updated>2016-07-31T04:33:51.000Z</updated>
  <id>http://hanks.xyz/</id>
  
  <author>
    <name><![CDATA[Hanks]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[写一个 ButterKinfe]]></title>
    <link href="http://hanks.xyz/2016/07/31/write-butterkinfe/"/>
    <id>http://hanks.xyz/2016/07/31/write-butterkinfe/</id>
    <published>2016-07-30T19:07:03.000Z</published>
    <updated>2016-07-31T04:33:51.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://jakewharton.github.io/butterknife/" target="_blank" rel="external">ButterKnife</a> 很多人都用过，能节省很多代码，最多的就是省去了很多 <code>findViewById</code> 语句。接下来自己写一个，就叫 <code>BBKnife</code> 吧。</p>
<a id="more"></a>
<h2 id="分析">分析</h2><p>在使用 ButterKnife 时，需要书写下面的类似代码，以一个 Activity 为例</p>
<p><code>ExampleActivity.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExampleActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line">  <span class="annotation">@BindView</span>(R.id.title) TextView title;</span><br><span class="line">  <span class="annotation">@BindView</span>(R.id.subtitle) TextView subtitle;</span><br><span class="line">  <span class="annotation">@BindView</span>(R.id.footer) TextView footer;</span><br><span class="line"></span><br><span class="line">  <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.simple_activity);</span><br><span class="line">    ButterKnife.bind(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">// TODO Use fields...</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>在编译后，会自动生成一个和 Activity 同名的 <code>ExampleActivity$ViewBinder</code> 的辅助类文件，并且生成 findViewById 相关的代码</p>
<p><code>ExampleActivity$ViewBinder.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bind</span><span class="params">(ExampleActivity activity)</span> </span>&#123;</span><br><span class="line">  activity.subtitle = (android.widget.TextView) activity.findViewById(<span class="number">2130968578</span>);</span><br><span class="line">  activity.footer = (android.widget.TextView) activity.findViewById(<span class="number">2130968579</span>);</span><br><span class="line">  activity.title = (android.widget.TextView) activity.findViewById(<span class="number">2130968577</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>那么 <code>BBKnife</code> 库要做的事情就很清楚了，生成辅助类。</p>
<h2 id="动手开写">动手开写</h2><p>步骤：</p>
<ol>
<li>创建注解</li>
<li>编译期间处理注解</li>
<li>生成辅助类</li>
<li>调用辅助类</li>
</ol>
<h3 id="0x00_创建工程">0x00 创建工程</h3><p>首先创建一个新的工程</p>
<p><img src="http://ww2.sinaimg.cn/large/8c9b876fjw1f6ch0o8ai8j20fq09g74z.jpg" alt=""></p>
<p>然后创建一个 module ， 选择 java Library。</p>
<p><img src="http://ww2.sinaimg.cn/large/8c9b876fjw1f6ch5zk9suj20g20ixt9p.jpg" alt=""></p>
<p><img src="http://ww3.sinaimg.cn/large/8c9b876fjw1f6ch7emf5sj20700gnaba.jpg" alt=""></p>
<h3 id="0x01_创建注解">0x01 创建注解</h3><p>这个注解作用于类的属性上面，包含一个整型的参数，类似于 <code>@BindView(R.id.title)</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by hanks on 2016/7/31.</span><br><span class="line"> */</span></span><br><span class="line"><span class="annotation">@Documented</span></span><br><span class="line"><span class="annotation">@Retention</span>(RetentionPolicy.CLASS)</span><br><span class="line"><span class="annotation">@Target</span>(ElementType.FIELD)</span><br><span class="line"><span class="keyword">public</span> <span class="annotation">@interface</span> BindView &#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">value</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="0x02_编译期间处理注解_&amp;&amp;_生成辅助类">0x02 编译期间处理注解 &amp;&amp; 生成辅助类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * 编译期间处理注解</span><br><span class="line"> * Created by hanks on 2016/7/31.</span><br><span class="line"> */</span></span><br><span class="line"><span class="annotation">@SupportedAnnotationTypes</span>(<span class="string">"xyz.hanks.BindView"</span>)</span><br><span class="line"><span class="annotation">@SupportedSourceVersion</span>(SourceVersion.RELEASE_7)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BindViewProcessor</span> <span class="keyword">extends</span> <span class="title">AbstractProcessor</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Messager messager;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SUFFIX = <span class="string">"$ViewBinder"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ProcessingEnvironment processingEnv)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.init(processingEnv);</span><br><span class="line">        messager = processingEnv.getMessager();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">process</span><span class="params">(Set&lt;? extends TypeElement&gt; annotations, RoundEnvironment roundEnv)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, List&lt;VariableElement&gt;&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;(); <span class="comment">// key 是类名，value 是该类的注解元素</span></span><br><span class="line">        <span class="comment">// 遍历 BindView 注解的所有元素</span></span><br><span class="line">        <span class="keyword">for</span> (Element element : roundEnv.getElementsAnnotatedWith(BindView.class)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (element == <span class="keyword">null</span> || !(element <span class="keyword">instanceof</span> VariableElement)) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 给属性添加的注解</span></span><br><span class="line">            VariableElement variableElement = (VariableElement) element;</span><br><span class="line">            <span class="comment">// 获取属性所在的类名</span></span><br><span class="line">            String className = element.getEnclosingElement().getSimpleName().toString();</span><br><span class="line">            List&lt;VariableElement&gt; variableElementList = map.get(className);</span><br><span class="line">            <span class="keyword">if</span> (variableElementList == <span class="keyword">null</span>) &#123;</span><br><span class="line">                variableElementList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                map.put(className, variableElementList);</span><br><span class="line">            &#125;</span><br><span class="line">            variableElementList.add(variableElement);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成辅助类</span></span><br><span class="line">        generate(map);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">generate</span><span class="params">(Map&lt;String, List&lt;VariableElement&gt;&gt; map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == map || map.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (String className : map.keySet()) &#123;</span><br><span class="line">            List&lt;VariableElement&gt; variableElementList = map.get(className);</span><br><span class="line">            <span class="keyword">if</span> (variableElementList == <span class="keyword">null</span> || variableElementList.size() &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 获取包名</span></span><br><span class="line">            String packageName = variableElementList.get(<span class="number">0</span>).getEnclosingElement().getEnclosingElement().toString();</span><br><span class="line">            StringBuilder builder = <span class="keyword">new</span> StringBuilder()</span><br><span class="line">                    .append(<span class="string">"package "</span>).append(packageName).append(<span class="string">";\n\n"</span>)</span><br><span class="line">                    .append(<span class="string">"public class "</span>).append(className).append(SUFFIX).append(<span class="string">"&#123;\n"</span>) <span class="comment">// open class</span></span><br><span class="line">                    .append(<span class="string">"    public void bind(Object target) &#123;\n"</span>)</span><br><span class="line">                    .append(<span class="string">"        "</span>).append(className).append(<span class="string">" activity = ("</span>).append(className).append(<span class="string">")target;\n"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (VariableElement variableElement : variableElementList) &#123;</span><br><span class="line">                BindView bindView = variableElement.getAnnotation(BindView.class);</span><br><span class="line">                log(bindView.toString());</span><br><span class="line">                builder.append(<span class="string">"        activity."</span>).append(variableElement.getSimpleName().toString()).append(<span class="string">"=("</span>).append(variableElement.asType()).append(<span class="string">")activity.findViewById("</span>).append(bindView.value()).append(<span class="string">");\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            builder.append(<span class="string">"    &#125;\n&#125;\n"</span>);</span><br><span class="line">            <span class="comment">// write the file</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                String bindViewClassName = packageName + <span class="string">"."</span> + className + SUFFIX;</span><br><span class="line">                JavaFileObject source = processingEnv.getFiler().createSourceFile(bindViewClassName);</span><br><span class="line">                Writer writer = source.openWriter();</span><br><span class="line">                writer.write(builder.toString());</span><br><span class="line">                writer.flush();</span><br><span class="line">                writer.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                log(e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">log</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        messager.printMessage(Diagnostic.Kind.WARNING, msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意点：</p>
<ul>
<li>添加 <code>@SupportedAnnotationTypes</code>  <code>@SupportedSourceVersion</code> 注解， 原因: AbstractProcessor 中做了相关校验（看 AbstractProcessor 源码）。</li>
<li>打印消息是由 <code>processingEnv.getMessager().printMessage</code> 或者输出日志文件，原因：编译期间做的处理，不能使用 System.out 或者 Log.i</li>
<li>处理注解的时候需要获取类名或者包名，需要注意获取的是全路径还是简单名称。</li>
<li>依照需要生成辅助类文件。</li>
</ul>
<p>在 main 下新建 resources &gt; META_INF &gt; services 目录，创建 javax.annotation.processing.Processor 文件，javac 会自动检查和读取 <code>javax.annotation.processing.Processor</code> 中的内容，并且注册 <code>BindViewProcessor</code> 作为注解处理器。<br><img src="http://ww3.sinaimg.cn/large/8c9b876fjw1f6ciagzi37j20c6074jrv.jpg" alt=""></p>
<p><img src="http://ww3.sinaimg.cn/large/8c9b876fjw1f6cib9hm97j20by025t8t.jpg" alt=""></p>
<h3 id="0x03_调用辅助类">0x03 调用辅助类</h3><p>当执行 <code>BBKnife.bind(activity)</code> 的时候调用我们生成的辅助类，辅助类内部进行 <code>findViewById</code> 从而进行注入。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BBKnife</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 调用我们生成的辅助类</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bind</span><span class="params">(Object view)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String cla = view.getClass().getName()+BindViewProcessor.SUFFIX;</span><br><span class="line">            Class clazz = Class.forName(cla);</span><br><span class="line">            Object instance = clazz.newInstance();</span><br><span class="line">            Method bind = clazz.getMethod(<span class="string">"bind"</span>,Object.class);</span><br><span class="line">            bind.invoke(instance,view);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="导出_bbknife-jar">导出 bbknife.jar</h3><p>在 build/libs 目录下有自动导出的 jar 文件， </p>
<p><img src="http://ww3.sinaimg.cn/large/8c9b876fjw1f6cihkdt83j20ch0b8js9.jpg" alt=""></p>
<h2 id="使用">使用</h2><p>复制到 app  下的 libs 进行引用。</p>
<p><img src="http://ww1.sinaimg.cn/large/8c9b876fjw1f6ciom1hxfj20bi09zt9e.jpg" alt=""></p>
<p>app 下的 build.gradle<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: <span class="string">'com.android.application'</span></span><br><span class="line">apply plugin: <span class="string">'com.neenbedankt.android-apt'</span> <span class="comment">// 使用 apt</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">buildscript</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">dependencies</span> &#123;</span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.neenbedankt.gradle.plugins:android-apt:1.8'</span> <span class="comment">// 添加引用</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">24</span></span><br><span class="line">    buildToolsVersion <span class="string">"24.0.1"</span></span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">"xyz.hanks.bbknifeproject"</span></span><br><span class="line">        minSdkVersion <span class="number">15</span></span><br><span class="line">        targetSdkVersion <span class="number">24</span></span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        versionName <span class="string">"1.0"</span></span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="keyword">false</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 设置java 版本</span></span><br><span class="line">    compileOptions&#123;</span><br><span class="line">        <span class="keyword">sourceCompatibility</span> JavaVersion.VERSION_1_7</span><br><span class="line">        <span class="keyword">targetCompatibility</span> JavaVersion.VERSION_1_7</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">fileTree</span>(dir: <span class="string">'libs'</span>, <span class="keyword">include</span>: [<span class="string">'*.jar'</span>])</span><br><span class="line">    testCompile <span class="string">'junit:junit:4.12'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:appcompat-v7:24.1.1'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>在 MainActivity 使用</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@BindView</span>(R.id.bb_button) Button mButton;</span><br><span class="line">    <span class="annotation">@BindView</span>(R.id.bb_image)  ImageView mImage;</span><br><span class="line">    <span class="annotation">@BindView</span>(R.id.bb_text)   TextView mText;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        BBKnife.bind(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        mButton.setText(<span class="string">"hanks.xyz"</span>);</span><br><span class="line">        mText.setText(<span class="string">"hanks.xyz"</span>);</span><br><span class="line">        mImage.setImageResource(R.mipmap.ic_launcher);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>看最后生成的辅助类 <code>MainActivity$ViewBinder.java</code><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> MainActivity$ViewBinder&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bind</span><span class="params">(Object target)</span> </span>&#123;</span><br><span class="line">        MainActivity activity = (MainActivity)target;</span><br><span class="line">        activity.mButton=(android.widget.Button)activity.findViewById(<span class="number">2131427412</span>);</span><br><span class="line">        activity.mImage=(android.widget.ImageView)activity.findViewById(<span class="number">2131427414</span>);</span><br><span class="line">        activity.mText=(android.widget.TextView)activity.findViewById(<span class="number">2131427413</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="http://ww3.sinaimg.cn/large/8c9b876fjw1f6citq0ptdj20bu0l2dg4.jpg" alt=""></p>
<h2 id="参考链接">参考链接</h2><p><a href="http://blog.stablekernel.com/the-10-step-guide-to-annotation-processing-in-android-studio" target="_blank" rel="external">http://blog.stablekernel.com/the-10-step-guide-to-annotation-processing-in-android-studio
</a></p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://jakewharton.github.io/butterknife/">ButterKnife</a> 很多人都用过，能节省很多代码，最多的就是省去了很多 <code>findViewById</code> 语句。接下来自己写一个，就叫 <code>BBKnife</code> 吧。</p>]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
      <category term="依赖注入" scheme="http://hanks.xyz/tags/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[多行 EditText 的光标高度问题]]></title>
    <link href="http://hanks.xyz/2016/07/24/edittext-cursor/"/>
    <id>http://hanks.xyz/2016/07/24/edittext-cursor/</id>
    <published>2016-07-24T15:23:12.000Z</published>
    <updated>2016-07-24T15:51:51.000Z</updated>
    <content type="html"><![CDATA[<h2 id="问题">问题</h2><p>改变文本的行间距需要给 <code>EditText</code> 设置 <code>lineSpacingExtra</code> 和 <code>lineSpacingMultiplier</code> 这个时候的 <code>EditText</code>的光标高度就会变得很难看.</p>
<p><img src="http://ww3.sinaimg.cn/large/8c9b876fjw1f65febqq97j20bm082dge.jpg" alt="默认效果"></p>
<h2 id="解决办法">解决办法</h2><p>自定义 <code>cursorDrawable</code> 然后设置 <code>padding</code> 值</p>
<h2 id="原理">原理</h2><p><code>EditText</code> 在更新光标的视图的时候检查了光标 drawable 的 padding. 计算光标高度会算上相应的值.</p>
<p>相关源码:</p>
<p><code>Editor.java</code></p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">void</span> <span class="title">updateCursorPosition</span><span class="params">(<span class="keyword">int</span> cursorIndex, <span class="keyword">int</span> top, <span class="keyword">int</span> bottom, <span class="keyword">float</span> horizontal)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mTempRect == <span class="keyword">null</span>) mTempRect = <span class="keyword">new</span> Rect();</span><br><span class="line">    mCursorDrawable[cursorIndex].getPadding(mTempRect); <span class="comment">//光标的 padding</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 上下边距的最终值为 top - mTempRect.top 和 bottom + mTempRect.bottom</span></span><br><span class="line">    mCursorDrawable[cursorIndex].setBounds(left, top - mTempRect.top, left + width,</span><br><span class="line">            bottom + mTempRect.bottom);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>那么 top 和 bottom 的值是多少 ? </p>
<p><code>Editor.java</code><br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> updateCursorsPositions() &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line"></span><br><span class="line">    Layout layout = mTextView.getLayout();</span><br><span class="line">    Layout hintLayout = mTextView.getHintLayout();</span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">int</span> offset = mTextView.getSelectionStart();</span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">int</span> <span class="built_in">line</span> = layout.getLineForOffset(offset); <span class="comment">// 算出当前是第几行</span></span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">int</span> top = layout.getLineTop(<span class="built_in">line</span>); <span class="comment">// 算出第 line 行的顶部坐标</span></span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">int</span> bottom = layout.getLineTop(<span class="built_in">line</span> + <span class="number">1</span>); <span class="comment">// 算出第 line+1 行的顶部坐标</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">boolean</span> clamped = layout.shouldClampCursor(<span class="built_in">line</span>);</span><br><span class="line">    updateCursorPosition(<span class="number">0</span>, top, middle,</span><br><span class="line">            getPrimaryHorizontal(layout, hintLayout, offset, clamped));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>从源码看出 bottom 到 top 的距离为第 line 行的顶部到第 line+1 行的顶部. 也就是上面图中的效果.</p>
<p>解决方法:<br>自定义一个 <code>cursor.xml</code>, 然后设置 <code>android:textCursorDrawable=&quot;@drawable/cursor&quot;</code></p>
<p><code>cursor.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">shape</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:shape</span>=<span class="value">"rectangle"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">size</span></span><br><span class="line">        <span class="attribute">android:width</span>=<span class="value">"2dip"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">solid</span></span><br><span class="line">        <span class="attribute">android:color</span>=<span class="value">"#f00"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">padding</span></span><br><span class="line">        <span class="attribute">android:top</span>=<span class="value">"0dp"</span></span><br><span class="line">        <span class="attribute">android:bottom</span>=<span class="value">"-22dp"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">shape</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>注意上面设置了 shape 的 <code>padding</code> 计算出来 <code>bottom = 行高 - 文字高度 = 42 - 20 = 22</code>.当然这值是可以自己调整的.</p>
<p><img src="http://ww1.sinaimg.cn/large/8c9b876fjw1f65fgftcsij20bi06u74r.jpg" alt="设置后效果"></p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
      <category term="EditText" scheme="http://hanks.xyz/tags/EditText/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[TextView 设置行高并垂直居中]]></title>
    <link href="http://hanks.xyz/2016/07/22/textview-lineheight/"/>
    <id>http://hanks.xyz/2016/07/22/textview-lineheight/</id>
    <published>2016-07-22T13:49:04.000Z</published>
    <updated>2016-07-22T13:53:08.000Z</updated>
    <content type="html"><![CDATA[<p><strong>需求</strong>： TextView 多行文本可以设置行高（如20dp），每行文本垂直居中。</p>
<p>效果如下：</p>
<p><img src="http://ww4.sinaimg.cn/large/8c9b876fjw1f61ytzwj8ej20bt09sjs2.jpg" alt="多行文本,设置行高,垂直居中"></p>
<p><strong>实现思路</strong>：通过设置 TextView 的 <code>lineSpacingExtra</code> 和 <code>lineSpacingMultiplier</code> 来实现。</p>
<ul>
<li><code>lineSpacingMultiplier</code> 的值为行间距的倍数，默认值为 1.0f。</li>
<li><code>lineSpacingExtra</code> 值为具体的行间距值，如20dp。</li>
<li>垂直居中靠设置 paddingTop 和 paddingBottom</li>
</ul>
<h3 id="TextView_相关">TextView 相关</h3><p>TextView 内部除了继承自 View 的相关属性和 <code>measure、layout、draw</code>步骤，还包括：</p>
<ul>
<li><strong>Layout</strong>: TextView 的文字排版、折行策略以及文本绘制都是在 Layout 里面完成的，TextView 的自身测量也受 Layout 的影响。Layout 是 TextView 执行setText方法后，由 TextView 内部创建的实例，并不能由外部提供。Layout有三个子类，BoringLayout、DynamicLayout、StaticLayout。</li>
<li><strong>TransformationMethod</strong>: 用来处理最终的显示结果的类，例如显示密码的时候把密码转换成圆点。这个类并不直接影响 TextView 内部储存的 Text ，只影响显示的结果。</li>
<li><strong>MovementMethod</strong>: 用来处理 TextView 内部事件响应的类，可以针 对TextView 内文本的某一个区域做软键盘输入或者触摸事件的响应。</li>
<li><strong>Drawables</strong>: TextView 的静态内部类，用来处理和储存 TextView 的 CompoundDrawables ，包括 TextView 的上下左右的 Drawable 以及错误提示的 Drawable。</li>
<li><strong>Spans</strong>: Spans 并不是特定的某一个类或者实现了某一个接口的类。它可以是任意类型，Spans实际上做的事情是在 TextView 的内部的 text 的某一个区域做标记。其中有部 分Spans 可以影响TextView的绘制和测量，如 ImageSpan、BackgroundColorSpan、AbsoluteSizeSpan。还有可以响应点击事件的ClickableSpan。</li>
<li><strong>Editor</strong>: TextView作为可编辑文本控件的时候(EditText)，使用Editor来处理文本的区域选择处理和判断、拼写检查、弹出文本菜单等。</li>
<li><strong>InputConnection</strong>: EditText 的文本输入部分是在 TextView 中完成的。而 InputConnection 是软键盘和TextView之间的桥梁，所有的软键盘的输入文字、修改文字和删除文字都是通过 InputConnection 传递给 TextView 的。</li>
</ul>
<h3 id="TextView_默认文字的上下边距">TextView 默认文字的上下边距</h3><p>TextView 的 <code>textSize</code> 属性代表的意义是字体的大小，体现为字体高度,一般单位是 sp， sp 代表的字体大小根据手机设置的文字大小有关，默认的 <code>1sp = 1dp</code>。但是Android 系统会默认的给文字增加一点边框。<br><img src="http://ww4.sinaimg.cn/large/8c9b876fjw1f62r61rhp5j20m706k75j.jpg" alt="默认效果"></p>
<p><img src="http://ww4.sinaimg.cn/large/8c9b876fjw1f62rzmn4gvj20al04jmxe.jpg" alt="渲染图"></p>
<p>Android 提供了一个 setIncludeFontPadding 方法.用来设置 TextView 是否在顶部和底部保留一些空隙,默认为 ture 。如果我们设置为 false 的话可能会导致某些语言显示的不完整, 如 Arabic Kannada 。在 <code>StaticLayout</code> 的 <code>setIncludePad</code> 方法提到。</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Set whether <span class="keyword">to</span> include extra <span class="constant">space</span> beyond font ascent <span class="keyword">and</span> descent (which <span class="keyword">is</span></span><br><span class="line"> * needed <span class="keyword">to</span> avoid clipping <span class="keyword">in</span> <span class="keyword">some</span> languages, such <span class="keyword">as</span> Arabic <span class="keyword">and</span> Kannada). The</span><br><span class="line"> * default <span class="keyword">is</span> &#123;@code <span class="constant">true</span>&#125;.</span><br><span class="line"> *</span><br><span class="line"> * @param includePad whether <span class="keyword">to</span> include padding</span><br><span class="line"> * @<span class="constant">return</span> this builder, useful <span class="keyword">for</span> chaining</span><br><span class="line"> * @see android.widget.TextView<span class="comment">#setIncludeFontPadding</span></span><br><span class="line"> */</span><br><span class="line">public Builder setIncludePad(<span class="type">boolean</span> includePad) &#123;</span><br><span class="line">    mIncludePad = includePad;</span><br><span class="line"><span class="command">    return</span> this;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>通过 <code>android:includeFontPadding=&quot;false&quot;</code> 可以去掉一定的边距值但是不能完全去掉。还少达不到<br>文字高度精确，所以不通过过设置 lineSpacingMultiplier 来改变, lineSpacingMultiplier 为 0 , 那么多行文本就都变成一行了。<br><img src="http://ww1.sinaimg.cn/large/8c9b876fjw1f62nk9xof1j20v009q416.jpg" alt="右边的绿色背景的效果"></p>
<p>最终结果是：</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="setting">lineSpacingMultiplier = <span class="value"><span class="number">0</span></span></span></span><br><span class="line"><span class="setting">lineSpacingExtra = <span class="value">行高</span></span></span><br><span class="line"><span class="setting">paddingTop = <span class="value">paddingBottom = （行高-字体大小）* <span class="number">0.5</span></span></span></span><br></pre></td></tr></table></figure>
<p><img src="http://ww2.sinaimg.cn/large/8c9b876fjw1f62nc6ai84j20bt09s0tl.jpg" alt="计算paddingTop"></p>
<p><img src="http://ww4.sinaimg.cn/large/8c9b876fjw1f61yuqmw9aj214l0lsqbe.jpg" alt="设置高度"></p>
<p>封装成控件。这里继承了EditText, 默认的编辑文本时的行高会改变,所以在文本变化时需要重新设置.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xyz.hanks.note.ui.widget;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span><br><span class="line"><span class="keyword">import</span> android.text.Editable;</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.Gravity;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> xyz.hanks.note.R;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 每一行的文字垂直居中</span><br><span class="line"> * Created by hanks on 16/7/2.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LineTextView</span> <span class="keyword">extends</span> <span class="title">EditText</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> ITEM_HEIGHT = <span class="number">125</span>;</span><br><span class="line">    <span class="keyword">boolean</span> reLayout = <span class="keyword">false</span>;</span><br><span class="line">    TextWatcher textWatcher;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LineTextView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context,<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LineTextView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, attrs,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LineTextView</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">        addTextChangedListener(<span class="keyword">new</span> android.text.TextWatcher() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beforeTextChanged</span><span class="params">(CharSequence charSequence, <span class="keyword">int</span> i, <span class="keyword">int</span> i1, <span class="keyword">int</span> i2)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (textWatcher != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    textWatcher.beforeTextChanged(charSequence, i, i1, i2);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTextChanged</span><span class="params">(CharSequence charSequence, <span class="keyword">int</span> i, <span class="keyword">int</span> i1, <span class="keyword">int</span> i2)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">float</span> add = ITEM_HEIGHT;</span><br><span class="line">                setLineSpacing(<span class="number">0f</span>, <span class="number">1f</span>);</span><br><span class="line">                setLineSpacing(add, <span class="number">0</span>);</span><br><span class="line">                setIncludeFontPadding(<span class="keyword">false</span>);</span><br><span class="line">                setGravity(Gravity.CENTER_VERTICAL);</span><br><span class="line">                <span class="keyword">int</span> top = (<span class="keyword">int</span>) ((add - getTextSize()) * <span class="number">0.5f</span>);</span><br><span class="line">                setPadding(getPaddingLeft(), top, getPaddingRight(), -top);</span><br><span class="line">                <span class="keyword">if</span> (textWatcher != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    textWatcher.onTextChanged(charSequence, i, i1, i2);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterTextChanged</span><span class="params">(Editable editable)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (textWatcher != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    textWatcher.afterTextChanged(editable);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span> <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line">        <span class="keyword">if</span> (!reLayout) &#123;</span><br><span class="line">            reLayout = <span class="keyword">true</span>; </span><br><span class="line">            setIncludeFontPadding(<span class="keyword">false</span>);</span><br><span class="line">            setGravity(Gravity.CENTER_VERTICAL);</span><br><span class="line">            setLineSpacing(ITEM_HEIGHT, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">int</span> top = (<span class="keyword">int</span>) ((ITEM_HEIGHT - getTextSize()) * <span class="number">0.5f</span>);</span><br><span class="line">            setPadding(getPaddingLeft(), top, getPaddingRight(), -top);</span><br><span class="line">            requestLayout();</span><br><span class="line">            invalidate();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addTextWatcher</span><span class="params">(TextWatcher textWatcher)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.textWatcher = textWatcher;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TextWatcher</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">beforeTextChanged</span><span class="params">(CharSequence var1, <span class="keyword">int</span> var2, <span class="keyword">int</span> var3, <span class="keyword">int</span> var4)</span></span>;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onTextChanged</span><span class="params">(CharSequence var1, <span class="keyword">int</span> var2, <span class="keyword">int</span> var3, <span class="keyword">int</span> var4)</span></span>;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">afterTextChanged</span><span class="params">(Editable var1)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> 参考链接:</p>
<p> <a href="https://github.com/7heaven/AndroidSdkSourceAnalysis/blob/master/article/textview%E6%BA%90%E7%A2%BC%E8%A7%A3%E6%9E%90.md" target="_blank" rel="external">TextView源码解析</a></p>
<p> <a href="http://www.cnblogs.com/tianzhijiexian/p/4297664.html" target="_blank" rel="external">用TextPaint来绘制文字</a></p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
      <category term="TextView" scheme="http://hanks.xyz/tags/TextView/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[自动化测试还可以用来干啥]]></title>
    <link href="http://hanks.xyz/2016/07/07/auto-test/"/>
    <id>http://hanks.xyz/2016/07/07/auto-test/</id>
    <published>2016-07-06T16:01:00.000Z</published>
    <updated>2016-07-06T16:06:15.000Z</updated>
    <content type="html"><![CDATA[<p>自动化测试就是把一些重复的测试工作利用相关工具自动化，减少重复的劳动。我们不仅可以利用自动化测试工具做测试，还可以利用这些工作做一些其他事情，比如爬数据，曾经抓取过学校的整个学期的课表，空闲教室，帮老爸抓取他的客户联系信息到 excel 表。这种工具不同于一般的脚本爬虫，这相当于正常的用户行为，比如点击输入框，输入文本，点击按钮，而且不用担心动态 js 等问题。</p>
<a id="more"></a>
<p>大概搜索了几个自动化测试的工具：<br><a href="http://www.seleniumhq.org/projects/webdriver/" target="_blank" rel="external">selenium</a><br><a href="http://casperjs.org/" target="_blank" rel="external">capserjs</a><br><a href="http://phantomjs.org/best-practices.html" target="_blank" rel="external">phantomjs</a><br><a href="https://launchpad.net/sikuli" target="_blank" rel="external">Sikuli</a><br><a href="http://zombie.js.org/" target="_blank" rel="external">Zombie </a><br><a href="http://watij.com/webspec-api/" target="_blank" rel="external">WebSpec</a></p>
<p>以前使用的 <code>WebSpec</code> ，支持多种浏览器内核，可开关 GUI。</p>
<p>下面了解了一下 <a href="https://www.npmjs.com/package/selenium-webdriver" target="_blank" rel="external">selenium-webdrive</a>,支持语言有 <code>java</code> <code>c#</code> <code>python</code> <code>ruby</code><br><code>php</code> <code>perl</code> <code>javascript</code>。</p>
<p>javascript 版安装很简单<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> selenium-webdriver</span><br></pre></td></tr></table></figure></p>
<p>这是自带的 firefox 版本的，其他浏览器的可以另行下载。</p>
<p>看官网的一个例子<br><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> webdriver = <span class="keyword">require</span>(<span class="string">'selenium-webdriver'</span>), <span class="comment">// 引用模块</span></span><br><span class="line">    <span class="keyword">By</span> = webdriver.<span class="keyword">By</span>,</span><br><span class="line">    <span class="keyword">until</span> = webdriver.<span class="keyword">until</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> driver = <span class="keyword">new</span> webdriver.Builder()</span><br><span class="line">    .forBrowser(<span class="string">'firefox'</span>) <span class="comment">// 打开 firfox </span></span><br><span class="line">    .build();</span><br><span class="line"></span><br><span class="line">driver.get(<span class="string">'http://www.google.com/ncr'</span>); <span class="comment">// 打开网页</span></span><br><span class="line">driver.findElement(<span class="keyword">By</span>.name(<span class="string">'q'</span>)).sendKeys(<span class="string">'webdriver'</span>); <span class="comment">// 获取输入框，并输入元素</span></span><br><span class="line">driver.findElement(<span class="keyword">By</span>.name(<span class="string">'btnG'</span>)).click(); <span class="comment">// 获取搜索按钮，并点击</span></span><br><span class="line">driver.wait(<span class="keyword">until</span>.titleIs(<span class="string">'webdriver - Google Search'</span>),  <span class="number">1000</span>); <span class="comment">// 等待网络响应直到网页标题变为webdriver - Google Search</span></span><br><span class="line">driver.quit();</span><br></pre></td></tr></table></figure></p>
<p>api 都简单易懂，很快就能入手使用。使用中遇到问题是 <code>driver.findElement</code> 有时会出现异常，原因是有的网页是后端动态渲染的，无法一下子获取到对应的元素，需要使用</p>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> button = driver.wait(<span class="keyword">until</span>.elementLocated(<span class="keyword">By</span>.name(<span class="string">'login'</span>)), <span class="number">5</span> * <span class="number">1000</span>)</span><br></pre></td></tr></table></figure>
<hr>
<p>计划用自动测试来自动运营微信公众号。大概流程如下（基本就是模拟用户行为）：</p>
<p>现在需要扫描二维码，那么就将二维码发送到手机然后微信识别登录。</p>
<ol>
<li>登录</li>
<li>获取二维码</li>
<li>点击群发消息</li>
<li>点击消息</li>
<li>编辑文章</li>
<li>发送</li>
<li>获取二维码</li>
<li>文章发布成功</li>
</ol>
<p>可以利用 slack 或者 telegram 机器人的 api 来通知自己（比如将验证码图片发送到手机）。</p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>自动化测试就是把一些重复的测试工作利用相关工具自动化，减少重复的劳动。我们不仅可以利用自动化测试工具做测试，还可以利用这些工作做一些其他事情，比如爬数据，曾经抓取过学校的整个学期的课表，空闲教室，帮老爸抓取他的客户联系信息到 excel 表。这种工具不同于一般的脚本爬虫，这相当于正常的用户行为，比如点击输入框，输入文本，点击按钮，而且不用担心动态 js 等问题。</p>]]>
    
    </summary>
    
      <category term="自动化" scheme="http://hanks.xyz/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[学习 Promise （结合 RxJava）]]></title>
    <link href="http://hanks.xyz/2016/06/26/promise-by-rx/"/>
    <id>http://hanks.xyz/2016/06/26/promise-by-rx/</id>
    <published>2016-06-26T08:24:37.000Z</published>
    <updated>2016-06-26T08:26:11.000Z</updated>
    <content type="html"><![CDATA[<h2 id="当前的问题">当前的问题</h2><p>在开发过程中不同的语言都有遇到 callback hell（回调地狱）， 回调一般出现在异步操作中。<br>简单的例子:<br>① 从网络获取图片<br>② 将图片进行压缩<br>③ 压缩后的数据保存到本地<br>以上几个操作都属于异步操作，</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">op1</span>(<span class="function">callback</span>()&#123;</span><br><span class="line">    <span class="tag">success</span>()&#123;</span><br><span class="line">        <span class="tag">op2</span>(<span class="function">callback</span>()&#123;</span><br><span class="line">            <span class="tag">success</span>()&#123;</span><br><span class="line">                <span class="tag">op3</span>(<span class="function">callback</span>()&#123;</span><br><span class="line">                    <span class="tag">success</span>()&#123; </span><br><span class="line">                     <span class="comment">// done</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="tag">error</span>(e)&#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)  </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="tag">error</span>(e)&#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="tag">error</span>(e)&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="解决方案">解决方案</h2><p>不同语言设计针对此都有对应的解决方案，将回调写成流水线，将复杂的操作变成一条线。</p>
<p><code>Rxjava</code>：java 中处理异步</p>
<p><code>Promise</code>： JavaScript 中处理异步</p>
<p>写起来类似于下面的代码：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">op1</span>()</span><br><span class="line">  <span class="class">.then</span>(<span class="tag">op2</span>)</span><br><span class="line">  <span class="class">.then</span>(<span class="tag">op3</span>)</span><br><span class="line">  <span class="class">.catch</span>(<span class="tag">e</span>)</span><br><span class="line">  <span class="class">.done</span>();</span><br></pre></td></tr></table></figure>
<p><code>Promise</code> 对象代表一个异步操作，有三种状态：<code>Pending</code>（进行中）、<code>Resolved</code>（已完成，又称Fulfilled）和 <code>Rejected</code>（已失败）。</p>
<h3 id="创建_promise">创建 promise</h3><p><code>rxjava</code></p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">Observable</span> observable = Observable.create(new Observable.OnSubscribe&lt;<span class="keyword">String&gt;() </span>&#123;</span><br><span class="line">    <span class="comment">@Override</span></span><br><span class="line">    public void call(<span class="keyword">Subscriber&lt;? </span>super <span class="keyword">String&gt; </span><span class="keyword">subscriber) </span>&#123;</span><br><span class="line">      // ... some <span class="preprocessor">code</span></span><br><span class="line">      <span class="preprocessor">if</span> (<span class="comment">/* 异步操作成功 */</span>)&#123;</span><br><span class="line">        <span class="keyword">subscriber.onNext(value);</span><br><span class="line"></span>        <span class="keyword">subscriber.onCompleted();</span><br><span class="line"></span>      &#125; <span class="preprocessor">else</span> &#123;</span><br><span class="line">        <span class="keyword">subscriber.onError(error);</span><br><span class="line"></span>      &#125;</span><br><span class="line">&#125;)<span class="comment">;</span></span><br></pre></td></tr></table></figure>
<p><code>Promise</code><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ... some code</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="comment">/* 异步操作成功 */</span>)&#123;</span><br><span class="line">    resolve(value);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    reject(error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<h2 id="流水线">流水线</h2><p><code>rxjava</code><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">observable.doOnNext()</span><br><span class="line">    .<span class="built_in">map</span></span><br><span class="line">    .filter</span><br><span class="line">    .doOnNext()</span><br><span class="line">    .subscribe(</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCompleted</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">// ....               </span></span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(Throwable e)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// ...</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNext</span><span class="params">(AppInfo appInfo)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// ...</span></span><br><span class="line">        &#125;</span><br><span class="line">    );</span><br></pre></td></tr></table></figure></p>
<p><code>promise</code></p>
<figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="transposed_variable">promise.</span><span class="keyword">then</span>(<span class="function"><span class="keyword">function</span><span class="params">()</span>&#123;</span></span><br><span class="line"></span><br><span class="line">&#125;).<span class="keyword">then</span>(<span class="function"><span class="keyword">function</span><span class="params">()</span>&#123;</span></span><br><span class="line"></span><br><span class="line">&#125;).<span class="keyword">catch</span>(<span class="function"><span class="keyword">function</span><span class="params">(error)</span>&#123;</span></span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h3 id="all">all</h3><p>类似于 <code>Observable ob  = Observable.merge(ob1,ob2,ob3)</code></p>
<p>Promise.all方法用于将多个Promise实例，包装成一个新的Promise实例。</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">var</span> p = Promise.all([<span class="literal">p1</span>, <span class="literal">p2</span>, <span class="literal">p3</span>])<span class="comment">;</span></span><br></pre></td></tr></table></figure>
<p>上面代码中，<code>Promise.all</code> 方法接受一个数组作为参数，<code>p1、p2、p3</code> 都是Promise对象的实例。（Promise.all方法的参数可以不是数组，但必须具有Iterator接口，且返回的每个成员都是Promise实例。）</p>
<p>p的状态由p1、p2、p3决定，分成两种情况。</p>
<p>（1）只有<code>p1、p2、p3</code>的状态都变成fulfilled，p的状态才会变成fulfilled，此时p1、p2、p3的返回值组成一个数组，传递给p的回调函数。</p>
<p>（2）只要<code>p1、p2、p3</code>之中有一个被rejected，<code>p的状态就变成rejected</code>，此时第一个被reject的实例的返回值，会传递给p的回调函数。</p>
<h3 id="race">race</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">var</span> p = Promise.race([<span class="literal">p1</span>,<span class="literal">p2</span>,<span class="literal">p3</span>])<span class="comment">;</span></span><br></pre></td></tr></table></figure>
<p><code>Promise.race</code> 方法同样是将多个Promise实例，包装成一个新的Promise实例。</p>
<p>上面代码中，只要<code>p1、p2、p3</code>之中有一个实例率先改变状态，<code>p的状态就跟着改变</code>。那个率先改变的Promise实例的返回值，就传递给p的回调函数。</p>
<h3 id="finally">finally</h3><p>不管 <code>Promise</code> 对象最后状态如何，都会执行的操作 。</p>
<h3 id="参考链接">参考链接</h3><p><a href="http://es6.ruanyifeng.com/?search=fetch&amp;x=0&amp;y=0#docs/promise" target="_blank" rel="external">http://es6.ruanyifeng.com/?search=fetch&amp;x=0&amp;y=0#docs/promise</a></p>
<p><a href="https://mcxiaoke.gitbooks.io/rxdocs/content/operators/Merge.html" target="_blank" rel="external">https://mcxiaoke.gitbooks.io/rxdocs/content/operators/Merge.html</a></p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
      <category term="JavaScript" scheme="http://hanks.xyz/tags/JavaScript/"/>
    
      <category term="Promise" scheme="http://hanks.xyz/tags/Promise/"/>
    
      <category term="前端" scheme="http://hanks.xyz/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[利用 Android 手机打造来电通知计划]]></title>
    <link href="http://hanks.xyz/2016/06/21/motifyme/"/>
    <id>http://hanks.xyz/2016/06/21/motifyme/</id>
    <published>2016-06-21T15:38:27.000Z</published>
    <updated>2016-06-21T16:10:34.000Z</updated>
    <content type="html"><![CDATA[<p>最近住的地方总在晚上停电，还让不让人活了，大热天的，于是就晚上在外面先找个凉快的地方呆着，但是来电的时间不确定，有时候感觉应该来电了，回去了还是没电，那个热啊。那么问题来了，要是屋里来电了有人告诉我就好了！于是计划写一个小程序让它在屋里来电后通知。<br><a id="more"></a><br>利用现用资源：一台<strong>退休的手机</strong><br>大概思路是这样的：家里的路由器是一直连着电源的，老手机是一直开着 wifi 的，来电后路由器通电，自动连接上网络，这个时候手机也检测到网络，连接上了 wifi，然后后台程序通过此判断来电了，再让老手机给我发短信通知，收到来电通知后我就可以回去了吹电扇了！</p>
<p>来来来，开始写程序</p>
<ol>
<li>首先开启一个后台服务 <code>NetCheckService</code>，1分钟执行一次。记得 AndroidMenifest.xml 注册。</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by hanks on 16/6/21.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NetCheckService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String LAST_STATUS = <span class="string">"lastStatus"</span>; </span><br><span class="line">    <span class="annotation">@Nullable</span> <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 服务开启</span></span><br><span class="line">    <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        handleIntent();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">handleIntent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Thread()&#123;</span><br><span class="line">            <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">while</span> (<span class="keyword">true</span>)&#123; </span><br><span class="line">                    System.out.println(<span class="string">"onStart"</span>);</span><br><span class="line">                    </span><br><span class="line">                    <span class="comment">// 判断是否来电了</span></span><br><span class="line">                    handleStatus();</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        Thread.sleep(<span class="number">60</span>*<span class="number">1000</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                    System.out.println(<span class="string">"----耗时任务执行完成---"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.start();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>检测网络</li>
</ol>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/**</span><br><span class="line"> * 检测当的网络状态</span><br><span class="line"> * <span class="doctag">@return</span> true 表示网络可用</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">boolean</span> <span class="title">isNetworkAvailable</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">    ConnectivityManager connectivity = (ConnectivityManager) context</span><br><span class="line">            .getSystemService(Context.CONNECTIVITY_SERVICE);</span><br><span class="line">    <span class="keyword">if</span> (connectivity != <span class="keyword">null</span>) &#123;</span><br><span class="line">        NetworkInfo info = connectivity.getActiveNetworkInfo();</span><br><span class="line">        <span class="keyword">if</span> (info != <span class="keyword">null</span> &amp;&amp; info.isConnected()) &#123;</span><br><span class="line">            <span class="comment">// 当前网络是连接的</span></span><br><span class="line">            <span class="keyword">if</span> (info.getState() == NetworkInfo.State.CONNECTED) &#123;</span><br><span class="line">                <span class="comment">// 当前所连接的网络可用</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>判断是否来电了, <strong>记得注册相应的权限</strong>。</li>
</ol>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">private</span> <span class="function"><span class="keyword">boolean</span> <span class="title">getStatus</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());</span><br><span class="line">    <span class="function"><span class="keyword">return</span> sp.<span class="title">getBoolean</span><span class="params">(LAST_STATUS, <span class="keyword">false</span>)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">updateStatus</span><span class="params">(<span class="keyword">boolean</span> isAvailable)</span> </span>&#123;</span><br><span class="line">    SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());</span><br><span class="line">    SharedPreferences.Editor editor = sp.edit();</span><br><span class="line">    editor.putBoolean(LAST_STATUS, isAvailable);</span><br><span class="line">    editor.apply();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">void</span> <span class="title">hanldeStatus</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> lastStatus = getStatus();</span><br><span class="line">    <span class="comment">// 检测网络状况</span></span><br><span class="line">    <span class="keyword">boolean</span> isNetworkAvailable = isNetworkAvailable(getApplicationContext());</span><br><span class="line">    <span class="comment">// 如果原来网络不可用 &amp;&amp; 现在可用了</span></span><br><span class="line">    <span class="keyword">if</span> (!lastStatus &amp;&amp; isNetworkAvailable) &#123;</span><br><span class="line">        <span class="comment">// 发送短信</span></span><br><span class="line">        sendSMS();</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">"isNetworkAvailable = "</span> + isNetworkAvailable);</span><br><span class="line">    <span class="comment">// 更新网络状态</span></span><br><span class="line">    updateStatus(isNetworkAvailable);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>定期检测手机连接网络的状态，如果当前网络是可用状态并且上次是不可用状态，那么就说明来电了，然后就发送短信通知我<br>发送短信就使用的 ShareSDK 的。自定义短信模板还要审核，所以暂时用系统默认的。</li>
</ol>
<p><img src="http://ww2.sinaimg.cn/large/8c9b876fjw1f53acno7raj20k00zkjss.jpg" alt="收到短信" style="width: 400px;"></p>
<p>还不完善的地方：</p>
<ul>
<li>手机服务很有可能被杀死。</li>
<li>短信模板。</li>
</ul>
<blockquote>
<p>还有一种思路就是手机一直充着电，检测手机电池状态是否为充电。</p>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近住的地方总在晚上停电，还让不让人活了，大热天的，于是就晚上在外面先找个凉快的地方呆着，但是来电的时间不确定，有时候感觉应该来电了，回去了还是没电，那个热啊。那么问题来了，要是屋里来电了有人告诉我就好了！于是计划写一个小程序让它在屋里来电后通知。<br>]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[SwipeRefreshLayout 源码]]></title>
    <link href="http://hanks.xyz/2016/06/18/swiperefreshlayout/"/>
    <id>http://hanks.xyz/2016/06/18/swiperefreshlayout/</id>
    <published>2016-06-18T11:37:51.000Z</published>
    <updated>2016-06-18T11:39:11.000Z</updated>
    <content type="html"><![CDATA[<h2 id="简介">简介</h2><p><a href="http://developer.android.com/intl/zh-cn/reference/android/support/v4/widget/SwipeRefreshLayout.html" target="_blank" rel="external">官方文档</a></p>
<p><code>SwipeRefreshLayout</code> 是一个下拉刷新控件，几乎可以包裹一个任何可以滚动的内容（ListView GridView ScrollView RecyclerView），可以自动识别垂直滚动手势。使用起来非常方便。</p>
<a id="more"></a>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><img src="http://img.blog.csdn.net/20150127120706062" alt=""></td>
<td style="text-align:center"><img src="http://img.blog.csdn.net/20150127121649015" alt=""></td>
</tr>
</tbody>
</table>
<p> 1.将需要下拉刷新的空间包裹起来</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">android.support.v4.widget.SwipeRefreshLayout</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">android.support.v7.widget.RecyclerView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/recyclerView"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">android.support.v4.widget.SwipeRefreshLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p> 2.设置刷新动画的触发回调</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置下拉出现小圆圈是否是缩放出现，出现的位置，最大的下拉位置</span></span><br><span class="line">mySwipeRefreshLayout.setProgressViewOffset(<span class="keyword">true</span>, <span class="number">50</span>, <span class="number">200</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置下拉圆圈的大小，两个值 LARGE， DEFAULT</span></span><br><span class="line">mySwipeRefreshLayout.setSize(SwipeRefreshLayout.LARGE);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置下拉圆圈上的颜色，蓝色、绿色、橙色、红色</span></span><br><span class="line">mySwipeRefreshLayout.setColorSchemeResources(</span><br><span class="line">    android.R.color.holo_blue_bright,</span><br><span class="line">    android.R.color.holo_green_light,</span><br><span class="line">    android.R.color.holo_orange_light,</span><br><span class="line">    android.R.color.holo_red_light);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过 setEnabled(false) 禁用下拉刷新</span></span><br><span class="line">mySwipeRefreshLayout.setEnabled(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设定下拉圆圈的背景</span></span><br><span class="line">mSwipeLayout.setProgressBackgroundColor(R.color.red);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span><br><span class="line"> * 设置手势下拉刷新的监听</span><br><span class="line"> */</span></span><br><span class="line">mySwipeRefreshLayout.setOnRefreshListener(</span><br><span class="line">    <span class="keyword">new</span> SwipeRefreshLayout.OnRefreshListener() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRefresh</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">// 刷新动画开始后回调到此方法</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>通过 <code>setRefreshing(false)</code> 和 <code>setRefreshing(true)</code> 来手动调用刷新的动画。</p>
<blockquote>
<p><code>onRefresh</code> 的回调只有在手势下拉的情况下才会触发，通过 <code>setRefreshing</code> 只能调用刷新的动画是否显示。<br>SwipeRefreshLayout 也可放在 CoordinatorLayout 内共同处理滑动冲突，有兴趣可以尝试。</p>
</blockquote>
<h2 id="SwipeRefreshLayout_源码分析">SwipeRefreshLayout 源码分析</h2><blockquote>
<p>本文基于 v4 版本 <code>23.2.0</code></p>
</blockquote>
<p>extends <code>ViewGroup</code> implements <code>NestedScrollingParent</code> <code>NestedScrollingChild</code><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">java<span class="class">.lang</span><span class="class">.Object</span></span><br><span class="line">   ↳    android<span class="class">.view</span><span class="class">.View</span></span><br><span class="line">       ↳    android<span class="class">.view</span><span class="class">.ViewGroup</span></span><br><span class="line">           ↳    android<span class="class">.support</span><span class="class">.v4</span><span class="class">.widget</span><span class="class">.SwipeRefreshLayout</span></span><br></pre></td></tr></table></figure></p>
<p>SwipeRefreshLayout 的分析分为两个部分：<strong>自定义 ViewGroup 的部分</strong>，<strong>处理和子视图的嵌套滚动部分</strong>。</p>
<h3 id="SwipeRefreshLayout_extends_ViewGroup">SwipeRefreshLayout extends ViewGroup</h3><p>其实就是一个自定义的 ViewGroup ，结合我们自己平时自定义 ViewGroup 的步骤：</p>
<ol>
<li>初始化变量</li>
<li>onMeasure</li>
<li>onLayout</li>
<li>处理交互 （<code>dispatchTouchEvent</code> <code>onInterceptTouchEvent</code> <code>onTouchEvent</code>）</li>
</ol>
<p>接下来就按照上面的步骤进行分析。</p>
<h4 id="1-初始化变量">1.初始化变量</h4><p><code>SwipeRefreshLayout</code> 内部有 2 个 View，一个<code>圆圈（mCircleView）</code>，一个内部可滚动的<code>View（mTarget）</code>。除了 View，还包含一个 <code>OnRefreshListener</code> 接口，当刷新动画被触发时回调。</p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/8e02212d-b364-4df8-bfaa-47f3084f89e7.png" alt="图片"></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Constructor that is called when inflating SwipeRefreshLayout from XML.</span><br><span class="line"> *</span><br><span class="line"> * <span class="doctag">@param</span> context</span><br><span class="line"> * <span class="doctag">@param</span> attrs</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SwipeRefreshLayout</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(context, attrs);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 系统默认的最小滚动距离</span></span><br><span class="line">    mTouchSlop = ViewConfiguration.get(context).getScaledTouchSlop();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 系统默认的动画时长</span></span><br><span class="line">    mMediumAnimationDuration = getResources().getInteger(</span><br><span class="line">            android.R.integer.config_mediumAnimTime);</span><br><span class="line"></span><br><span class="line">    setWillNotDraw(<span class="keyword">false</span>);</span><br><span class="line">    mDecelerateInterpolator = <span class="keyword">new</span> DecelerateInterpolator(DECELERATE_INTERPOLATION_FACTOR);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取 xml 中定义的属性</span></span><br><span class="line">    <span class="keyword">final</span> TypedArray a = context.obtainStyledAttributes(attrs, LAYOUT_ATTRS);</span><br><span class="line">    setEnabled(a.getBoolean(<span class="number">0</span>, <span class="keyword">true</span>));</span><br><span class="line">    a.recycle();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 刷新的圆圈的大小，单位转换成 sp</span></span><br><span class="line">    <span class="keyword">final</span> DisplayMetrics metrics = getResources().getDisplayMetrics();</span><br><span class="line">    mCircleWidth = (<span class="keyword">int</span>) (CIRCLE_DIAMETER * metrics.density);</span><br><span class="line">    mCircleHeight = (<span class="keyword">int</span>) (CIRCLE_DIAMETER * metrics.density);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建刷新动画的圆圈</span></span><br><span class="line">    createProgressView();</span><br><span class="line"></span><br><span class="line">    ViewCompat.setChildrenDrawingOrderEnabled(<span class="keyword">this</span>, <span class="keyword">true</span>);</span><br><span class="line">    <span class="comment">// the absolute offset has to take into account that the circle starts at an offset</span></span><br><span class="line">    mSpinnerFinalOffset = DEFAULT_CIRCLE_TARGET * metrics.density;</span><br><span class="line">    <span class="comment">// 刷新动画的临界距离值</span></span><br><span class="line">    mTotalDragDistance = mSpinnerFinalOffset;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过 NestedScrolling 机制来处理嵌套滚动</span></span><br><span class="line">    mNestedScrollingParentHelper = <span class="keyword">new</span> NestedScrollingParentHelper(<span class="keyword">this</span>);</span><br><span class="line">    mNestedScrollingChildHelper = <span class="keyword">new</span> NestedScrollingChildHelper(<span class="keyword">this</span>);</span><br><span class="line">    setNestedScrollingEnabled(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>// 创建刷新动画的圆圈<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">createProgressView</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    mCircleView = <span class="keyword">new</span> CircleImageView(getContext(), CIRCLE_BG_LIGHT, CIRCLE_DIAMETER/<span class="number">2</span>);</span><br><span class="line">    mProgress = <span class="keyword">new</span> MaterialProgressDrawable(getContext(), <span class="keyword">this</span>);</span><br><span class="line">    mProgress.setBackgroundColor(CIRCLE_BG_LIGHT);</span><br><span class="line">    mCircleView.setImageDrawable(mProgress);</span><br><span class="line">    mCircleView.setVisibility(View.GONE);</span><br><span class="line">    addView(mCircleView);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>初始化的时候创建一个出来一个 View （下拉刷新的圆圈）。可以看出使用背景圆圈是 v4 包里提供的 <code>CircleImageView</code> 控件，中间的是 <code>MaterialProgressDrawable</code> 进度条。<br>另一个 View 是在 xml 中包含的可滚动视图。</p>
<h4 id="2-onMeasure">2.onMeasure</h4><p>onMeasure 确定子视图的大小。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class="line">    <span class="keyword">if</span> (mTarget == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="comment">// 确定内部要滚动的View，如 RecycleView</span></span><br><span class="line">        ensureTarget();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mTarget == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 测量子 View （mTarget）</span></span><br><span class="line">    mTarget.measure(MeasureSpec.makeMeasureSpec(</span><br><span class="line">            getMeasuredWidth() - getPaddingLeft() - getPaddingRight(),</span><br><span class="line">            MeasureSpec.EXACTLY), MeasureSpec.makeMeasureSpec(</span><br><span class="line">            getMeasuredHeight() - getPaddingTop() - getPaddingBottom(), MeasureSpec.EXACTLY));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 测量刷新的圆圈 mCircleView</span></span><br><span class="line">    mCircleView.measure(MeasureSpec.makeMeasureSpec(mCircleWidth, MeasureSpec.EXACTLY),</span><br><span class="line">            MeasureSpec.makeMeasureSpec(mCircleHeight, MeasureSpec.EXACTLY));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!mUsingCustomStart &amp;&amp; !mOriginalOffsetCalculated) &#123;</span><br><span class="line">        mOriginalOffsetCalculated = <span class="keyword">true</span>;</span><br><span class="line">        mCurrentTargetOffsetTop = mOriginalOffsetTop = -mCircleView.getMeasuredHeight();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算 mCircleView 在 ViewGroup 中的索引</span></span><br><span class="line">    mCircleViewIndex = -<span class="number">1</span>;</span><br><span class="line">    <span class="comment">// Get the index of the circleview.</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; getChildCount(); index++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (getChildAt(index) == mCircleView) &#123;</span><br><span class="line">            mCircleViewIndex = index;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这个步骤确定了 mCircleView 和 SwipeRefreshLayout 的子视图的大小。</p>
<h4 id="3-onLayout">3.onLayout</h4><p>onLayout 主要负责确定各个子视图的位置。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onLayout</span><span class="params">(<span class="keyword">boolean</span> changed, <span class="keyword">int</span> left, <span class="keyword">int</span> top, <span class="keyword">int</span> right, <span class="keyword">int</span> bottom)</span> </span>&#123;</span><br><span class="line">   <span class="comment">// 获取 SwipeRefreshLayout 的宽高</span></span><br><span class="line">   <span class="keyword">final</span> <span class="keyword">int</span> width = getMeasuredWidth();</span><br><span class="line">   <span class="keyword">final</span> <span class="keyword">int</span> height = getMeasuredHeight();</span><br><span class="line">   <span class="keyword">if</span> (getChildCount() == <span class="number">0</span>) &#123;</span><br><span class="line">       <span class="keyword">return</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span> (mTarget == <span class="keyword">null</span>) &#123;</span><br><span class="line">       ensureTarget();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span> (mTarget == <span class="keyword">null</span>) &#123;</span><br><span class="line">       <span class="keyword">return</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// 考虑到给控件设置 padding，去除 padding 的距离</span></span><br><span class="line">   <span class="keyword">final</span> View child = mTarget;</span><br><span class="line">   <span class="keyword">final</span> <span class="keyword">int</span> childLeft = getPaddingLeft();</span><br><span class="line">   <span class="keyword">final</span> <span class="keyword">int</span> childTop = getPaddingTop();</span><br><span class="line">   <span class="keyword">final</span> <span class="keyword">int</span> childWidth = width - getPaddingLeft() - getPaddingRight();</span><br><span class="line">   <span class="keyword">final</span> <span class="keyword">int</span> childHeight = height - getPaddingTop() - getPaddingBottom();</span><br><span class="line">   <span class="comment">// 设置 mTarget 的位置</span></span><br><span class="line">   child.layout(childLeft, childTop, childLeft + childWidth, childTop + childHeight);</span><br><span class="line">   <span class="keyword">int</span> circleWidth = mCircleView.getMeasuredWidth();</span><br><span class="line">   <span class="keyword">int</span> circleHeight = mCircleView.getMeasuredHeight();</span><br><span class="line">   <span class="comment">// 根据 mCurrentTargetOffsetTop 变量的值来设置 mCircleView 的位置</span></span><br><span class="line">   mCircleView.layout((width / <span class="number">2</span> - circleWidth / <span class="number">2</span>), mCurrentTargetOffsetTop,</span><br><span class="line">           (width / <span class="number">2</span> + circleWidth / <span class="number">2</span>), mCurrentTargetOffsetTop + circleHeight);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/8df6d458-700b-4ec5-b731-c6b8c34cdddc.png" alt="图片"></p>
<p>在 onLayout 中放置了 mCircleView 的位置，注意 顶部位置是 mCurrentTargetOffsetTop ，mCurrentTargetOffsetTop 初始距离是<code>-mCircleView.getMeasuredHeight()</code>，所以是在 SwipeRefreshLayout 外。</p>
<blockquote>
<p>经过以上几个步骤，SwipeRefreshLayout 创建了子视图，确定他们的大小、位置，现在所有视图可以显示在界面了。</p>
</blockquote>
<h3 id="处理与子视图的滚动交互">处理与子视图的滚动交互</h3><p>下拉刷新控件的主要功能是当子视图下拉到最顶部时，继续下拉可以出现刷新动画。而子视图可以滚动时需要将所有滚动事件都交给子视图。借助 Android 提供的 NestedScrolling 机制，使得 SwipeRefreshLayout 很轻松的解决了与子视图的滚动冲突问题。<br>SwipeRefreshLayout 通过实现 <code>NestedScrollingParent</code> 和 <code>NestedScrollingChild</code> 接口来处理滚动冲突。SwipeRefreshLayout 作为 Parent 嵌套一个可以滚动的子视图，那么就需要了解一下 NestedScrollingParent 接口</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> 当你希望自己的自定义布局支持嵌套子视图并且处理滚动操作，就可以实现该接口。</span><br><span class="line"> 实现这个接口后可以创建一个 NestedScrollingParentHelper 字段，使用它来帮助你处理大部分的方法。</span><br><span class="line"> 处理嵌套的滚动时应该使用  `ViewCompat`，`ViewGroupCompat`或`ViewParentCompat` 中的方法来处理，这是一些兼容库，</span><br><span class="line"> 他们保证 Android 5.0之前的兼容性垫片的静态方法，这样可以兼容 Android 5.0 之前的版本。</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">NestedScrollingParent</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 当子视图调用 startNestedScroll(View, int) 后调用该方法。返回 true 表示响应子视图的滚动。</span><br><span class="line">     * 实现这个方法来声明支持嵌套滚动，如果返回 true，那么这个视图将要配合子视图嵌套滚动。当嵌套滚动结束时会调用到 onStopNestedScroll(View)。</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> child 可滚动的子视图</span><br><span class="line">     * <span class="doctag">@param</span> target NestedScrollingParent 的直接可滚动的视图，一般情况就是 child</span><br><span class="line">     * <span class="doctag">@param</span> nestedScrollAxes 包含 ViewCompat#SCROLL_AXIS_HORIZONTAL, ViewCompat#SCROLL_AXIS_VERTICAL 或者两个值都有。</span><br><span class="line">     * <span class="doctag">@return</span> 返回 true 表示响应子视图的滚动。</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onStartNestedScroll</span><span class="params">(View child, View target, <span class="keyword">int</span> nestedScrollAxes)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 如果 onStartNestedScroll 返回 true ，然后走该方法，这个方法里可以做一些初始化。</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNestedScrollAccepted</span><span class="params">(View child, View target, <span class="keyword">int</span> nestedScrollAxes)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 子视图开始滚动前会调用这个方法。这时候父布局（也就是当前的 NestedScrollingParent 的实现类）可以通过这个方法来配合子视图同时处理滚动事件。</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> target 滚动的子视图</span><br><span class="line">     * <span class="doctag">@param</span> dx 绝对值为手指在x方向滚动的距离，dx&lt;0 表示手指在屏幕向右滚动</span><br><span class="line">     * <span class="doctag">@param</span> dy 绝对值为手指在y方向滚动的距离，dy&lt;0 表示手指在屏幕向下滚动</span><br><span class="line">     * <span class="doctag">@param</span> consumed 一个数组，值用来表示父布局消耗了多少距离，未消耗前为[0,0], 如果父布局想处理滚动事件，就可以在这个方法的实现中为consumed[0]，consumed[1]赋值。</span><br><span class="line">     *                 分别表示x和y方向消耗的距离。如父布局想在竖直方向（y）完全拦截子视图，那么让 consumed[1] = dy，就把手指产生的触摸事件给拦截了，子视图便响应不到触摸事件了 。</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNestedPreScroll</span><span class="params">(View target, <span class="keyword">int</span> dx, <span class="keyword">int</span> dy, <span class="keyword">int</span>[] consumed)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span><br><span class="line">     * 这个方法表示子视图正在滚动，并且把滚动距离回调用到该方法，前提是 onStartNestedScroll 返回了 true。</span><br><span class="line">     * &lt;p&gt;Both the consumed and unconsumed portions of the scroll distance are reported to the</span><br><span class="line">     * ViewParent. An implementation may choose to use the consumed portion to match or chase scroll</span><br><span class="line">     * position of multiple child elements, for example. The unconsumed portion may be used to</span><br><span class="line">     * allow continuous dragging of multiple scrolling or draggable elements, such as scrolling</span><br><span class="line">     * a list within a vertical drawer where the drawer begins dragging once the edge of inner</span><br><span class="line">     * scrolling content is reached.&lt;/p&gt;</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> target 滚动的子视图</span><br><span class="line">     * <span class="doctag">@param</span> dxConsumed 手指产生的触摸距离中，子视图消耗的x方向的距离</span><br><span class="line">     * <span class="doctag">@param</span> dyConsumed 手指产生的触摸距离中，子视图消耗的y方向的距离 ，如果 onNestedPreScroll 中 dy = 20， consumed[0] = 8，那么 dy = 12</span><br><span class="line">      * <span class="doctag">@param</span> dxUnconsumed 手指产生的触摸距离中，未被子视图消耗的x方向的距离</span><br><span class="line">     * <span class="doctag">@param</span> dyUnconsumed 手指产生的触摸距离中，未被子视图消耗的y方向的距离</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNestedScroll</span><span class="params">(View target, <span class="keyword">int</span> dxConsumed, <span class="keyword">int</span> dyConsumed,<span class="keyword">int</span> dxUnconsumed, <span class="keyword">int</span> dyUnconsumed)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 响应嵌套滚动结束</span><br><span class="line">     *</span><br><span class="line">     * 当一个嵌套滚动结束后（如MotionEvent#ACTION_UP， MotionEvent#ACTION_CANCEL）会调用该方法，在这里可有做一些收尾工作，比如变量重置</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStopNestedScroll</span><span class="params">(View target)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 手指在屏幕快速滑触发Fling前回调，如果前面 onNestedPreScroll 中父布局消耗了事件，那么这个也会被触发</span><br><span class="line">     * 返回true表示父布局完全处理 fling 事件</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> target 滚动的子视图</span><br><span class="line">     * <span class="doctag">@param</span> velocityX x方向的速度（px/s）</span><br><span class="line">     * <span class="doctag">@param</span> velocityY y方向的速度</span><br><span class="line">     * <span class="doctag">@return</span> true if this parent consumed the fling ahead of the target view</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onNestedPreFling</span><span class="params">(View target, <span class="keyword">float</span> velocityX, <span class="keyword">float</span> velocityY)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 子视图fling 时回调，父布局可以选择监听子视图的 fling。</span><br><span class="line">     * true 表示父布局处理 fling，false表示父布局监听子视图的fling</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> target View that initiated the nested scroll</span><br><span class="line">     * <span class="doctag">@param</span> velocityX Horizontal velocity in pixels per second</span><br><span class="line">     * <span class="doctag">@param</span> velocityY Vertical velocity in pixels per second</span><br><span class="line">     * <span class="doctag">@param</span> consumed true 表示子视图处理了fling</span><br><span class="line"></span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onNestedFling</span><span class="params">(View target, <span class="keyword">float</span> velocityX, <span class="keyword">float</span> velocityY, <span class="keyword">boolean</span> consumed)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 返回当前 NestedScrollingParent 的滚动方向，</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@return</span></span><br><span class="line">     * <span class="doctag">@see</span> ViewCompat#SCROLL_AXIS_HORIZONTAL</span><br><span class="line">     * <span class="doctag">@see</span> ViewCompat#SCROLL_AXIS_VERTICAL</span><br><span class="line">     * <span class="doctag">@see</span> ViewCompat#SCROLL_AXIS_NONE</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getNestedScrollAxes</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>看一下 SwipeRefreshLayout 实现 NestedScrollingParent 的相关方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// NestedScrollingParent</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 子 View （NestedScrollingChild）开始滚动前回调此方法,返回 true 表示接 Parent 收嵌套滚动，然后调用 onNestedScrollAccepted</span></span><br><span class="line"><span class="comment">// 具体可以看 NestedScrollingChildHelper 的源码</span></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onStartNestedScroll</span><span class="params">(View child, View target, <span class="keyword">int</span> nestedScrollAxes)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 子 View 回调，判断是否开始嵌套滚动 ，</span></span><br><span class="line">    <span class="keyword">return</span> isEnabled() &amp;&amp; !mReturningToStart &amp;&amp; !mRefreshing</span><br><span class="line">            &amp;&amp; (nestedScrollAxes &amp; ViewCompat.SCROLL_AXIS_VERTICAL) != <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNestedScrollAccepted</span><span class="params">(View child, View target, <span class="keyword">int</span> axes)</span> </span>&#123;</span><br><span class="line">     <span class="comment">// Reset the counter of how much leftover scroll needs to be consumed.</span></span><br><span class="line">     mNestedScrollingParentHelper.onNestedScrollAccepted(child, target, axes);</span><br><span class="line"></span><br><span class="line">     <span class="comment">// ...省略代码</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p>
<p>SwipeRefreshLayout 只接受竖直方向（Y轴）的滚动，并且在刷新动画进行中不接受滚动。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// NestedScrollingChild 在滚动的时候会触发， 看父类消耗了多少距离</span></span><br><span class="line"><span class="comment">//   * @param dx x 轴滚动的距离</span></span><br><span class="line"><span class="comment">//   * @param dy y 轴滚动的距离</span></span><br><span class="line"><span class="comment">//   * @param consumed 代表 父 View 消费的滚动距离</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNestedPreScroll</span><span class="params">(View target, <span class="keyword">int</span> dx, <span class="keyword">int</span> dy, <span class="keyword">int</span>[] consumed)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// dy &gt; 0 表示手指在屏幕向上移动</span></span><br><span class="line">    <span class="comment">//  mTotalUnconsumed 表示子视图Y轴未消费的距离</span></span><br><span class="line">    <span class="comment">// 现在表示</span></span><br><span class="line">    <span class="keyword">if</span> (dy &gt; <span class="number">0</span> &amp;&amp; mTotalUnconsumed &gt; <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (dy &gt; mTotalUnconsumed) &#123;</span><br><span class="line">            consumed[<span class="number">1</span>] = dy - (<span class="keyword">int</span>) mTotalUnconsumed; <span class="comment">// SwipeRefreshLayout 就吧子视图位消费的距离全部消费了。</span></span><br><span class="line">            mTotalUnconsumed = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mTotalUnconsumed -= dy; <span class="comment">// 消费的 y 轴的距离</span></span><br><span class="line">            consumed[<span class="number">1</span>] = dy;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 出现动画圆圈，并向上移动</span></span><br><span class="line">        moveSpinner(mTotalUnconsumed);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ... 省略代码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// onStartNestedScroll 返回 true 才会调用此方法。此方法表示子View将滚动事件分发到父 View（SwipeRefreshLayout）</span></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNestedScroll</span><span class="params">(<span class="keyword">final</span> View target, <span class="keyword">final</span> <span class="keyword">int</span> dxConsumed, <span class="keyword">final</span> <span class="keyword">int</span> dyConsumed,</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> dxUnconsumed, <span class="keyword">final</span> <span class="keyword">int</span> dyUnconsumed)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ... 省略代码</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// This is a bit of a hack. Nested scrolling works from the bottom up, and as we are</span></span><br><span class="line">    <span class="comment">// sometimes between two nested scrolling views, we need a way to be able to know when any</span></span><br><span class="line">    <span class="comment">// nested scrolling parent has stopped handling events. We do that by using the</span></span><br><span class="line">    <span class="comment">// 'offset in window 'functionality to see if we have been moved from the event.</span></span><br><span class="line">    <span class="comment">// This is a decent indication of whether we should take over the event stream or not.</span></span><br><span class="line">    <span class="comment">// 手指在屏幕上向下滚动，并且子视图不可以滚动</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> dy = dyUnconsumed + mParentOffsetInWindow[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> (dy &lt; <span class="number">0</span> &amp;&amp; !canChildScrollUp()) &#123;</span><br><span class="line">        mTotalUnconsumed += Math.abs(dy);</span><br><span class="line">        moveSpinner(mTotalUnconsumed);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>SwipeRefreshLayout 通过 NestedScrollingParent 接口完成了处理子视图的滚动的冲突，中间省略了一些 SwipeRefreshLayout作为 child 的相关代码，这种情况是为了兼容将 SwipeRefreshLayout 作为子视图放在知识嵌套滚动的父布局的情况，这里不做深入讨论。但是下拉刷新需要判断手指在屏幕的状态来进行一个刷新的动画，所以我们还需要处理触摸事件，判断手指在屏幕中的状态。</p>
<p>首先是 onInterceptTouchEvent，返回 true 表示拦截触摸事件。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onInterceptTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line">    ensureTarget();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> action = MotionEventCompat.getActionMasked(ev);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 手指按下时恢复状态</span></span><br><span class="line">    <span class="keyword">if</span> (mReturningToStart &amp;&amp; action == MotionEvent.ACTION_DOWN) &#123;</span><br><span class="line">        mReturningToStart = <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 控件可用 || 刷新事件刚结束正在恢复初始状态时 || 子 View 可滚动 || 正在刷新 || 父 View 正在滚动</span></span><br><span class="line">    <span class="keyword">if</span> (!isEnabled() || mReturningToStart || canChildScrollUp()</span><br><span class="line">            || mRefreshing || mNestedScrollInProgress) &#123;</span><br><span class="line">        <span class="comment">// Fail fast if we're not in a state where a swipe is possible</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (action) &#123;</span><br><span class="line">        <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</span><br><span class="line">            setTargetOffsetTopAndBottom(mOriginalOffsetTop - mCircleView.getTop(), <span class="keyword">true</span>);</span><br><span class="line">            mActivePointerId = MotionEventCompat.getPointerId(ev, <span class="number">0</span>);</span><br><span class="line">            mIsBeingDragged = <span class="keyword">false</span>;</span><br><span class="line">            <span class="comment">// 记录手指按下的位置，为了判断是否开始滚动</span></span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">float</span> initialDownY = getMotionEventY(ev, mActivePointerId);</span><br><span class="line">            <span class="keyword">if</span> (initialDownY == -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            mInitialDownY = initialDownY;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span><br><span class="line">            <span class="keyword">if</span> (mActivePointerId == INVALID_POINTER) &#123;</span><br><span class="line">                Log.e(LOG_TAG, <span class="string">"Got ACTION_MOVE event but don't have an active pointer id."</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">float</span> y = getMotionEventY(ev, mActivePointerId);</span><br><span class="line">            <span class="keyword">if</span> (y == -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 判断当拖动距离大于最小距离时设置 mIsBeingDragged = true;</span></span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">float</span> yDiff = y - mInitialDownY;</span><br><span class="line">            <span class="keyword">if</span> (yDiff &gt; mTouchSlop &amp;&amp; !mIsBeingDragged) &#123;</span><br><span class="line">                mInitialMotionY = mInitialDownY + mTouchSlop;</span><br><span class="line">                mIsBeingDragged = <span class="keyword">true</span>;</span><br><span class="line">                <span class="comment">// 正在拖动状态，更新圆圈的 progressbar 的 alpha 值</span></span><br><span class="line">                mProgress.setAlpha(STARTING_PROGRESS_ALPHA);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> MotionEventCompat.ACTION_POINTER_UP:</span><br><span class="line">            onSecondaryPointerUp(ev);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> MotionEvent.ACTION_UP:</span><br><span class="line">        <span class="keyword">case</span> MotionEvent.ACTION_CANCEL:</span><br><span class="line">            mIsBeingDragged = <span class="keyword">false</span>;</span><br><span class="line">            mActivePointerId = INVALID_POINTER;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> mIsBeingDragged;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以看到源码也就是进行简单处理，DOWN 的时候记录一下位置，MOVE 时判断移动的距离，返回值 mIsBeingDragged 为 true 时， 即 onInterceptTouchEvent 返回true，SwipeRefreshLayout 拦截触摸事件，不分发给 mTarget，然后把 MotionEvent 传给 onTouchEvent 方法。其中有一个判断子View的是否还可以滚动的方法 <code>canChildScrollUp</code>。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * <span class="doctag">@return</span> Whether it is possible for the child view of this layout to</span><br><span class="line"> *         scroll up. Override this if the child view is a custom view.</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canChildScrollUp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (android.os.Build.VERSION.SDK_INT &lt; <span class="number">14</span>) &#123;</span><br><span class="line">        <span class="comment">// 判断 AbsListView 的子类 ListView 或者 GridView 等</span></span><br><span class="line">        <span class="keyword">if</span> (mTarget <span class="keyword">instanceof</span> AbsListView) &#123;</span><br><span class="line">            <span class="keyword">final</span> AbsListView absListView = (AbsListView) mTarget;</span><br><span class="line">            <span class="keyword">return</span> absListView.getChildCount() &gt; <span class="number">0</span></span><br><span class="line">                    &amp;&amp; (absListView.getFirstVisiblePosition() &gt; <span class="number">0</span> || absListView.getChildAt(<span class="number">0</span>)</span><br><span class="line">                            .getTop() &lt; absListView.getPaddingTop());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> ViewCompat.canScrollVertically(mTarget, -<span class="number">1</span>) || mTarget.getScrollY() &gt; <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ViewCompat.canScrollVertically(mTarget, -<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当SwipeRefreshLayout 拦截了触摸事件之后（ mIsBeingDragged 为 true ），将 MotionEvent 交给 onTouchEvent 处理。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ... 省略代码</span></span><br><span class="line">    <span class="keyword">switch</span> (action) &#123;</span><br><span class="line">        <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</span><br><span class="line">            <span class="comment">// 获取第一个按下的手指</span></span><br><span class="line">            mActivePointerId = MotionEventCompat.getPointerId(ev, <span class="number">0</span>);</span><br><span class="line">            mIsBeingDragged = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> MotionEvent.ACTION_MOVE: &#123;</span><br><span class="line">            <span class="comment">// 处理多指触控</span></span><br><span class="line">            pointerIndex = MotionEventCompat.findPointerIndex(ev, mActivePointerId);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// ... 省略代码</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">float</span> y = MotionEventCompat.getY(ev, pointerIndex);</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">float</span> overscrollTop = (y - mInitialMotionY) * DRAG_RATE;</span><br><span class="line">            <span class="keyword">if</span> (mIsBeingDragged) &#123;</span><br><span class="line">                <span class="keyword">if</span> (overscrollTop &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="comment">// 正在拖动状态，更新圆圈的位置</span></span><br><span class="line">                    moveSpinner(overscrollTop);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ... 省略代码</span></span><br><span class="line">        <span class="keyword">case</span> MotionEvent.ACTION_UP: &#123;</span><br><span class="line">            pointerIndex = MotionEventCompat.findPointerIndex(ev, mActivePointerId);</span><br><span class="line">            <span class="keyword">if</span> (pointerIndex &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                Log.e(LOG_TAG, <span class="string">"Got ACTION_UP event but don't have an active pointer id."</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">float</span> y = MotionEventCompat.getY(ev, pointerIndex);</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">float</span> overscrollTop = (y - mInitialMotionY) * DRAG_RATE;</span><br><span class="line">            mIsBeingDragged = <span class="keyword">false</span>;</span><br><span class="line">            <span class="comment">// 手指松开，将圆圈移动到正确的位置</span></span><br><span class="line">            finishSpinner(overscrollTop);</span><br><span class="line">            mActivePointerId = INVALID_POINTER;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// ... 省略代码</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>在手指滚动过程中通过判断 mIsBeingDragged 来移动刷新的圆圈（对应的是 moveSpinner ），手指松开将圆圈移动到正确位置（初始位置或者刷新动画的位置，对应的是 finishSpinner 方法）。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 手指下拉过程中触发的圆圈的变化过程，透明度变化，渐渐出现箭头，大小的变化</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">moveSpinner</span><span class="params">(<span class="keyword">float</span> overscrollTop)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置为有箭头的 progress</span></span><br><span class="line">    mProgress.showArrow(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 进度转化成百分比</span></span><br><span class="line">    <span class="keyword">float</span> originalDragPercent = overscrollTop / mTotalDragDistance;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 避免百分比超过 100%</span></span><br><span class="line">    <span class="keyword">float</span> dragPercent = Math.min(<span class="number">1f</span>, Math.abs(originalDragPercent));</span><br><span class="line">    <span class="comment">// 调整拖动百分比，造成视差效果</span></span><br><span class="line">    <span class="keyword">float</span> adjustedPercent = (<span class="keyword">float</span>) Math.max(dragPercent - .<span class="number">4</span>, <span class="number">0</span>) * <span class="number">5</span> / <span class="number">3</span>;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">float</span> extraOS = Math.abs(overscrollTop) - mTotalDragDistance;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这里mUsingCustomStart 为 true 代表用户自定义了起始出现的坐标</span></span><br><span class="line">    <span class="keyword">float</span> slingshotDist = mUsingCustomStart ? mSpinnerFinalOffset - mOriginalOffsetTop</span><br><span class="line">            : mSpinnerFinalOffset;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 弹性系数</span></span><br><span class="line">    <span class="keyword">float</span> tensionSlingshotPercent = Math.max(<span class="number">0</span>, Math.min(extraOS, slingshotDist * <span class="number">2</span>)</span><br><span class="line">            / slingshotDist);</span><br><span class="line">    <span class="keyword">float</span> tensionPercent = (<span class="keyword">float</span>) ((tensionSlingshotPercent / <span class="number">4</span>) - Math.pow(</span><br><span class="line">            (tensionSlingshotPercent / <span class="number">4</span>), <span class="number">2</span>)) * <span class="number">2f</span>;</span><br><span class="line">    <span class="keyword">float</span> extraMove = (slingshotDist) * tensionPercent * <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 因为有弹性系数，不同的手指滚动距离不同于view的移动距离</span></span><br><span class="line">    <span class="keyword">int</span> targetY = mOriginalOffsetTop + (<span class="keyword">int</span>) ((slingshotDist * dragPercent) + extraMove);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// where 1.0f is a full circle</span></span><br><span class="line">    <span class="keyword">if</span> (mCircleView.getVisibility() != View.VISIBLE) &#123;</span><br><span class="line">        mCircleView.setVisibility(View.VISIBLE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 设置的是否有缩放</span></span><br><span class="line">    <span class="keyword">if</span> (!mScale) &#123;</span><br><span class="line">        ViewCompat.setScaleX(mCircleView, <span class="number">1f</span>);</span><br><span class="line">        ViewCompat.setScaleY(mCircleView, <span class="number">1f</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 设置缩放进度</span></span><br><span class="line">    <span class="keyword">if</span> (mScale) &#123;</span><br><span class="line">        setAnimationProgress(Math.min(<span class="number">1f</span>, overscrollTop / mTotalDragDistance));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 移动距离未达到最大距离</span></span><br><span class="line">    <span class="keyword">if</span> (overscrollTop &lt; mTotalDragDistance) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mProgress.getAlpha() &gt; STARTING_PROGRESS_ALPHA</span><br><span class="line">                &amp;&amp; !isAnimationRunning(mAlphaStartAnimation)) &#123;</span><br><span class="line">            <span class="comment">// Animate the alpha</span></span><br><span class="line">            startProgressAlphaStartAnimation();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (mProgress.getAlpha() &lt; MAX_ALPHA &amp;&amp; !isAnimationRunning(mAlphaMaxAnimation)) &#123;</span><br><span class="line">            <span class="comment">// Animate the alpha</span></span><br><span class="line">            startProgressAlphaMaxAnimation();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 出现的进度，裁剪 mProgress</span></span><br><span class="line">    <span class="keyword">float</span> strokeStart = adjustedPercent * .<span class="number">8f</span>;</span><br><span class="line">    mProgress.setStartEndTrim(<span class="number">0f</span>, Math.min(MAX_PROGRESS_ANGLE, strokeStart));</span><br><span class="line">    mProgress.setArrowScale(Math.min(<span class="number">1f</span>, adjustedPercent));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 旋转</span></span><br><span class="line">    <span class="keyword">float</span> rotation = (-<span class="number">0.25f</span> + .<span class="number">4f</span> * adjustedPercent + tensionPercent * <span class="number">2</span>) * .<span class="number">5f</span>;</span><br><span class="line">    mProgress.setProgressRotation(rotation);</span><br><span class="line">    setTargetOffsetTopAndBottom(targetY - mCurrentTargetOffsetTop, <span class="keyword">true</span> <span class="comment">/* requires update */</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>刷新圆圈的移动过程也是有好几种状态，看上面的注释基本上就比较清楚了。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">finishSpinner</span><span class="params">(<span class="keyword">float</span> overscrollTop)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (overscrollTop &gt; mTotalDragDistance) &#123;</span><br><span class="line">        <span class="comment">//移动距离超过了刷新的临界值，触发刷新动画</span></span><br><span class="line">        setRefreshing(<span class="keyword">true</span>, <span class="keyword">true</span> <span class="comment">/* notify */</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 取消刷新的圆圈，将圆圈移动到初始位置</span></span><br><span class="line">        mRefreshing = <span class="keyword">false</span>;</span><br><span class="line">        mProgress.setStartEndTrim(<span class="number">0f</span>, <span class="number">0f</span>);</span><br><span class="line">        <span class="comment">// ...省略代码</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 移动到初始位置</span></span><br><span class="line">        animateOffsetToStartPosition(mCurrentTargetOffsetTop, listener);</span><br><span class="line">        <span class="comment">// 设置没有箭头</span></span><br><span class="line">        mProgress.showArrow(<span class="keyword">false</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以看到调用 setRefresh(true,true) 方法触发刷新动画并进行回调，但是这个方法是 private 的。前面提到我们自己调用 setRefresh(true) 只能产生动画，而不能回调刷新函数，那么我们就可以用反射调用 2 个参数的 setRefresh 函数。 或者手动调 setRefreshing(true)+ OnRefreshListener.onRefresh 方法。</p>
<h3 id="setRefresh">setRefresh</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">  * 改变刷新动画的的圆圈刷新状态。Notify the widget that refresh state has changed. Do not call this when</span><br><span class="line">  * refresh is triggered by a swipe gesture.</span><br><span class="line">  *</span><br><span class="line">  * <span class="doctag">@param</span> refreshing 是否显示刷新的圆圈</span><br><span class="line">  */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRefreshing</span><span class="params">(<span class="keyword">boolean</span> refreshing)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (refreshing &amp;&amp; mRefreshing != refreshing) &#123;</span><br><span class="line">         <span class="comment">// scale and show</span></span><br><span class="line">         mRefreshing = refreshing;</span><br><span class="line">         <span class="keyword">int</span> endTarget = <span class="number">0</span>;</span><br><span class="line">         <span class="keyword">if</span> (!mUsingCustomStart) &#123;</span><br><span class="line">             endTarget = (<span class="keyword">int</span>) (mSpinnerFinalOffset + mOriginalOffsetTop);</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">             endTarget = (<span class="keyword">int</span>) mSpinnerFinalOffset;</span><br><span class="line">         &#125;</span><br><span class="line">         setTargetOffsetTopAndBottom(endTarget - mCurrentTargetOffsetTop,</span><br><span class="line">                 <span class="keyword">true</span> <span class="comment">/* requires update */</span>);</span><br><span class="line">         mNotify = <span class="keyword">false</span>;</span><br><span class="line">         startScaleUpAnimation(mRefreshListener);</span><br><span class="line">     &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         setRefreshing(refreshing, <span class="keyword">false</span> <span class="comment">/* notify */</span>);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p>startScaleUpAnimation 开启一个动画，然后在动画结束后回调 onRefresh 方法。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Animation.AnimationListener mRefreshListener = <span class="keyword">new</span> Animation.AnimationListener() &#123;</span><br><span class="line">   <span class="comment">// .. 省略代码</span></span><br><span class="line">   <span class="annotation">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationEnd</span><span class="params">(Animation animation)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (mRefreshing) &#123;</span><br><span class="line">           mProgress.setAlpha(MAX_ALPHA); <span class="comment">//确保刷新圆圈中间的进度条是完全不透明了</span></span><br><span class="line">           mProgress.start();</span><br><span class="line">           <span class="keyword">if</span> (mNotify) &#123; <span class="comment">// 当 mNotify 为 true 时才会回调 onRefresh</span></span><br><span class="line">               <span class="keyword">if</span> (mListener != <span class="keyword">null</span>) &#123;</span><br><span class="line">                   <span class="comment">// 回调 listener 的 onRefresh 方法</span></span><br><span class="line">                   mListener.onRefresh();</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           mCurrentTargetOffsetTop = mCircleView.getTop();</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           reset();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="总结">总结</h2><p>分析 SwipeRefreshLayout 的流程就是按照平时我们自定义 <code>ViewGroup</code> 的流程，但是其中也有好多需要我们借鉴的地方，如何使用 NestedScrolling相关机制 ，多点触控的处理，onMeasure 中减去了 padding，如何判断子 View 是否可滚动，如何确定 ViewGroup 中某一个 View 的索引等。<br>此外，一个好的下拉刷新框架不仅仅要兼容各种滚动的子控件，还要考虑自己要兼容 NestedScrollingChild 的情况，比如放到 CooCoordinatorLayout 的情况，目前大多数开源的下拉刷新好像都没有达到这个要求，一般都是只考虑了内部嵌套滚动子视图的情况，没有考虑自己作为滚动子视图的情况。</p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="简介">简介</h2><p><a href="http://developer.android.com/intl/zh-cn/reference/android/support/v4/widget/SwipeRefreshLayout.html">官方文档</a></p>
<p><code>SwipeRefreshLayout</code> 是一个下拉刷新控件，几乎可以包裹一个任何可以滚动的内容（ListView GridView ScrollView RecyclerView），可以自动识别垂直滚动手势。使用起来非常方便。</p>]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
      <category term="SwipeRefreshLayout" scheme="http://hanks.xyz/tags/SwipeRefreshLayout/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Leancloud 进行网站托管]]></title>
    <link href="http://hanks.xyz/2016/06/05/leancloud-website/"/>
    <id>http://hanks.xyz/2016/06/05/leancloud-website/</id>
    <published>2016-06-05T15:04:34.000Z</published>
    <updated>2016-06-05T15:17:43.000Z</updated>
    <content type="html"><![CDATA[<p>Leancloud 提供了网站托管功能。文档：<a href="https://leancloud.cn/docs/leanengine_webhosting_guide-node.html" target="_blank" rel="external">网站托管开发指南 · Node.js</a></p>
<p>网址： <a href="http://bookshelf.leanapp.cn/" target="_blank" rel="external">http://bookshelf.leanapp.cn/</a></p>
<p><img src="http://ww1.sinaimg.cn/large/8c9b876fjw1f4kralm68gj20w01m37d6.jpg" alt=""></p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
      <category term="leancloud" scheme="http://hanks.xyz/tags/leancloud/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android 中获取当前的 Activity]]></title>
    <link href="http://hanks.xyz/2016/06/02/get-activity/"/>
    <id>http://hanks.xyz/2016/06/02/get-activity/</id>
    <published>2016-06-02T14:03:29.000Z</published>
    <updated>2016-06-02T14:20:19.000Z</updated>
    <content type="html"><![CDATA[<p>需求：获取当前的 <code>Activity</code> 对象，<code>Activity</code> 是系统创建的，一种方法：在 <code>onCreate</code> 的时候拿到引用，这样就得修改 <code>onCreate</code> 方法，还得维护一个数组去管理 <code>Activity</code> 的引用。第二种方法：通过反射拿到 <code>ActivityThread</code> 中的 <code>mActivities</code> 属性，进而拿到当前的 activity 对象（ paused 为 false 的activity）。</p>
<figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Activity getActivity() &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Class activityThreadClass = Class.forName(<span class="string">"android.app.ActivityThread"</span>);</span><br><span class="line">        <span class="keyword">Object</span> activityThread = activityThreadClass.getMethod(<span class="string">"currentActivityThread"</span>).invoke(<span class="keyword">null</span>);</span><br><span class="line">        Field activitiesField = activityThreadClass.getDeclaredField(<span class="string">"mActivities"</span>);</span><br><span class="line">        activitiesField.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        Map activities = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.KITKAT) &#123; <span class="comment">// 4.4 以下使用的是 HashMap</span></span><br><span class="line">            activities = (<span class="keyword">HashMap</span>) activitiesField.<span class="built_in">get</span>(activityThread);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123; <span class="comment">// 4.4 以上使用的是 ArrayMap</span></span><br><span class="line">            activities = (ArrayMap) activitiesField.<span class="built_in">get</span>(activityThread);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">Object</span> activityRecord : activities.values()) &#123;</span><br><span class="line">            Class activityRecordClass = activityRecord.getClass();</span><br><span class="line">            Field pausedField = activityRecordClass.getDeclaredField(<span class="string">"paused"</span>); <span class="comment">// 找到 paused 为 false 的activity</span></span><br><span class="line">            pausedField.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            <span class="keyword">if</span> (!pausedField.getBoolean(activityRecord)) &#123;</span><br><span class="line">                Field activityField = activityRecordClass.getDeclaredField(<span class="string">"activity"</span>);</span><br><span class="line">                activityField.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                Activity activity = (Activity) activityField.<span class="built_in">get</span>(activityRecord);</span><br><span class="line">                <span class="keyword">return</span> activity;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Node.js 爬微信文章]]></title>
    <link href="http://hanks.xyz/2016/05/26/node-spider/"/>
    <id>http://hanks.xyz/2016/05/26/node-spider/</id>
    <published>2016-05-26T14:45:43.000Z</published>
    <updated>2016-05-29T13:05:13.000Z</updated>
    <content type="html"><![CDATA[<p>利用 Node 来抓取网页中需要的信息。<br><a id="more"></a></p>
<h3 id="环境准备">环境准备</h3><ol>
<li>基本环境： node &amp;&amp; npm</li>
<li>cheerio 模块：解析 HTML</li>
</ol>
<p>安装 cheerio 通过 <code>npm install cheerio</code></p>
<h3 id="获取网页源码">获取网页源码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 微信文章 : Android</span></span><br><span class="line"><span class="keyword">var</span> start_url = <span class="string">"http://weixin.sogou.com/weixin?query=android&amp;type=2&amp;page=2&amp;ie=utf8"</span></span><br><span class="line">http.get(start_url, <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> html = <span class="string">''</span></span><br><span class="line">    res.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">        html += data</span><br><span class="line">    &#125;)</span><br><span class="line">    res.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(html) <span class="comment">// 打印网页源码</span></span><br><span class="line">        filterWeixinArticle(html)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;).on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'获取信息失败'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>通过 <code>http</code> 模块打印出来网页的源码：<br><img src="https://dn-coding-net-production-pp.qbox.me/14a7d0ce-a360-4756-97f7-2ce80ba4570c.png" alt="图片"><br>然后使用 cheerio 解析 HTML 字符串。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">'cheerio'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filterWeixinArticle</span>(<span class="params">html</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $ = cheerio.load(html)</span><br><span class="line">    <span class="keyword">var</span> items = $(<span class="string">'.wx-rb'</span>)</span><br><span class="line">    items.each(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> article = $(<span class="keyword">this</span>)</span><br><span class="line">        <span class="comment">// 文章标题</span></span><br><span class="line">        <span class="keyword">var</span> title = article.find(<span class="string">'h4'</span>).text().replace(<span class="regexp">/\s+/g</span>, <span class="string">''</span>)</span><br><span class="line">        <span class="comment">// 副标题</span></span><br><span class="line">        <span class="keyword">var</span> subtitle = article.find(<span class="string">'p'</span>).text().replace(<span class="regexp">/\s+/g</span>, <span class="string">''</span>)</span><br><span class="line">        <span class="comment">// 文章完整的url</span></span><br><span class="line">        <span class="keyword">var</span> url = article.find(<span class="string">'h4 a'</span>).attr(<span class="string">'href'</span>).replace(<span class="regexp">/\s+/g</span>, <span class="string">''</span>)</span><br><span class="line">        <span class="comment">// 文章 id</span></span><br><span class="line">        <span class="keyword">var</span> id = article.attr(<span class="string">'d'</span>).replace(<span class="regexp">/\s+/g</span>, <span class="string">''</span>)</span><br><span class="line">        <span class="comment">// 作者名字</span></span><br><span class="line">        <span class="keyword">var</span> authorName = article.find(<span class="string">'.s-p a'</span>).attr(<span class="string">'title'</span>)</span><br><span class="line">        <span class="comment">// 作者主页</span></span><br><span class="line">        <span class="keyword">var</span> authorUrl = article.find(<span class="string">'.s-p a'</span>).attr(<span class="string">'href'</span>)</span><br><span class="line">        <span class="keyword">var</span> articleFrom = <span class="string">"weixin"</span></span><br><span class="line">        <span class="keyword">var</span> articleItem = &#123;</span><br><span class="line">            title: title,</span><br><span class="line">            subtitle: subtitle,</span><br><span class="line">            url: url,</span><br><span class="line">            article_id: id,</span><br><span class="line">            article_from: articleFrom,</span><br><span class="line">            author_name: authorName,</span><br><span class="line">            author_url: authorUrl</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'title:'</span> + articleItem.title</span><br><span class="line">            + <span class="string">'\nsubtitle:'</span> + articleItem.subtitle</span><br><span class="line">            + <span class="string">'\nurl:'</span> + articleItem.url</span><br><span class="line">            + <span class="string">'\nid:'</span> + articleItem.article_id</span><br><span class="line">            + <span class="string">'\nname:'</span> + articleItem.author_name</span><br><span class="line">            + <span class="string">'\naaurl:'</span> + articleItem.author_url</span><br><span class="line">            + <span class="string">'\n.................................\n\n'</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">title:Android日常开发总结的技术经验<span class="number">60</span>条</span><br><span class="line">subtitle:通过设置的控件transcriptMode属性可以将Android平台的控件(支持ScrollBar)自动滑动到最底部<span class="built_in">.</span>Longa;判断a有没有赋值,<span class="keyword">if</span>(a==<span class="number">0</span>)在a没有赋值情况下会报错<span class="built_in">.</span>应该<span class="keyword">if</span>(a==<span class="built_in">null</span>),<span class="built_in">Integer</span>、Floag等也一样,原因你懂,只是提醒你要小心喔<span class="built_in">.</span>编码遇到读写、出入等逻辑要双向考虑,文件导<span class="attribute">...</span></span><br><span class="line">url:http:<span class="comment">//mp.weixin.qq.com/s?src=3&amp;timestamp=1464274994&amp;ver=1&amp;signature=NXYpqtVv4fKUBsqFpmpIR5CCHHrGvqE6kXYMOsigc3oyj3OyPsTNX5bpgdQsFXmjmZEwNPQGIzTo7n*xz*ZEtoEL99CHcWPqZfPhwEIOgJbDZpQ3QI*Lmi-WNogIDeU2Vsx0M*OBbeUFxZSNt6KBS8HK8*qEMmcCW1XembHPhnM=</span></span><br><span class="line">id:ab735a258a90e8e1-<span class="number">6</span>bee54fcbd896b2a<span class="attribute">-fd14b35016ff8b667ee4beb6300264b9</span></span><br><span class="line">name:IT大牛人</span><br><span class="line">aaurl:http:<span class="comment">//mp.weixin.qq.com/profile?src=3&amp;timestamp=1464274994&amp;ver=1&amp;signature=9gqKRZeyNAYOmC8LKClHnlInQNVhvVkRjZfPgtYSSsR9SXHOfO*4q1rMqKpqgjHOC5Fd2iIltr*sI2NHUJo9Pg==</span></span><br><span class="line"><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">title:Android开发和Java开发有什么区别</span><br><span class="line">subtitle:经常听说学Android开发首先要学Java语言,后来又听说还有Java开发这个行业,很是好奇,Android开发和Java开发有什么区别?之前了解到Android系统是基于Linux内核和驱动都是使用C/C++语言做开发,为什么又要选择Java作为开发语言呢?经过最近研究发现,原来是这么回事,废话不多<span class="attribute">...</span></span><br><span class="line">url:http:<span class="comment">//mp.weixin.qq.com/s?src=3&amp;timestamp=1464274994&amp;ver=1&amp;signature=W*P4mHe*NUJ99i3nNo7TOIjf6YTu1QpurBdRu9pJulqkSCAR0B-jiAexfATJbmqpxz6o0zqF7*f0BBzqiHM6i1WomQG4RbwETSl0x8NNwpBoPkMqzP9IIPe5a9p8pZgX3QjnD2l6WUUfiIdSpo3clCsxV0RoSQuPrkLhKZNrzkg=</span></span><br><span class="line">id:ab735a258a90e8e1-<span class="number">6</span>bee54fcbd896b2a-<span class="number">8</span>b3ccfa735dd903a26015cd2336fafd0</span><br><span class="line">name:电商世纪</span><br><span class="line">aaurl:http:<span class="comment">//mp.weixin.qq.com/profile?src=3&amp;timestamp=1464274994&amp;ver=1&amp;signature=yowmZpBKe613d90SuSXx*k8MZMDBs7yWQuWuWsT0fNufkwitAQElDmdalVWm1QYqGEr1yCPd6GsJxsCOOWE*UA==</span></span><br><span class="line"><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">title:谷歌I/O大会之后,AndroidN将会带来哪些功能?</span><br><span class="line">subtitle:随着谷歌I/O大会的召开,Android7<span class="number">.0</span>(AndroidN)系统正式版也将于今年夏季到来,相信此时你一定在想:“AndroidN发布与我们有什么关系?天朝又用不到”,但是别忘了无论你用的是三星、是小米、是LG、还是索尼,他们所搭载的系统都是基于原始Android修改而来,所以我们经常看到手<span class="attribute">...</span></span><br><span class="line">url:http:<span class="comment">//mp.weixin.qq.com/s?src=3&amp;timestamp=1464274994&amp;ver=1&amp;signature=*TNdFacgb6-0dZOYt*ZMwzGjLv2BcDfsNmkMRRf*1M*N5F7qk3tnqeN*KAVDyBMwuVibuaEot9FOgiderqfvbE-ISQ0KHl-b6Iwd1thzE21KEPJFdHxFxz2C9rn1C*BfmQdmrUZxjGvtvF0u5HARLiSRnfy1zHtVVPnA1xpEFgo=</span></span><br><span class="line">id:ab735a258a90e8e1-<span class="number">6</span>bee54fcbd896b2a-<span class="number">0</span>c606a211b4a27b3e1d0dbe071cb59b0</span><br><span class="line">name:DevStore</span><br><span class="line">aaurl:http:<span class="comment">//mp.weixin.qq.com/profile?src=3&amp;timestamp=1464274994&amp;ver=1&amp;signature=cUBy7lubgzeEL99mK6O**jPbPFzVKZmfoBd*5EplLLGRDmAJ-LTUaUKlt-LtBBfBCwAWkdeux*WsppGwTNsmBA==</span></span><br><span class="line"><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">title:Android7<span class="number">.0</span>应用运行速度飙升<span class="number">600</span>%<span class="subst">!</span>效率史上最高</span><br><span class="line">subtitle:谷歌今天早些时候正式在I/O大会现场详细介绍了有关Android7<span class="number">.0</span>的大量信息<span class="built_in">.</span>目前,我们已经知道,新一代Android操作系统将支持无缝升级,能够通过VulkanAPI来在中低硬件配置设备上实现流畅游戏体验以及更多的Emoji表情<span class="built_in">.</span>不过,Android7<span class="number">.0</span>最大也是最引人关注的还是来自运行效率上<span class="attribute">...</span></span><br><span class="line">url:http:<span class="comment">//mp.weixin.qq.com/s?src=3&amp;timestamp=1464274994&amp;ver=1&amp;signature=z8fbjM3PfPjV7wUxNIQvd*srD7vkuemnG4s*YZG2Whb1ce-P44PP8H0cQ0RMOOw9j*rpA6QtijNcKotzLmsypJUV-liwUneDu8akmo0dNte5ENFWSrk8kYKAWavHw94AcxFG0N*8LkCKegfOhk04rdwMQoQYxqtQyhD1sRuvYr0=</span></span><br><span class="line">id:ab735a258a90e8e1-<span class="number">6</span>bee54fcbd896b2a-<span class="number">1</span>fc444d0ea3d2895668c9cf4c156c5bf</span><br><span class="line">name:广东快通信息科技有限公司</span><br><span class="line">aaurl:http:<span class="comment">//mp.weixin.qq.com/profile?src=3&amp;timestamp=1464274994&amp;ver=1&amp;signature=owCQiyQBxuJO4aTnrvcXUxiIwILaPnZoMHp4yjtBvZO9tzaqceqWDmLy9wEXZbsR2VgFbr98Hzk3sMSZ6hZBOQ==</span></span><br><span class="line"><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">title:<span class="number">7</span>年经验的Android开发工程师</span><br><span class="line">subtitle:▌候选人编号TP16052601男<span class="number">32</span>岁<span class="number">7</span>年工作经验本科西南大学生物科学【求职状态】<span class="number">5</span>月<span class="number">26</span>日正在找工作【求职意向】Android开发工程师【到岗时间】即时到岗【目标地点】北京【期望行业】计算机软件、互联网/电子商务【期望薪资】面议【自我评价】熟练掌握OkHttp、Volley、butterknife、<span class="attribute">...</span></span><br><span class="line">url:http:<span class="comment">//mp.weixin.qq.com/s?src=3&amp;timestamp=1464274994&amp;ver=1&amp;signature=mH4vmswEAJEmBWt3K6dU2bhxweD8BYIQ0lE7jmrzKiPzVMWWaEX3mLi16nl0U*PNdoZb0r6pVF92ZguAtBXWTJV3n*TmIibW6NUoWj5lJduMY9CvPsptuu6*ZeBDiKg*YteUDeIfnCyu1tgnUHi4qClecJS30mwraD2xhcplI28=</span></span><br><span class="line">id:ab735a258a90e8e1-<span class="number">6</span>bee54fcbd896b2a<span class="attribute">-bfa3bc3c88c4d53073cffbcd55097ef7</span></span><br><span class="line">name:合拍人力资源中心</span><br><span class="line">aaurl:http:<span class="comment">//mp.weixin.qq.com/profile?src=3&amp;timestamp=1464274994&amp;ver=1&amp;signature=qvNLNL15GF4cLv09Q0GhqFU5Sf1KSlHjdcmYyZWVOy5gxLft0hjjGuwtfL1G7tcATrQX-T2efIVPab3-armSHw==</span></span><br><span class="line"><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">title:Android升级太慢<span class="subst">!</span>谷歌使出拉黑大招</span><br><span class="line">subtitle:北京时间<span class="number">5</span>月<span class="number">26</span>日消息,彭博社报道,谷歌正采取新措施,以推动Android手机更快地升级至最新版本<span class="built_in">.</span>由于Android系统碎片化的问题,因此谷歌可能将采取非传统的手段<span class="built_in">.</span>谷歌正在考虑的方式之一是,根据手机厂商升级系统的“熟练度”发布排名<span class="built_in">.</span>发布这样的数据将鼓励手机厂商在系统升<span class="attribute">...</span></span><br><span class="line">url:http:<span class="comment">//mp.weixin.qq.com/s?src=3&amp;timestamp=1464274994&amp;ver=1&amp;signature=hoQI56*wxOWyeymtTwC3HGjclKnR*Y0e0GsQWtPzTsXo8ejqYPAcH71j86vF-ZxyrpOfmCVsbW012uxaFUUCQ1PLv1UKCD9TPaLCOxII6PrDNu*Q9g0RU0cSgo7h4GV4ObtQiHNBajNrZr37cTvVAFo4O*mR*CadJJ6rOuhSzKI=</span></span><br><span class="line">id:ab735a258a90e8e1-<span class="number">6</span>bee54fcbd896b2a-<span class="number">05</span>c724eabcac6ed92c3f7bf78e279af6</span><br><span class="line">name:周路<span class="number">1312</span></span><br><span class="line">aaurl:http:<span class="comment">//mp.weixin.qq.com/profile?src=3&amp;timestamp=1464274994&amp;ver=1&amp;signature=lj0aq-0nHLY-dHzY*ZRwOQV*-Zam610x2gwYtmqbszLKUhUN7uRhMYw4Qa43BpSIRWyh53vKjPJ0rKSqHusSEg==</span></span><br><span class="line"><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">title:苹果iOS10新增这<span class="number">5</span>项AndroidN功能,酷炫<span class="subst">!</span></span><br><span class="line">subtitle:如果没有意外的话,苹果下一代iPhone以及iOS10操作系统将会在今年夏天跟谷歌AndroidN系统展开激烈的竞争<span class="built_in">.</span>我们在AndroidN系统上看到了一些非常大的进步,不少特性都让人眼前一亮<span class="built_in">.</span>外媒CultOfMac认为,如果AndroidN系统的这<span class="number">5</span>个特性能够出现在未来的iOS版本上<span class="attribute">...</span></span><br><span class="line">url:http:<span class="comment">//mp.weixin.qq.com/s?src=3&amp;timestamp=1464274994&amp;ver=1&amp;signature=d9OAuBtb97E09c2c1cgbaGp8Td3rZrAzUR0JITEZWQzOZgQDMRe3Yn8nvTaUjhCsazngzOha5VzOk2ccXoi*9vJzF-GuDEGMBl68yeG197ixJIRdvTkaDpRaIQLK3KVSYQQSZQcjaOrp1bN6L4KghEKryWLz0-ousX3vVoJYpQQ=</span></span><br><span class="line">id:ab735a258a90e8e1-<span class="number">6</span>bee54fcbd896b2a<span class="attribute">-c651e8da99849f6fee9f8303bffed181</span></span><br><span class="line">name:达内iOS培训</span><br><span class="line">aaurl:http:<span class="comment">//mp.weixin.qq.com/profile?src=3&amp;timestamp=1464274994&amp;ver=1&amp;signature=*jQgyhjKt2Yzq67KwgipuPukbM-crBBf9livbnyABwBSVYpqBQS93DT4ltZTm1smAZ*v6HWsvBi7SYSJEQgC*Q==</span></span><br><span class="line"><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">title:AndroidQQ6<span class="number">.3</span><span class="number">.7</span><span class="number">.2795</span>正式发布~</span><br><span class="line">subtitle:QQforAndroid6<span class="number">.3</span><span class="number">.7</span>版本功能介绍:<span class="number">1.</span>视频对讲自动保存,生成专属表情包<span class="number">2.</span>好友推荐推荐可能认识的人,发现更多新朋友<span class="number">3.</span>热聊语音秀新增点赞功能,支持你喜欢的房间<span class="number">4.</span>口令红包消息超过十二条时,可自动折叠<span class="number">5.</span>多条消息被合并转发后,可再次转发<span class="number">6.</span>手势密码升级,保障信息安全,支持单独<span class="attribute">...</span></span><br><span class="line">url:http:<span class="comment">//mp.weixin.qq.com/s?src=3&amp;timestamp=1464274994&amp;ver=1&amp;signature=qPCFsTnwZTSKVlCa5NwhwccVqLfR*RxUyB3mazE61dXs5pGr*ZHm-WsRs0bkfYtJEpcTLl2VS2tGFcH8dG5HZspcLUt2ARlSY7MUROcO9iYhJmG-P1z3QQyDwF9qWqD7OwgbtDCebQz3-DY5UvrWeNy1HCIduoFG0cEjnCdRJ2g=</span></span><br><span class="line">id:ab735a258a90e8e1-<span class="number">6</span>bee54fcbd896b2a<span class="attribute">-e6f34473f892fb24433535c37e86dc18</span></span><br><span class="line">name:畩靠</span><br><span class="line">aaurl:http:<span class="comment">//mp.weixin.qq.com/profile?src=3&amp;timestamp=1464274994&amp;ver=1&amp;signature=lh-qBwZqBa16oom5v-7BcGfyLIBPJNsvlNRhWeaKcjPkXlRg7foJ-MqSXBFPfSz9nGwaH0gb7A8LlvnxV2CNog==</span></span><br><span class="line"><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">title:我的Android面试经验总结</span><br><span class="line">subtitle:关注我,你的眼睛会怀孕MVC,MVP和MVVMMVC通信方式,环形方式:<span class="number">1</span>、View传送指令到Controller2、Controller起到不同层面间的组织作用,用于控制应用程序的流程<span class="built_in">.</span>它处理事件并作出响应<span class="built_in">.</span>“事件”包括用户的行为和数据Model上的改变<span class="number">.3</span>、Model将新的数据发送到View,用户<span class="attribute">...</span></span><br><span class="line">url:http:<span class="comment">//mp.weixin.qq.com/s?src=3&amp;timestamp=1464274994&amp;ver=1&amp;signature=NXYpqtVv4fKUBsqFpmpIR5CCHHrGvqE6kXYMOsigc3oyj3OyPsTNX5bpgdQsFXmjT2RKoo-EwS9*27ArD00CXQw1NM*Jm9fMzQyPoNLE1TpNx1lsF560TO5iqliDvj3Of8qFs**ac6OPR*7m053c7WaClXm7kf7hgHQtddNABEo=</span></span><br><span class="line">id:ab735a258a90e8e1-<span class="number">6</span>bee54fcbd896b2a<span class="attribute">-ad022736030ea3ac87cae32ae8668f46</span></span><br><span class="line">name:IT大牛人</span><br><span class="line">aaurl:http:<span class="comment">//mp.weixin.qq.com/profile?src=3&amp;timestamp=1464274994&amp;ver=1&amp;signature=9gqKRZeyNAYOmC8LKClHnlInQNVhvVkRjZfPgtYSSsR9SXHOfO*4q1rMqKpqgjHOC5Fd2iIltr*sI2NHUJo9Pg==</span></span><br><span class="line"><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">title:【Android开发】微信支付不成功的几个原因</span><br><span class="line">subtitle:微信支付一定要理解的几个概念:<span class="number">1</span>导出应用签名区别于应用签名,使用debug<span class="built_in">.</span>keystore密钥库,导出应用时进行签名<span class="number">2</span>项目包名比如:com<span class="built_in">.</span>shangmai<span class="built_in">.</span>recovery3应用签名签名使用官网提供的工具——Gen_Signature_Android<span class="built_in">.</span>apk,输入包名生成,比如:a04b960af8bf3b8bde86a25ecb791f844<span class="attribute">...</span></span><br><span class="line">url:http:<span class="comment">//mp.weixin.qq.com/s?src=3&amp;timestamp=1464274994&amp;ver=1&amp;signature=mBYIjZdjrG1qmlOCoKcg0dgGLXJwWtQHKn6lpkWYQv4H0-dKk9Nh7pnD*MEGrhec717brvxQizJp8hiCqkNJkrkuKFkXgpKl0ML1ghfBAreVRbHzVrEouiD06GPRqcmhJRtIe*24J0geYSCMhlJnG-2JuyfiQiBu7HUQaCEng88=</span></span><br><span class="line">id:ab735a258a90e8e1-<span class="number">6</span>bee54fcbd896b2a-<span class="number">9278</span>f0323ae3e65971e0fcb37f275423</span><br><span class="line">name:黑马程序员</span><br><span class="line">aaurl:http:<span class="comment">//mp.weixin.qq.com/profile?src=3&amp;timestamp=1464274994&amp;ver=1&amp;signature=oE87kQzfDF2iKcoD*anPFvLaTy5fRgzE1t2nu8NNMpVhXEAJ2G5qcI-UGK5mjUxxFBF2bFe50eD54Gdr9W7TqA==</span></span><br><span class="line"><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span></span><br></pre></td></tr></table></figure>
<p>后来发现上面抓到的文章链接有过期时间，如下图。</p>
<p><img src="http://ww3.sinaimg.cn/large/8c9b876fjw1f4ck33bcj8j20qd0c9t9a.jpg" alt=""></p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>利用 Node 来抓取网页中需要的信息。<br>]]>
    
    </summary>
    
      <category term="Node.js" scheme="http://hanks.xyz/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MongoDB 入门]]></title>
    <link href="http://hanks.xyz/2016/05/21/mongoDB/"/>
    <id>http://hanks.xyz/2016/05/21/mongoDB/</id>
    <published>2016-05-21T07:38:33.000Z</published>
    <updated>2016-05-21T09:06:42.000Z</updated>
    <content type="html"><![CDATA[<p>什么是 <code>MongoDB</code> ?<br>MongoDB 是由C++语言编写的，是一个基于分布式文件存储的开源数据库系统。<br>在高负载的情况下，添加更多的节点，可以保证服务器性能。<br>MongoDB 旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。<br>MongoDB 将数据存储为一个文档，数据结构由键值 (key=&gt;value) 对组成。MongoDB 文档类似于 <code>JSON 对象</code>。字段值可以包含其他文档，数组及文档数组。<br><a id="more"></a></p>
<h2 id="安装">安装</h2><p>下载地址：<a href="http://www.mongodb.org/downloads" target="_blank" rel="external">http://www.mongodb.org/downloads</a></p>
<h3 id="Windows中安装">Windows中安装</h3><p>在 Windows 系统上安装 MongoDB 数据库是件非常简单的事情，下载可执行安装文件(exe)，双击安装即可。<br>MongoDB 服务器运行命令：<code>MongoDB 安装目录/bin/mongod.exe</code><br>MongoDB 客户端运行命令：<code>MongoDB 安装目录/bin/mongo.exe</code></p>
<h3 id="Ubuntu_安装">Ubuntu 安装</h3><p>参考 <a href="https://docs.mongodb.com/master/tutorial/install-mongodb-on-ubuntu/?_ga=1.242553222.549778784.1463815567" target="_blank" rel="external">官方文档</a>，我的环境 Ubuntu 14.04</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># 下载密钥文件</span></span><br><span class="line">$ sudo apt-key adv --keyserver hkp:<span class="comment">//keyserver.ubuntu.com:80 --recv EA312927</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 在 source.list 中增加 MongoDB 源的配置</span></span><br><span class="line">$ echo <span class="string">"deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.2 multiverse"</span> | sudo tee /etc/apt/sources.<span class="built_in">list</span>.d/mongodb-org-<span class="number">3.2</span>.<span class="built_in">list</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 更新 apt 源</span></span><br><span class="line">$ sudo apt-get update</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 安装 MongoDB</span></span><br><span class="line">$ sudo apt-get install -y mongodb-org=<span class="number">3.2</span><span class="number">.6</span> mongodb-org-server=<span class="number">3.2</span><span class="number">.6</span> mongodb-org-shell=<span class="number">3.2</span><span class="number">.6</span> mongodb-org-mongos=<span class="number">3.2</span><span class="number">.6</span> mongodb-org-tools=<span class="number">3.2</span><span class="number">.6</span></span><br></pre></td></tr></table></figure>
<p>上述命令执行完则安装完成，安装成功后 <code>mongod</code> 服务会自动启动，下面检测一下是否安装成功。</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo service mongod status</span><br><span class="line">mongod <span class="built_in">start</span>/running, <span class="built_in">process</span> <span class="number">3841</span></span><br></pre></td></tr></table></figure>
<p>如果没有启动那么手动启动 mongod 服务</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line"><span class="variable">$ </span>sudo service mongod start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止服务</span></span><br><span class="line"><span class="variable">$ </span>sudo service mongod stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启服务</span></span><br><span class="line"><span class="variable">$ </span>sudo service mongod restart</span><br></pre></td></tr></table></figure>
<p>开启后，通过 <code>/var/log/mongodb/mongod.log</code> 查看日志文件。</p>
<h2 id="配置">配置</h2><p>配置文件放在 <code>/etc/mongod.conf</code> ，<br>默认访问端口为 <code>27017</code>，数据库文件存放目录为 <code>/var/lib/mongodb</code> ，日志文件目录为 <code>/var/log/mongodb/mongod.log</code> 。</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># mongod.conf</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># for documentation of all options, see:</span></span><br><span class="line"><span class="preprocessor">#   http://docs.mongodb.org/manual/reference/configuration-options/</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Where and how to store data.</span></span><br><span class="line">storage:</span><br><span class="line">  dbPath: /<span class="keyword">var</span>/lib/mongodb</span><br><span class="line">  journal:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line"><span class="preprocessor">#  engine:</span></span><br><span class="line"><span class="preprocessor">#  mmapv1:</span></span><br><span class="line"><span class="preprocessor">#  wiredTiger:</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># where to write logging data.</span></span><br><span class="line">systemLog:</span><br><span class="line">  destination: file</span><br><span class="line">  logAppend: <span class="literal">true</span></span><br><span class="line">  path: /<span class="keyword">var</span>/log/mongodb/mongod.log</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># network interfaces</span></span><br><span class="line">net:</span><br><span class="line">  port: <span class="number">27017</span></span><br><span class="line">  bindIp: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#processManagement:</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#security:</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#operationProfiling:</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#replication:</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#sharding:</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">## Enterprise-Only Options:</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#auditLog:</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#snmp:</span></span><br></pre></td></tr></table></figure>
<h2 id="基本使用">基本使用</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MongoDB 的相关命令</span></span><br><span class="line">$ mongo <span class="comment">--help</span></span><br><span class="line">MongoDB shell <span class="property">version</span>: <span class="number">3.2</span><span class="number">.6</span></span><br><span class="line">usage: mongo [options] [db address] [<span class="type">file</span> names (ending <span class="keyword">in</span> .js)]</span><br><span class="line">db address can be:</span><br><span class="line">  foo                   foo database <span class="function_start"><span class="keyword">on</span></span> <span class="keyword">local</span> machine</span><br><span class="line">  <span class="number">192.169</span><span class="number">.0</span><span class="number">.5</span>/foo       foo database <span class="function_start"><span class="keyword">on</span></span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.5</span> machine</span><br><span class="line">  <span class="number">192.169</span><span class="number">.0</span><span class="number">.5</span>:<span class="number">9999</span>/foo  foo database <span class="function_start"><span class="keyword">on</span></span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.5</span> machine <span class="function_start"><span class="keyword">on</span></span> port <span class="number">9999</span></span><br><span class="line">Options:</span><br><span class="line">  <span class="comment">--shell                             run the shell after executing files</span></span><br><span class="line">  <span class="comment">--nodb                              don't connect to mongod on startup - no</span></span><br><span class="line">                                      'db address' arg expected</span><br><span class="line">  <span class="comment">--norc                              will not run the ".mongorc.js" file on</span></span><br><span class="line">                                      start up</span><br><span class="line">  <span class="comment">--quiet                             be less chatty</span></span><br><span class="line">  <span class="comment">--port arg                          port to connect to</span></span><br><span class="line">  <span class="comment">--host arg                          server to connect to</span></span><br><span class="line">  <span class="comment">--eval arg                          evaluate javascript</span></span><br><span class="line">  -h [ <span class="comment">--help ]                       show this usage information</span></span><br><span class="line">  <span class="comment">--version                           show version information</span></span><br><span class="line">  <span class="comment">--verbose                           increase verbosity</span></span><br><span class="line">  <span class="comment">--ipv6                              enable IPv6 support (disabled by default)</span></span><br><span class="line">  <span class="comment">--disableJavaScriptJIT              disable the Javascript Just In Time</span></span><br><span class="line">                                      compiler</span><br><span class="line">  <span class="comment">--enableJavaScriptProtection        disable automatic JavaScript function</span></span><br><span class="line">                                      marshalling</span><br><span class="line">  <span class="comment">--ssl                               use SSL for all connections</span></span><br><span class="line">  <span class="comment">--sslCAFile arg                     Certificate Authority file for SSL</span></span><br><span class="line">  <span class="comment">--sslPEMKeyFile arg                 PEM certificate/key file for SSL</span></span><br><span class="line">  <span class="comment">--sslPEMKeyPassword arg             password for key in PEM file for SSL</span></span><br><span class="line">  <span class="comment">--sslCRLFile arg                    Certificate Revocation List file for SSL</span></span><br><span class="line">  <span class="comment">--sslAllowInvalidHostnames          allow connections to servers with</span></span><br><span class="line">                                      non-matching hostnames</span><br><span class="line">  <span class="comment">--sslAllowInvalidCertificates       allow connections to servers with invalid</span></span><br><span class="line">                                      certificates</span><br><span class="line">  <span class="comment">--sslFIPSMode                       activate FIPS 140-2 mode at startup</span></span><br><span class="line"></span><br><span class="line">Authentication Options:</span><br><span class="line">  -u [ <span class="comment">--username ] arg               username for authentication</span></span><br><span class="line">  -p [ <span class="comment">--password ] arg               password for authentication</span></span><br><span class="line">  <span class="comment">--authenticationDatabase arg        user source (defaults to dbname)</span></span><br><span class="line">  <span class="comment">--authenticationMechanism arg       authentication mechanism</span></span><br><span class="line">  <span class="comment">--gssapiServiceName arg (=mongodb)  Service name to use when authenticating</span></span><br><span class="line">                                      using GSSAPI/Kerberos</span><br><span class="line">  <span class="comment">--gssapiHostName arg                Remote host name to use for purpose of</span></span><br><span class="line">                                      GSSAPI/Kerberos authentication</span><br><span class="line"></span><br><span class="line"><span class="type">file</span> names: a <span class="type">list</span> <span class="keyword">of</span> files <span class="keyword">to</span> <span class="command">run</span>. files have <span class="keyword">to</span> <span class="keyword">end</span> <span class="keyword">in</span> .js <span class="keyword">and</span> will <span class="keyword">exit</span> <span class="keyword">after</span> unless <span class="comment">--shell is specified</span></span><br></pre></td></tr></table></figure>
<p>从上面的帮助可以看到 mongo 的使用，现在使用 <code>mongo</code> 命令访问 MongoDB 服务</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">$ mongo</span><br><span class="line">MongoDB shell version: 3.2.6</span><br><span class="line">connecting to: test</span><br><span class="line">Welcome to the MongoDB shell.</span><br><span class="line">For interactive <span class="operator"><span class="keyword">help</span>, <span class="keyword">type</span> <span class="string">"help"</span>.</span><br><span class="line"><span class="keyword">For</span> more comprehensive documentation, see</span><br><span class="line">    <span class="keyword">http</span>://docs.mongodb.org/</span><br><span class="line">Questions? Try the support <span class="keyword">group</span></span><br><span class="line">    <span class="keyword">http</span>://<span class="keyword">groups</span>.google.com/<span class="keyword">group</span>/mongodb-<span class="keyword">user</span></span><br><span class="line"></span><br><span class="line"># 查看帮助</span><br><span class="line">&gt; <span class="keyword">help</span></span><br><span class="line">    db.<span class="keyword">help</span>()                    <span class="keyword">help</span> <span class="keyword">on</span> db methods</span><br><span class="line">    db.mycoll.<span class="keyword">help</span>()             <span class="keyword">help</span> <span class="keyword">on</span> collection methods</span><br><span class="line">    sh.<span class="keyword">help</span>()                    sharding helpers</span><br><span class="line">    rs.<span class="keyword">help</span>()                    replica <span class="keyword">set</span> helpers</span><br><span class="line">    <span class="keyword">help</span> <span class="keyword">admin</span>                   administrative <span class="keyword">help</span></span><br><span class="line">    <span class="keyword">help</span> <span class="keyword">connect</span>                 connecting <span class="keyword">to</span> a db <span class="keyword">help</span></span><br><span class="line">    <span class="keyword">help</span> <span class="keyword">keys</span>                    <span class="keyword">key</span> shortcuts</span><br><span class="line">    <span class="keyword">help</span> misc                    misc things <span class="keyword">to</span> know</span><br><span class="line">    <span class="keyword">help</span> mr                      mapreduce</span><br><span class="line"></span><br><span class="line">    <span class="keyword">show</span> dbs                     <span class="keyword">show</span> <span class="keyword">database</span> <span class="keyword">names</span></span><br><span class="line">    <span class="keyword">show</span> collections             <span class="keyword">show</span> collections <span class="keyword">in</span> <span class="keyword">current</span> <span class="keyword">database</span></span><br><span class="line">    <span class="keyword">show</span> <span class="keyword">users</span>                   <span class="keyword">show</span> <span class="keyword">users</span> <span class="keyword">in</span> <span class="keyword">current</span> <span class="keyword">database</span></span><br><span class="line">    <span class="keyword">show</span> profile                 <span class="keyword">show</span> most recent <span class="keyword">system</span>.profile entries <span class="keyword">with</span> <span class="keyword">time</span> &gt;= <span class="number">1</span>ms</span><br><span class="line">    <span class="keyword">show</span> <span class="keyword">logs</span>                    <span class="keyword">show</span> the <span class="keyword">accessible</span> logger <span class="keyword">names</span></span><br><span class="line">    <span class="keyword">show</span> <span class="keyword">log</span> [<span class="keyword">name</span>]              prints <span class="keyword">out</span> the <span class="keyword">last</span> <span class="keyword">segment</span> <span class="keyword">of</span> <span class="keyword">log</span> <span class="keyword">in</span> <span class="keyword">memory</span>, <span class="string">'global'</span> <span class="keyword">is</span> <span class="keyword">default</span></span><br><span class="line">    <span class="keyword">use</span> &lt;db_name&gt;                <span class="keyword">set</span> <span class="keyword">current</span> <span class="keyword">database</span></span><br><span class="line">    db.foo.find()                <span class="keyword">list</span> objects <span class="keyword">in</span> collection foo</span><br><span class="line">    db.foo.find( &#123; a : <span class="number">1</span> &#125; )     <span class="keyword">list</span> objects <span class="keyword">in</span> foo <span class="keyword">where</span> a == <span class="number">1</span></span><br><span class="line">    it                           <span class="keyword">result</span> <span class="keyword">of</span> the <span class="keyword">last</span> line evaluated;</span> <span class="operator"><span class="keyword">use</span> <span class="keyword">to</span> further <span class="keyword">iterate</span></span><br><span class="line">    DBQuery.shellBatchSize = x   <span class="keyword">set</span> <span class="keyword">default</span> <span class="built_in">number</span> <span class="keyword">of</span> items <span class="keyword">to</span> display <span class="keyword">on</span> shell</span><br><span class="line">    <span class="keyword">exit</span>                         quit the mongo shell</span><br><span class="line">&gt;</span></span><br></pre></td></tr></table></figure>
<p>相关操作命令<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># 连接数据库</span></span><br><span class="line">$ mongo <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">27017</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 查看已有的数据库</span></span><br><span class="line">&gt; show dbs</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 切换/创建数据库</span></span><br><span class="line">&gt; use blogdb</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 显示当前数据库对象或集合</span></span><br><span class="line">&gt; db</span><br><span class="line">blogdb</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 删除数据库</span></span><br><span class="line">&gt; db.dropDatabase()</span><br><span class="line">&#123; <span class="string">"dropped"</span> : <span class="string">"blogdb"</span>, <span class="string">"ok"</span> : <span class="number">1</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 向集合 user 中插入一条数据，如果集合不存在则创建</span></span><br><span class="line">&gt; db.user.insert(&#123;name:<span class="string">'hanks'</span>,age:<span class="number">22</span>&#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">"nInserted"</span> : <span class="number">1</span> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 查看当前数据库中是所以集合</span></span><br><span class="line">&gt; show collections</span><br><span class="line">user</span><br><span class="line">course</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 查询所以数据</span></span><br><span class="line">&gt; db.user.find()</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"574021487ca7760c7927ea1b"</span>), <span class="string">"name"</span> : <span class="string">"hanks"</span>, <span class="string">"age"</span> : <span class="number">22</span> &#125;</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5740214e7ca7760c7927ea1c"</span>), <span class="string">"name"</span> : <span class="string">"kiya"</span>, <span class="string">"age"</span> : <span class="number">22</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 条件查询</span></span><br><span class="line">&gt; db.user.find(&#123;name:<span class="string">'hanks'</span>&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"574021487ca7760c7927ea1b"</span>), <span class="string">"name"</span> : <span class="string">"hanks"</span>, <span class="string">"age"</span> : <span class="number">22</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 删除</span></span><br><span class="line">&gt; db.user.remove(&#123;name:<span class="string">'hanks'</span>&#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">"nRemoved"</span> : <span class="number">1</span> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 覆盖更新</span></span><br><span class="line">&gt; db.user.update(&#123;name:<span class="string">'hanks'</span>&#125;, &#123;age:<span class="string">'22'</span>&#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">"nMatched"</span> : <span class="number">1</span>, <span class="string">"nUpserted"</span> : <span class="number">0</span>, <span class="string">"nModified"</span> : <span class="number">1</span> &#125;)</span><br><span class="line">&gt; db.user.find(&#123;name:<span class="string">'hanks'</span>&#125;)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5740239c7ca7760c7927ea20"</span>), <span class="string">"age"</span> : <span class="string">"22"</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 更新某个字段</span></span><br><span class="line">&gt; db.user.update(&#123;name:<span class="string">'kiya'</span>&#125;, &#123;$<span class="keyword">set</span>:&#123;age:<span class="string">'20'</span>&#125;&#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">"nMatched"</span> : <span class="number">1</span>, <span class="string">"nUpserted"</span> : <span class="number">0</span>, <span class="string">"nModified"</span> : <span class="number">1</span> &#125;)</span><br><span class="line">&gt; db.user.find(&#123;name:<span class="string">'kiya'</span>&#125;,)</span><br><span class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"574023a37ca7760c7927ea21"</span>), <span class="string">"name"</span> : <span class="string">"kiya"</span>, <span class="string">"age"</span> : <span class="string">"20"</span> &#125;</span><br></pre></td></tr></table></figure></p>
<hr>
<p>相关链接</p>
<p><a href="https://www.mongodb.com" target="_blank" rel="external">https://www.mongodb.com</a><br><a href="http://www.runoob.com/mongodb/mongodb-tutorial.html" target="_blank" rel="external">http://www.runoob.com/mongodb/mongodb-tutorial.html</a></p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>什么是 <code>MongoDB</code> ?<br>MongoDB 是由C++语言编写的，是一个基于分布式文件存储的开源数据库系统。<br>在高负载的情况下，添加更多的节点，可以保证服务器性能。<br>MongoDB 旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。<br>MongoDB 将数据存储为一个文档，数据结构由键值 (key=&gt;value) 对组成。MongoDB 文档类似于 <code>JSON 对象</code>。字段值可以包含其他文档，数组及文档数组。<br>]]>
    
    </summary>
    
      <category term="MongoDB" scheme="http://hanks.xyz/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Express 网站开发]]></title>
    <link href="http://hanks.xyz/2016/05/20/express-project/"/>
    <id>http://hanks.xyz/2016/05/20/express-project/</id>
    <published>2016-05-20T15:54:30.000Z</published>
    <updated>2016-05-20T16:23:16.000Z</updated>
    <content type="html"><![CDATA[<p><code>express</code> 开发一个简单的网站，网页模板引擎使用 <code>jade</code>，样式基于 <code>bootstrap</code>，数据库使用 <code>MongoDB</code></p>
<a id="more"></a>
<h2 id="环境搭建">环境搭建</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> express jade mongooes</span><br></pre></td></tr></table></figure>
<p>首先需要是 <code>node</code> 环境，使用 <code>npm</code> 安装 <code>express</code> <code>jade</code> 和 <code>mongoose</code>， 然后使用 bower 安装 bootstrap。<br>安装 bower 通过 <code>npm install bower -g</code>， bower 是一个客户端技术的软件包管理器，它可用于搜索、安装和卸载如JavaScript、HTML、CSS之类的网络资源。</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">bower </span>install <span class="keyword">bootstrap</span></span><br></pre></td></tr></table></figure>
<p>搭建完成后目录结构</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">├── <span class="tag">app</span><span class="class">.js</span>  # 启动文件</span><br><span class="line">├── <span class="tag">bower_components</span> # <span class="tag">bower</span> 安装的库</span><br><span class="line">│   ├── <span class="tag">bootstrap</span></span><br><span class="line">│   └── <span class="tag">jquery</span></span><br><span class="line">├── <span class="tag">node_modules</span> # <span class="tag">npm</span> 安装的依赖库</span><br><span class="line">│   ├── <span class="tag">express</span></span><br><span class="line">│   ├── <span class="tag">jade</span></span><br><span class="line">│   ├── <span class="tag">moment</span></span><br><span class="line">│   └── <span class="tag">mongoose</span></span><br><span class="line">├── <span class="tag">package</span><span class="class">.json</span> </span><br><span class="line">└── <span class="tag">views</span> # 视图模板</span><br><span class="line">    ├── <span class="tag">includes</span></span><br><span class="line">    │   ├── <span class="tag">head</span><span class="class">.jade</span></span><br><span class="line">    │   └── <span class="tag">header</span><span class="class">.jade</span></span><br><span class="line">    ├── <span class="tag">layout</span><span class="class">.jade</span></span><br><span class="line">    └── <span class="tag">pages</span></span><br><span class="line">        ├── <span class="tag">admin</span><span class="class">.jade</span></span><br><span class="line">        ├── <span class="tag">detail</span><span class="class">.jade</span></span><br><span class="line">        ├── <span class="tag">index</span><span class="class">.jade</span></span><br></pre></td></tr></table></figure>
<h3 id="创建视图">创建视图</h3><p><code>layout.jade</code> 基础布局，所有的网页都是基于该布局<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">doctype</span></span><br><span class="line"><span class="label">html</span></span><br><span class="line">  head</span><br><span class="line">    meta(charset=<span class="string">"utf-8"</span>)</span><br><span class="line">    title #&#123;title&#125;</span><br><span class="line">    <span class="preprocessor">include</span> ./includes/head</span><br><span class="line">  <span class="keyword">body</span><br><span class="line"></span>    <span class="preprocessor">include</span> ./includes/header</span><br><span class="line">    <span class="keyword">block </span>content</span><br></pre></td></tr></table></figure></p>
<p><code>head.jade</code> 放一些 css js 引用<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">link</span><span class="params">(href=<span class="string">"/bootstrap/dist/css/bootstrap.min.css"</span>, rel=<span class="string">"stylesheet"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">script</span><span class="params">(src=<span class="string">"/jquery/dist/jquery.min.js"</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">script</span><span class="params">(src=<span class="string">"/bootstrap/dist/js/bootstrap.min.js"</span>)</span></span></span><br></pre></td></tr></table></figure></p>
<p><code>header.jade</code> 所有网页通用的 header<br><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.<span class="keyword">container</span></span><br><span class="line">  .row</span><br><span class="line">    .page-header</span><br><span class="line">      h1 <span class="preprocessor">#&#123;title&#125;</span></span><br></pre></td></tr></table></figure></p>
<p><code>index.jade</code> ，主界面，影片列表<br><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">extends ../layout</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">  .container</span><br><span class="line">    .row</span><br><span class="line">      each item <span class="keyword">in</span> movies</span><br><span class="line">        .col-md-<span class="number">2</span></span><br><span class="line">          .thumbnail</span><br><span class="line">            a(href=<span class="string">"/movie/<span class="subst">#&#123;item._id&#125;</span>"</span>)</span><br><span class="line">              img(src=<span class="string">"<span class="subst">#&#123;item.poster&#125;</span>"</span>, alt=<span class="string">"<span class="subst">#&#123;item.title&#125;</span>"</span>)</span><br><span class="line">            .caption</span><br><span class="line">              h3 <span class="comment">#&#123;item.title&#125;</span></span><br><span class="line">              <span class="attribute">p</span>: a.btn.btn-primary(href=<span class="string">"/movie/<span class="subst">#&#123;item._id&#125;</span>"</span>, role=<span class="string">"button"</span>) 观看预告片</span><br></pre></td></tr></table></figure></p>
<p><code>detial.jade</code> 影片详情页，展示某个影片的详细信息<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">extends ../layout</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">  <span class="string">.container</span></span><br><span class="line">    <span class="string">.row</span></span><br><span class="line">      <span class="string">.col</span>-md-<span class="number">7</span></span><br><span class="line">        &lt;video width=<span class="string">"100%"</span> controls=<span class="string">""</span> autoplay=<span class="string">"false"</span> name=<span class="string">"media"</span>&gt;&lt;source src=<span class="string">"#&#123;movie.flash&#125;"</span>&gt;&lt;/video&gt;</span><br><span class="line">      <span class="string">.col</span>-md-<span class="number">5</span></span><br><span class="line">        <span class="literal">dl</span>.dl-horizontal</span><br><span class="line">         <span class="pseudo">dt</span> 电影名字</span><br><span class="line">         <span class="pseudo">dd</span> #&#123;movie.title&#125;</span><br><span class="line">         <span class="pseudo">dt</span> 导演</span><br><span class="line">         <span class="pseudo">dd</span> #&#123;movie.director&#125;</span><br><span class="line">         <span class="pseudo">dt</span> 主演</span><br><span class="line">         <span class="pseudo">dd</span> #&#123; movie.actor&#125;</span><br><span class="line">         <span class="pseudo">dt</span> 国家</span><br><span class="line">         <span class="pseudo">dd</span> #&#123; movie.country&#125;</span><br><span class="line">         <span class="pseudo">dt</span> 语言</span><br><span class="line">         <span class="pseudo">dd</span> #&#123;movie.language&#125;</span><br><span class="line">         <span class="pseudo">dt</span> 上映年份</span><br><span class="line">         <span class="pseudo">dd</span> #&#123; movie.publishTime&#125;</span><br><span class="line">         <span class="pseudo">dt</span> 类型</span><br><span class="line">         <span class="pseudo">dd</span> #&#123;movie.type&#125;</span><br><span class="line">         <span class="pseudo">dt</span> 简介</span><br><span class="line">         <span class="pseudo">dd</span> #&#123;movie.summary&#125;</span><br></pre></td></tr></table></figure></p>
<p><code>admin.jade</code> Admin 界面，录入影片信息。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">extends ../layout</span><br><span class="line"></span><br><span class="line">block <span class="attribute">content</span></span><br><span class="line">  <span class="class">.container</span></span><br><span class="line">    <span class="class">.row</span></span><br><span class="line">      <span class="tag">form</span>.<span class="function"><span class="title">form-horizontal</span><span class="params">(method=<span class="string">"post"</span>,action=<span class="string">"/admin/movie/new"</span>)</span></span></span><br><span class="line">        <span class="class">.form-group</span></span><br><span class="line">          <span class="tag">label</span><span class="class">.col-sm-2</span><span class="class">.control-label</span>(<span class="keyword">for</span>=<span class="string">"inputTitle"</span>) 电影名字</span><br><span class="line">          <span class="class">.col-sm-10</span></span><br><span class="line">            input<span class="id">#inputTitle</span><span class="class">.col-sm-10</span><span class="class">.form-control</span>(type=<span class="string">"text"</span>,name=<span class="string">"movie[title]"</span>)</span><br><span class="line">        <span class="class">.form-group</span></span><br><span class="line">          <span class="tag">label</span><span class="class">.col-sm-2</span><span class="class">.control-label</span>(<span class="keyword">for</span>=<span class="string">"inputDirector"</span>) 导演</span><br><span class="line">          <span class="class">.col-sm-10</span></span><br><span class="line">            input<span class="id">#inputDirector</span><span class="class">.col-sm-10</span><span class="class">.form-control</span>(type=<span class="string">"text"</span>,name=<span class="string">"movie[director]"</span>)</span><br><span class="line">        <span class="class">.form-group</span></span><br><span class="line">          <span class="tag">label</span><span class="class">.col-sm-2</span><span class="class">.control-label</span>(<span class="keyword">for</span>=<span class="string">"inputCountry"</span>) 国家</span><br><span class="line">          <span class="class">.col-sm-10</span></span><br><span class="line">            input<span class="id">#inputCountry</span><span class="class">.col-sm-10</span><span class="class">.form-control</span>(type=<span class="string">"text"</span>,name=<span class="string">"movie[country]"</span>)</span><br><span class="line">        <span class="class">.form-group</span></span><br><span class="line">          <span class="tag">label</span><span class="class">.col-sm-2</span><span class="class">.control-label</span>(<span class="keyword">for</span>=<span class="string">"inputLanguage"</span>) 语言</span><br><span class="line">          <span class="class">.col-sm-10</span></span><br><span class="line">            input<span class="id">#inputLanguage</span><span class="class">.col-sm-10</span><span class="class">.form-control</span>(type=<span class="string">"text"</span>,name=<span class="string">"movie[language]"</span>)</span><br><span class="line">        <span class="class">.form-group</span></span><br><span class="line">          <span class="tag">label</span><span class="class">.col-sm-2</span><span class="class">.control-label</span>(<span class="keyword">for</span>=<span class="string">"inputYear"</span>) 上映年份</span><br><span class="line">          <span class="class">.col-sm-10</span></span><br><span class="line">            input<span class="id">#inputYear</span><span class="class">.col-sm-10</span><span class="class">.form-control</span>(type=<span class="string">"text"</span>,name=<span class="string">"movie[publishTime]"</span>)</span><br><span class="line">        <span class="class">.form-group</span></span><br><span class="line">          <span class="tag">label</span><span class="class">.col-sm-2</span><span class="class">.control-label</span>(<span class="keyword">for</span>=<span class="string">"inputSummary"</span>) 简介</span><br><span class="line">          <span class="class">.col-sm-10</span></span><br><span class="line">            input<span class="id">#inputSummary</span><span class="class">.col-sm-10</span><span class="class">.form-control</span>(type=<span class="string">"text"</span>,name=<span class="string">"movie[summary]"</span>)</span><br></pre></td></tr></table></figure></p>
<p><code>list.jade</code> 影片列表编辑界面，编辑已有的文章。<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">extends ../layout</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">  .container</span><br><span class="line">    .row</span><br><span class="line">      table.table.table-hover.table-bordered</span><br><span class="line">        thead</span><br><span class="line">          tr</span><br><span class="line">            th 电影名字</span><br><span class="line">            th 导演</span><br><span class="line">            th 国家</span><br><span class="line">            th 上映年份</span><br><span class="line">           <span class="comment"> //- th 录入时间</span></span><br><span class="line">            th 查看</span><br><span class="line">            th 更新</span><br><span class="line">            th 删除</span><br><span class="line">        tbody</span><br><span class="line">          <span class="keyword">each</span> <span class="keyword">item</span> <span class="operator">in</span> movies</span><br><span class="line">            tr(class=<span class="string">"item-id-#&#123;item._id&#125;"</span>)</span><br><span class="line">              td <span class="comment">#&#123;item.title&#125;</span></span><br><span class="line">              td <span class="comment">#&#123;item.director&#125;</span></span><br><span class="line">              td <span class="comment">#&#123;item.country&#125;</span></span><br><span class="line">              td <span class="comment">#&#123;item.publishTime&#125;</span></span><br><span class="line">             <span class="comment"> //- td #&#123;moment(item.meta.createdAt).format('MM/DD/YYYY')&#125;</span></span><br><span class="line">              td: <span class="operator">a</span>(target=<span class="string">"_blank"</span>, herf=<span class="string">"../movie/#&#123;item._id&#125;"</span>) 查看</span><br><span class="line">              td: <span class="operator">a</span>(target=<span class="string">"_blank"</span>, herf=<span class="string">"../admin/update/#&#123;item._id&#125;"</span>) 修改</span><br><span class="line">              td</span><br><span class="line">                button.btn.btn-danger.del(type=<span class="string">"button"</span>, <span class="built_in">date</span>-id=<span class="string">"#&#123;item._id&#125;"</span>) 删除</span><br></pre></td></tr></table></figure></p>
<h3 id="路由">路由</h3><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = require(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">var</span> path = require(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">var</span> port = process.env.PORT || <span class="number">3000</span></span><br><span class="line"><span class="keyword">var</span> app = express()</span><br><span class="line"></span><br><span class="line">app.<span class="keyword">set</span>(<span class="string">'views'</span>,<span class="string">'./views/pages'</span>)</span><br><span class="line">app.<span class="keyword">set</span>(<span class="string">'view engine'</span>, <span class="string">'jade'</span>)</span><br><span class="line">app.<span class="keyword">use</span>(express.<span class="keyword">static</span>(path.join(__dirname,<span class="string">'bower_components'</span>)))</span><br><span class="line">app.listen(port)</span><br><span class="line"></span><br><span class="line">console.log(<span class="string">'server listening on poert:'</span>+port)</span><br><span class="line"></span><br><span class="line"><span class="comment">// index</span></span><br><span class="line">app.<span class="keyword">get</span>(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span> <span class="params">(req,res)</span> </span>&#123;</span><br><span class="line">    res.render(<span class="string">'index'</span>,&#123;</span><br><span class="line">        title: <span class="string">'首页'</span>,</span><br><span class="line">        movies: [</span><br><span class="line">            &#123;</span><br><span class="line">                title: <span class="string">'变形金刚1'</span>,</span><br><span class="line">                _id: <span class="number">1</span>,</span><br><span class="line">                poster: <span class="string">'https://img3.doubanio.com/view/movie_poster_cover/mpst/public/p2332503406.jpg'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                title: <span class="string">'变形金刚2'</span>,</span><br><span class="line">                _id: <span class="number">2</span>,</span><br><span class="line">                poster: <span class="string">'https://img3.doubanio.com/view/movie_poster_cover/mpst/public/p2332503406.jpg'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                title: <span class="string">'变形金刚3'</span>,</span><br><span class="line">                _id: <span class="number">3</span>,</span><br><span class="line">                poster: <span class="string">'https://img3.doubanio.com/view/movie_poster_cover/mpst/public/p2332503406.jpg'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                title: <span class="string">'变形金刚4'</span>,</span><br><span class="line">                _id: <span class="number">4</span>,</span><br><span class="line">                poster: <span class="string">'https://img3.doubanio.com/view/movie_poster_cover/mpst/public/p2332503406.jpg'</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        ]</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// movie detail</span></span><br><span class="line">app.<span class="keyword">get</span>(<span class="string">'/movie/:id'</span>,<span class="function"><span class="keyword">function</span> <span class="params">(req,res)</span> </span>&#123;</span><br><span class="line">    res.render(<span class="string">'detail'</span>,&#123;</span><br><span class="line">        title: <span class="string">'详情页'</span>,</span><br><span class="line">        movie:&#123;</span><br><span class="line">            title:<span class="string">'美国队长3：内战'</span>,</span><br><span class="line">            director: <span class="string">'安东尼·罗素 / 乔·罗素'</span>,</span><br><span class="line">            editor : <span class="string">'克里斯托弗·马库斯 / 斯蒂芬·麦克菲利 / 杰克·科比 / 乔·西蒙'</span>,</span><br><span class="line">            actor : <span class="string">'克里斯·埃文斯 / 小罗伯特·唐尼 / 斯嘉丽·约翰逊 / 塞巴斯蒂安·斯坦 / 安东尼·麦凯 / 更多...'</span>,</span><br><span class="line">            type : <span class="string">'动作 / 科幻 / 冒险'</span>,</span><br><span class="line">            link : <span class="string">'marvel.com/captainamerica'</span>,</span><br><span class="line">            country : <span class="string">'美国'</span>,</span><br><span class="line">            language : <span class="string">'科萨语 / 英语 / 德语 / 俄语 / 罗马尼亚语'</span>,</span><br><span class="line">            publishTime: <span class="string">' 2016-05-06(中国大陆/美国) / 2016-04-12(加州首映)'</span>,</span><br><span class="line">            duration : <span class="string">'148分钟(中国大陆) / 147分钟'</span>,</span><br><span class="line">            alise : <span class="string">'美国队长3：内战 / 美国队长3：英雄内战(港/台) / 美队3 / Captain America 3'</span>,</span><br><span class="line">            summary : <span class="string">'美国队长史蒂夫·罗杰斯（克里斯·埃文斯 Chris Evans 饰）带领着全新组建的复仇者联盟，继续维护世界和平。然而，一次执行任务时联盟成员不小心造成大量平民伤亡，从而激发政治压力，政府决定通过一套监管系统来管理和领导复仇者联盟。联盟内部因此分裂为两派：一方由史蒂夫· 罗杰斯领导，他主张维护成员自由，在免受政府干扰的情况下保护世界；另一方则追随托尼·斯塔克（小罗伯特·唐尼 Robert Downey Jr. 饰），他令人意外地决定支持政府的监管和责任制体系。神秘莫测的巴基（塞巴斯蒂安·斯坦 Sebastian Stan 饰）似乎成为内战的关键人物……'</span>,</span><br><span class="line">            flash:<span class="string">'https://img3.doubanio.com/rda/8ffecbe972ad5cf.mp4'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//admin page</span></span><br><span class="line">app.<span class="keyword">get</span>(<span class="string">'/admin/movie'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(req, res)</span> </span>&#123;</span><br><span class="line">    res.render(<span class="string">'admin'</span>, &#123;</span><br><span class="line">        title: <span class="string">'imooc 后台录入页'</span>,</span><br><span class="line">        movie: &#123;</span><br><span class="line">            director: <span class="string">''</span>,</span><br><span class="line">            country: <span class="string">''</span>,</span><br><span class="line">            title: <span class="string">''</span>,</span><br><span class="line">            publishTime: <span class="string">''</span>,</span><br><span class="line">            poster: <span class="string">''</span>,</span><br><span class="line">            language: <span class="string">''</span>,</span><br><span class="line">            flash: <span class="string">''</span>,</span><br><span class="line">            summary: <span class="string">''</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//admin page</span></span><br><span class="line">app.<span class="keyword">get</span>(<span class="string">'/admin/list'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(req, res)</span> </span>&#123;</span><br><span class="line">    res.render(<span class="string">'list'</span>, &#123;</span><br><span class="line">        title: <span class="string">'imooc 列表页'</span>,</span><br><span class="line">        movies: [&#123;</span><br><span class="line">            director: <span class="string">'乔斯·韦登'</span>,</span><br><span class="line">            country: <span class="string">'美国'</span>,</span><br><span class="line">            title: <span class="string">'复仇者联盟2'</span>,</span><br><span class="line">            publishTime: <span class="string">'2015'</span>,</span><br><span class="line">            _id:<span class="number">2</span>,</span><br><span class="line">            poster: <span class="string">'http://img31.mtime.cn/mg/2015/03/27/120537.13212993_270X405X4.jpg'</span>,</span><br><span class="line">            language: <span class="string">'英语'</span>,</span><br><span class="line">            flash: <span class="string">'http://v.youku.com/v_show/id_XODc4NDY0MjA4.html'</span>,</span><br><span class="line">            summary: <span class="string">'影片讲述当钢铁侠试图启动处于休眠状态的维持和平计划时，事情出了差错。于是，在地球面临生死存亡的紧急关头时，强大的超级英雄们挺身而出承担起拯救世界的重任，他们将阻止可怕的人工智能机器人“奥创”制定恐怖计划。'</span></span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>目前还是假数据，还没有使用 MongoDB。</p>
<p>运行  <code>node app.js</code> 然后再浏览器打开 <code>http://localhost:3000</code>。</p>
<hr>
<h2 id="相关链接：">相关链接：</h2><p><a href="http://www.imooc.com/video/1226" target="_blank" rel="external">http://www.imooc.com/video/1226</a><br><a href="http://expressjs.com/" target="_blank" rel="external">http://expressjs.com/</a><br><a href="http://bower.io/" target="_blank" rel="external">http://bower.io/</a></p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p><code>express</code> 开发一个简单的网站，网页模板引擎使用 <code>jade</code>，样式基于 <code>bootstrap</code>，数据库使用 <code>MongoDB</code></p>]]>
    
    </summary>
    
      <category term="Express" scheme="http://hanks.xyz/tags/Express/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[认识 Express]]></title>
    <link href="http://hanks.xyz/2016/05/19/express-node/"/>
    <id>http://hanks.xyz/2016/05/19/express-node/</id>
    <published>2016-05-19T14:38:44.000Z</published>
    <updated>2016-05-19T15:17:36.000Z</updated>
    <content type="html"><![CDATA[<p>Node.js 本身对 http 模块封装的不够方便，于是相应的 web 开发框架便应运而生，express是使用比较多的，express 比较轻量级，围绕 http 模块进行了封装，但是支持很多扩展使它变得非常强大。<br><a id="more"></a></p>
<p><img src="http://ww3.sinaimg.cn/large/8c9b876fjw1f413pj01msj20zk0k0wgf.jpg" alt=""></p>
<h3 id="安装_express">安装 express</h3><p>当然前提是有 node 环境，安装过了 npm </p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="operator"><span class="keyword">install</span> express-generator -<span class="keyword">g</span></span></span><br></pre></td></tr></table></figure>
<p>查看帮助</p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ express --help</span><br><span class="line"></span><br><span class="line">  Usage: express [options] [dir]</span><br><span class="line"></span><br><span class="line">  Options:</span><br><span class="line"></span><br><span class="line">    -<span class="ruby">h, --help          output usage information</span><br><span class="line"></span>    -<span class="ruby"><span class="constant">V</span>, --version       output the version number</span><br><span class="line"></span>    -<span class="ruby">e, --ejs           add ejs engine support (defaults to jade)</span><br><span class="line"></span>        -<span class="ruby">-hbs           add handlebars engine support</span><br><span class="line"></span>    -<span class="ruby"><span class="constant">H</span>, --hogan         add hogan.js engine support</span><br><span class="line"></span>    -<span class="ruby">c, --css &lt;engine&gt;  add stylesheet &lt;engine&gt; support (less|stylus|compass|sass) (defaults to plain css)</span><br><span class="line"></span>        -<span class="ruby">-git           add .gitignore</span><br><span class="line"></span>    -<span class="ruby">f, --force         force on non-empty directory</span></span><br></pre></td></tr></table></figure>
<p>通过查看帮助可以看到 express 支持的扩展， ejs | jade | Hogan.js | handlebars 模板引擎， less|stylus|compass|sass 处理生成 css。</p>
<h3 id="创建项目">创建项目</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># 创建一个名为 rent 的项目</span><br><span class="line">$ express rent</span><br><span class="line"></span><br><span class="line">   <span class="operator"><span class="keyword">create</span> : rent</span><br><span class="line">   <span class="keyword">create</span> : rent/<span class="keyword">package</span>.<span class="keyword">json</span></span><br><span class="line">   <span class="keyword">create</span> : rent/app.js</span><br><span class="line">   <span class="keyword">create</span> : rent/<span class="keyword">public</span></span><br><span class="line">   <span class="keyword">create</span> : rent/routes</span><br><span class="line">   <span class="keyword">create</span> : rent/routes/<span class="keyword">index</span>.js</span><br><span class="line">   <span class="keyword">create</span> : rent/routes/<span class="keyword">users</span>.js</span><br><span class="line">   <span class="keyword">create</span> : rent/<span class="keyword">public</span>/images</span><br><span class="line">   <span class="keyword">create</span> : rent/<span class="keyword">public</span>/stylesheets</span><br><span class="line">   <span class="keyword">create</span> : rent/<span class="keyword">public</span>/stylesheets/<span class="keyword">style</span>.css</span><br><span class="line">   <span class="keyword">create</span> : rent/views</span><br><span class="line">   <span class="keyword">create</span> : rent/views/<span class="keyword">index</span>.jade</span><br><span class="line">   <span class="keyword">create</span> : rent/views/layout.jade</span><br><span class="line">   <span class="keyword">create</span> : rent/views/<span class="keyword">error</span>.jade</span><br><span class="line">   <span class="keyword">create</span> : rent/<span class="keyword">bin</span></span><br><span class="line">   <span class="keyword">create</span> : rent/<span class="keyword">bin</span>/www</span><br><span class="line"></span><br><span class="line">   <span class="keyword">install</span> dependencies:</span><br><span class="line">     $ cd rent &amp;&amp; npm <span class="keyword">install</span></span><br><span class="line"></span><br><span class="line">   run the app:</span><br><span class="line">     $ DEBUG=rent:* npm <span class="keyword">start</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">create</span> : rent/<span class="keyword">public</span>/javascripts</span></span><br></pre></td></tr></table></figure>
<p>根据上面的提示继续安装依赖</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入目录</span></span><br><span class="line"><span class="variable">$ </span>cd rent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line"><span class="variable">$ </span>npm install</span><br></pre></td></tr></table></figure>
<p>项目的目录结构</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">rent</span><br><span class="line">├── app<span class="class">.js</span></span><br><span class="line">├── bin</span><br><span class="line">│   └── www</span><br><span class="line">├── node_modules</span><br><span class="line">│   ├── body-parser</span><br><span class="line">│   ├── cookie-parser</span><br><span class="line">│   ├── debug</span><br><span class="line">│   ├── express</span><br><span class="line">│   ├── jade</span><br><span class="line">│   ├── morgan</span><br><span class="line">│   └── serve-favicon</span><br><span class="line">├── package<span class="class">.json</span></span><br><span class="line">├── public</span><br><span class="line">│   ├── images</span><br><span class="line">│   ├── javascripts</span><br><span class="line">│   └── stylesheets</span><br><span class="line">├── routes</span><br><span class="line">│   ├── index<span class="class">.js</span></span><br><span class="line">│   └── users<span class="class">.js</span></span><br><span class="line">└── views</span><br><span class="line">    ├── error<span class="class">.jade</span></span><br><span class="line">    ├── index<span class="class">.jade</span></span><br><span class="line">    └── layout.jade</span><br></pre></td></tr></table></figure>
<p><code>app.js文件</code>：应用程序的入口文件。<br><code>node_modules目录</code>：安装了哪些模块。<br><code>public目录</code>： 存放图片、css和 js 脚本等资源。<br><code>routes目录</code>： 路由的处理程序。<br><code>views目录</code>：存放模板视图</p>
<p>参考链接</p>
<p><a href="http://expressjs.com/en/starter/generator.html" target="_blank" rel="external">http://expressjs.com/en/starter/generator.html</a></p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>Node.js 本身对 http 模块封装的不够方便，于是相应的 web 开发框架便应运而生，express是使用比较多的，express 比较轻量级，围绕 http 模块进行了封装，但是支持很多扩展使它变得非常强大。<br>]]>
    
    </summary>
    
      <category term="Express" scheme="http://hanks.xyz/tags/Express/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[SQLite 中的 sqlite_master 表]]></title>
    <link href="http://hanks.xyz/2016/05/05/sqlite-master/"/>
    <id>http://hanks.xyz/2016/05/05/sqlite-master/</id>
    <published>2016-05-05T15:01:26.000Z</published>
    <updated>2016-05-05T15:12:55.000Z</updated>
    <content type="html"><![CDATA[<p>需求：有一个 SQLite 的 db 数据库文件，现在需要列出这个数据库文件的所有表的信息。</p>
<a id="more"></a>
<p>SQLite 的数据库中有一个自动生成的 <code>sqlite_master</code> 表，表中保存数据库表的关键信息。如要查看表概要，可按如下操作：<br>这个表的结构如下：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> sqlite_master (</span><br><span class="line">  <span class="keyword">type</span> <span class="built_in">text</span>,</span><br><span class="line">  <span class="keyword">name</span> <span class="built_in">text</span>,</span><br><span class="line">  tbl_name <span class="built_in">text</span>,</span><br><span class="line">  rootpage <span class="built_in">integer</span>,</span><br><span class="line">  <span class="keyword">sql</span> <span class="built_in">text</span></span><br><span class="line">);</span></span><br></pre></td></tr></table></figure>
<p><code>type</code> 字段的值是 <code>table</code>，<code>name</code> 字段是表的名字，<code>sql</code> 字段是表的创建语句。<br>所以想要查看数据库中所有表的信息可以执行以下语句：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">SELECT</span> <span class="keyword">name</span> <span class="keyword">FROM</span> sqlite_master </span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">type</span> = <span class="string">'table'</span> </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">name</span>;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>需求：有一个 SQLite 的 db 数据库文件，现在需要列出这个数据库文件的所有表的信息。</p>]]>
    
    </summary>
    
      <category term="SQLite" scheme="http://hanks.xyz/tags/SQLite/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Linux 的 crontab 定时重复任务]]></title>
    <link href="http://hanks.xyz/2016/05/02/crontab/"/>
    <id>http://hanks.xyz/2016/05/02/crontab/</id>
    <published>2016-05-02T14:09:47.000Z</published>
    <updated>2016-05-02T15:11:17.000Z</updated>
    <content type="html"><![CDATA[<p><code>cron</code> (crond) 工具是 Linux 上面的用来执行周期性任务的工具，比如每天凌晨进行数据统计，定期备份数据库，写缓存数据到硬盘、日志清理等。<br><a id="more"></a></p>
<p>以下环境在 Ubuntu 14.04 64位</p>
<h2 id="基本组成">基本组成</h2><ul>
<li>系统服务 ：<code>cron</code>（crond） （crond 进程每分钟会定期检查是否有要执行的任务，如果有要执行的任务，则自动执行该任务）</li>
<li>配置文件：以文件方式设置定时任务（在/etc目录下有一个crontab文件，这个就是系统任务调度的配置文件）</li>
<li>配置工具 ：<code>crontab</code> 用于调整任务</li>
</ul>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前任务</span></span><br><span class="line"><span class="variable">$ </span>crontab -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 cron 服务的状态</span></span><br><span class="line"><span class="variable">$ </span>service cron status</span><br></pre></td></tr></table></figure>
<h2 id="添加任务">添加任务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ crontab <span class="operator">-e</span></span><br></pre></td></tr></table></figure>
<p>出现一个文件，在文件末尾添加一个任务：每天的 04:20 执行一行命令，输出 ‘hello world’ 到 /var/tmp/log 文件</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># minute (m), hour (h), day of month (dom), month (mon),</span><br><span class="line"># and day of week (dow) or <span class="operator"><span class="keyword">use</span> <span class="string">'*'</span> <span class="keyword">in</span> these <span class="keyword">fields</span> (<span class="keyword">for</span> <span class="string">'any'</span>).#</span><br><span class="line"># <span class="keyword">Notice</span> that tasks will be started based <span class="keyword">on</span> the cron<span class="string">'s system</span><br><span class="line"># daemon'</span>s notion <span class="keyword">of</span> <span class="keyword">time</span> <span class="keyword">and</span> timezones.</span><br><span class="line">#</span><br><span class="line"># <span class="keyword">Output</span> <span class="keyword">of</span> the crontab jobs (<span class="keyword">including</span> <span class="keyword">errors</span>) <span class="keyword">is</span> sent <span class="keyword">through</span></span><br><span class="line"># email <span class="keyword">to</span> the <span class="keyword">user</span> the crontab <span class="keyword">file</span> belongs <span class="keyword">to</span> (unless redirected).</span><br><span class="line">#</span><br><span class="line"># <span class="keyword">For</span> example, you can run a <span class="keyword">backup</span> <span class="keyword">of</span> all your <span class="keyword">user</span> accounts</span><br><span class="line"># <span class="keyword">at</span> <span class="number">5</span> a.<span class="keyword">m</span> every <span class="keyword">week</span> <span class="keyword">with</span>:</span><br><span class="line"># <span class="number">0</span> <span class="number">5</span> * * <span class="number">1</span> tar -zcf /<span class="keyword">var</span>/backups/home.tgz /home/</span><br><span class="line">#</span><br><span class="line"># <span class="keyword">For</span> more information see the <span class="keyword">manual</span> pages <span class="keyword">of</span> crontab(<span class="number">5</span>) <span class="keyword">and</span> cron(<span class="number">8</span>)</span><br><span class="line">#</span><br><span class="line"># <span class="keyword">m</span> h  dom mon dow   command</span><br><span class="line"><span class="number">20</span> <span class="number">4</span> * * *  echo <span class="string">'hello world'</span> &gt;&gt; /<span class="keyword">var</span>/tmp/<span class="keyword">log</span></span></span><br></pre></td></tr></table></figure>
<p>添加一条任务的格式</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">*</span>  <span class="keyword">*</span>  <span class="keyword">*</span>  <span class="keyword">*</span>  <span class="keyword">*</span>     COMMAND</span><br><span class="line">|<span class="string">  </span>|<span class="string">  </span>|<span class="string">  </span>|<span class="string">  </span>|</span><br><span class="line">|<span class="string">  </span>|<span class="string">  </span>|<span class="string">  </span>|<span class="string">  +--&gt; 星 期 0 ~ 7 ( 0 或 7 表 示 星 期 天 )</span><br><span class="line"></span>|<span class="string">  </span>|<span class="string">  </span>|<span class="string">  +-----&gt; 月 份 1 ~ 12</span><br><span class="line"></span>|<span class="string">  </span>|<span class="string">  +--------&gt; 日 期 1 ~ 31</span><br><span class="line"></span>|<span class="string">  +-----------&gt; 小 时 0 ~ 23</span><br><span class="line">+--------------&gt; 分 钟 0 ~ 59</span></span><br></pre></td></tr></table></figure>
<p>crontab 文件的一些例子：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># 每晚的 <span class="number">21</span>:<span class="number">30</span> 重启 apache</span></span><br><span class="line">$ <span class="number">30</span> <span class="number">21</span> * * * /usr/local/etc/rc.d/lighttpd restart </span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 每月 <span class="number">1</span>、<span class="number">10</span>、<span class="number">22</span> 日的 <span class="number">4</span>:<span class="number">45</span> 重启 apache</span></span><br><span class="line">$ <span class="number">45</span> <span class="number">4</span> <span class="number">1</span>,<span class="number">10</span>,<span class="number">22</span> * * /usr/local/etc/rc.d/lighttpd restart </span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 每周六、周日的 <span class="number">1</span>:<span class="number">10</span> 重启 apache</span></span><br><span class="line">$ <span class="number">10</span> <span class="number">1</span> * * <span class="number">6</span>,<span class="number">0</span> /usr/local/etc/rc.d/lighttpd restart </span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 每天 <span class="number">18</span>:<span class="number">00</span> 至 <span class="number">23</span>:<span class="number">00</span> 之间每隔 <span class="number">30</span> 分钟重启 apache</span></span><br><span class="line">$ <span class="number">0</span>,<span class="number">30</span> <span class="number">18</span>-<span class="number">23</span> * * * /usr/local/etc/rc.d/lighttpd restart </span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 每星期六的 <span class="number">23</span>:<span class="number">00</span> 重启 apache</span></span><br><span class="line">$<span class="number">0</span> <span class="number">23</span> * * <span class="number">6</span> /usr/local/etc/rc.d/lighttpd restart </span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 每一小时重启 apache </span></span><br><span class="line">$ * */<span class="number">1</span> * * * /usr/local/etc/rc.d/lighttpd restart </span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># <span class="number">23</span> 点到早上 <span class="number">7</span> 点之间，每隔一小时重启 apache </span></span><br><span class="line">$ * <span class="number">23</span>-<span class="number">7</span>/<span class="number">1</span> * * * /usr/local/etc/rc.d/lighttpd restart</span><br></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出用户目前的crontab</span></span><br><span class="line">$ crontab <span class="operator">-l</span></span><br></pre></td></tr></table></figure>
<h2 id="其他配置">其他配置</h2><p>所有用户定义的 crontab 文件都被保存在 <code>/var/spool/cron</code> 目录中。其文件名与用户名一致。<br>使用者权限文件：<br>文件：<code>/etc/cron.deny</code> ，该文件中所列用户不允许使用 crontab 命令<br>文件：<code>/etc/cron.allow</code> ，该文件中所列用户允许使用 crontab 命令<br>文件：<code>/var/spool/cron/</code> ，所有用户 crontab 文件存放的目录,以用户名命名</p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p><code>cron</code> (crond) 工具是 Linux 上面的用来执行周期性任务的工具，比如每天凌晨进行数据统计，定期备份数据库，写缓存数据到硬盘、日志清理等。<br>]]>
    
    </summary>
    
      <category term="Linux" scheme="http://hanks.xyz/tags/Linux/"/>
    
      <category term="crontab" scheme="http://hanks.xyz/tags/crontab/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android 中 NestedScrollingParent 接口]]></title>
    <link href="http://hanks.xyz/2016/04/27/NestedScrollingParent/"/>
    <id>http://hanks.xyz/2016/04/27/NestedScrollingParent/</id>
    <published>2016-04-26T16:20:37.000Z</published>
    <updated>2016-04-26T16:25:19.000Z</updated>
    <content type="html"><![CDATA[<h2 id="NestedScrollingParent_接口">NestedScrollingParent 接口</h2><p><strong>接口</strong>（android.support.v4.view.NestedScrollingParent）</p>
<blockquote>
<p>Nested : 嵌套的</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:left">几个实现类</th>
<th style="text-align:left">介绍</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">CoordinatorLayout</td>
<td style="text-align:left">非常强大，协调它里面 View 的嵌套滑动</td>
</tr>
<tr>
<td style="text-align:left">NestedScrollView</td>
<td style="text-align:left">类似 ScrollView, 但是支持嵌套滑动的</td>
</tr>
<tr>
<td style="text-align:left">SwipeRefreshLayout</td>
<td style="text-align:left">SwipeRefreshLayout 支持竖直方向的下拉刷新控件</td>
</tr>
</tbody>
</table>
<a id="more"></a>
<h2 id="方法介绍">方法介绍</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> 当你希望自己的自定义布局支持嵌套子视图并且处理滚动操作，就可以实现该接口。</span><br><span class="line"> 实现这个接口后可以创建一个 NestedScrollingParentHelper 字段，使用它来帮助你处理大部分的方法。</span><br><span class="line"> 处理嵌套的滚动时应该使用  `ViewCompat`，`ViewGroupCompat`或`ViewParentCompat` 中的方法来处理，这是一些兼容库，</span><br><span class="line"> 他们保证 Android 5.0之前的兼容性垫片的静态方法，这样可以兼容 Android 5.0 之前的版本。</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">NestedScrollingParent</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 当子视图调用 startNestedScroll(View, int) 后调用该方法。返回 true 表示响应子视图的滚动。</span><br><span class="line">     * 实现这个方法来声明支持嵌套滚动，如果返回 true，那么这个视图将要配合子视图嵌套滚动。当嵌套滚动结束时会调用到 onStopNestedScroll(View)。</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> child 可滚动的子视图</span><br><span class="line">     * <span class="doctag">@param</span> target NestedScrollingParent 的直接可滚动的视图，一般情况就是 child</span><br><span class="line">     * <span class="doctag">@param</span> nestedScrollAxes 包含 ViewCompat#SCROLL_AXIS_HORIZONTAL, ViewCompat#SCROLL_AXIS_VERTICAL 或者两个值都有。</span><br><span class="line">     * <span class="doctag">@return</span> 返回 true 表示响应子视图的滚动。</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onStartNestedScroll</span><span class="params">(View child, View target, <span class="keyword">int</span> nestedScrollAxes)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 如果 onStartNestedScroll 返回 true ，然后走该方法，这个方法里可以做一些初始化。</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNestedScrollAccepted</span><span class="params">(View child, View target, <span class="keyword">int</span> nestedScrollAxes)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 子视图开始滚动前会调用这个方法。这时候父布局（也就是当前的 NestedScrollingParent 的实现类）可以通过这个方法来配合子视图同时处理滚动事件。</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> target 滚动的子视图</span><br><span class="line">     * <span class="doctag">@param</span> dx 绝对值为手指在x方向滑动的距离，dx&lt;0 表示手指在屏幕向右滑动</span><br><span class="line">     * <span class="doctag">@param</span> dy 绝对值为手指在y方向滑动的距离，dy&lt;0 表示手指在屏幕向下滑动</span><br><span class="line">     * <span class="doctag">@param</span> consumed 一个数组，值用来表示父布局消耗了多少距离，未消耗前为[0,0], 如果父布局想处理滚动事件，就可以在这个方法的实现中为consumed[0]，consumed[1]赋值。</span><br><span class="line">     *                 分别表示x和y方向消耗的距离。如父布局想在竖直方向（y）完全拦截子视图，那么让 consumed[1] = dy，就把手指产生的触摸事件给拦截了，子视图便响应不到触摸事件了 。</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNestedPreScroll</span><span class="params">(View target, <span class="keyword">int</span> dx, <span class="keyword">int</span> dy, <span class="keyword">int</span>[] consumed)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span><br><span class="line">     * 这个方法表示子视图正在滚动，并且把滚动距离回调用到该方法，前提是 onStartNestedScroll 返回了 true。</span><br><span class="line">     * &lt;p&gt;Both the consumed and unconsumed portions of the scroll distance are reported to the</span><br><span class="line">     * ViewParent. An implementation may choose to use the consumed portion to match or chase scroll</span><br><span class="line">     * position of multiple child elements, for example. The unconsumed portion may be used to</span><br><span class="line">     * allow continuous dragging of multiple scrolling or draggable elements, such as scrolling</span><br><span class="line">     * a list within a vertical drawer where the drawer begins dragging once the edge of inner</span><br><span class="line">     * scrolling content is reached.&lt;/p&gt;</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> target 滚动的子视图</span><br><span class="line">     * <span class="doctag">@param</span> dxConsumed 手指产生的触摸距离中，子视图消耗的x方向的距离</span><br><span class="line">     * <span class="doctag">@param</span> dyConsumed 手指产生的触摸距离中，子视图消耗的y方向的距离 ，如果 onNestedPreScroll 中 dy = 20， consumed[0] = 8，那么 dy = 12</span><br><span class="line">      * <span class="doctag">@param</span> dxUnconsumed 手指产生的触摸距离中，未被子视图消耗的x方向的距离</span><br><span class="line">     * <span class="doctag">@param</span> dyUnconsumed 手指产生的触摸距离中，未被子视图消耗的y方向的距离</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNestedScroll</span><span class="params">(View target, <span class="keyword">int</span> dxConsumed, <span class="keyword">int</span> dyConsumed,<span class="keyword">int</span> dxUnconsumed, <span class="keyword">int</span> dyUnconsumed)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 响应嵌套滚动结束</span><br><span class="line">     *</span><br><span class="line">     * 当一个嵌套滚动结束后（如MotionEvent#ACTION_UP， MotionEvent#ACTION_CANCEL）会调用该方法，在这里可有做一些收尾工作，比如变量重置</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStopNestedScroll</span><span class="params">(View target)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 手指在屏幕快速滑触发Fling前回调，如果前面 onNestedPreScroll 中父布局消耗了事件，那么这个也会被触发</span><br><span class="line">     * 返回true表示父布局完全处理 fling 事件</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> target 滚动的子视图</span><br><span class="line">     * <span class="doctag">@param</span> velocityX x方向的速度（px/s）</span><br><span class="line">     * <span class="doctag">@param</span> velocityY y方向的速度</span><br><span class="line">     * <span class="doctag">@return</span> true if this parent consumed the fling ahead of the target view</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onNestedPreFling</span><span class="params">(View target, <span class="keyword">float</span> velocityX, <span class="keyword">float</span> velocityY)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 子视图fling 时回调，父布局可以选择监听子视图的 fling。</span><br><span class="line">     * true 表示父布局处理 fling，false表示父布局监听子视图的fling</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@param</span> target View that initiated the nested scroll</span><br><span class="line">     * <span class="doctag">@param</span> velocityX Horizontal velocity in pixels per second</span><br><span class="line">     * <span class="doctag">@param</span> velocityY Vertical velocity in pixels per second</span><br><span class="line">     * <span class="doctag">@param</span> consumed true 表示子视图处理了fling</span><br><span class="line"></span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onNestedFling</span><span class="params">(View target, <span class="keyword">float</span> velocityX, <span class="keyword">float</span> velocityY, <span class="keyword">boolean</span> consumed)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 返回当前 NestedScrollingParent 的滚动方向，</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@return</span></span><br><span class="line">     * <span class="doctag">@see</span> ViewCompat#SCROLL_AXIS_HORIZONTAL</span><br><span class="line">     * <span class="doctag">@see</span> ViewCompat#SCROLL_AXIS_VERTICAL</span><br><span class="line">     * <span class="doctag">@see</span> ViewCompat#SCROLL_AXIS_NONE</span><br><span class="line">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getNestedScrollAxes</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="NestedScrollingParent_接口">NestedScrollingParent 接口</h2><p><strong>接口</strong>（android.support.v4.view.NestedScrollingParent）</p>
<blockquote>
<p>Nested : 嵌套的</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:left">几个实现类</th>
<th style="text-align:left">介绍</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">CoordinatorLayout</td>
<td style="text-align:left">非常强大，协调它里面 View 的嵌套滑动</td>
</tr>
<tr>
<td style="text-align:left">NestedScrollView</td>
<td style="text-align:left">类似 ScrollView, 但是支持嵌套滑动的</td>
</tr>
<tr>
<td style="text-align:left">SwipeRefreshLayout</td>
<td style="text-align:left">SwipeRefreshLayout 支持竖直方向的下拉刷新控件</td>
</tr>
</tbody>
</table>]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
      <category term="NestedScrolling" scheme="http://hanks.xyz/tags/NestedScrolling/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[学习 iOS 中 UITableView]]></title>
    <link href="http://hanks.xyz/2016/04/21/iOS-TableView/"/>
    <id>http://hanks.xyz/2016/04/21/iOS-TableView/</id>
    <published>2016-04-20T16:30:29.000Z</published>
    <updated>2016-04-20T17:18:54.000Z</updated>
    <content type="html"><![CDATA[<p><code>iOS</code> 中的列表对应的控件为 <code>UITableView</code> ，可以通过给 <code>UITableView</code> 设置数据源来显示不同的数据。结合 Android 开发给 RecyclerView 或者 ListView 显示数据的步骤:</p>
<ol>
<li>界面中添加 ListView （xml）</li>
<li>代码中拿到 ListView 的引用（findViewById）</li>
<li>设置 ListView 的 item 的个数（一般为数据源的个数）</li>
<li>创建每个 item 的布局（xml）</li>
<li>设置 ListView 对应每个位置的 item 显示的内容（数据源的每一项）</li>
<li>刷新界面 adapter 的 notifyDataSetChanged()</li>
</ol>
<p>iOS 使用 UITableView 的步骤：</p>
<ol>
<li>界面中添加 UITableView （storyboard）</li>
<li>代码中拿到 UITableView 的引用 （按住 ctrl 拖动控件到代码中引用）</li>
<li>设置 UITableView 的 cell 的个数（一般为数据源的个数）</li>
<li>创建每个 item 的布局 （xib）</li>
<li>设置 UITableView 对应每个位置的 cell 显示的内容（数据源的每一项）</li>
<li>刷新界面 tableview 的 reloadData()</li>
</ol>
<a id="more"></a>
<h3 id="设置两个协议（类似于接口）：">设置两个协议（类似于接口）：</h3><ul>
<li><strong>UITableViewDataSource</strong>（data source），用于设置数据  </li>
<li><strong>UITableViewDelegate</strong>（delegate），用于处理 TableView 的交互（比如点击，添加、删除、移动，header、footer等）</li>
</ul>
<h3 id="有两个方法需要去实现：">有两个方法需要去实现：</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 每个section需要加载多少行，一般选择返回数据源的个数</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(tableView: UITableView, numberOfRowsInSection section: Int)</span></span> -&gt; <span class="type">Int</span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 返回 UITableViewCell，UITableViewCell 是 section 里的行（某一行或者所有行），根据 indexPath 来显示不同的内容到 Cell</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath)</span></span> -&gt; <span class="type">UITableViewCell</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<p>代码：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  ArticleListController.swift</span></span><br><span class="line"><span class="comment">//  AndroidDaily</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by hanks on 16/4/17.</span></span><br><span class="line"><span class="comment">//  Copyright © 2016年 hanks. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArticleListController</span>: <span class="title">UIViewController</span>, <span class="title">UITableViewDelegate</span>, <span class="title">UITableViewDataSource</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> articleList = [<span class="type">Article</span>]()</span><br><span class="line">    <span class="keyword">var</span> tableView : <span class="type">UITableView</span>?</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line">        initView()</span><br><span class="line">        initData()</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Uncomment the following line to preserve selection between presentations</span></span><br><span class="line">        <span class="comment">// self.clearsSelectionOnViewWillAppear = false</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Uncomment the following line to display an Edit button in the navigation bar for this view controller.</span></span><br><span class="line">        <span class="comment">// self.navigationItem.rightBarButtonItem = self.editButtonItem()</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">initView</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="comment">// 初始化tableView的数据</span></span><br><span class="line">        <span class="keyword">self</span>.tableView=<span class="type">UITableView</span>(frame:<span class="keyword">self</span>.view.frame,style:<span class="type">UITableViewStyle</span>.<span class="type">Plain</span>)</span><br><span class="line">        <span class="comment">// 设置tableView的数据源</span></span><br><span class="line">        <span class="keyword">self</span>.tableView!.dataSource=<span class="keyword">self</span></span><br><span class="line">        <span class="comment">// 设置tableView的委托</span></span><br><span class="line">        <span class="keyword">self</span>.tableView!.delegate = <span class="keyword">self</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span>.tableView!.registerNib(<span class="type">UINib</span>(nibName: <span class="string">"ArticleCell"</span>,bundle: <span class="literal">nil</span>), forCellReuseIdentifier: <span class="string">"articleCell"</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span>.tableView!.rowHeight = <span class="type">UITableViewAutomaticDimension</span> <span class="comment">// 自适应，注意需要 设置所以控件的 left, right, bottom, top 约束 才会生效</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.tableView!.estimatedRowHeight = <span class="number">110</span> <span class="comment">//估算高度，提高性能</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.view.addSubview(<span class="keyword">self</span>.tableView!)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">initData</span><span class="params">()</span></span> &#123;</span><br><span class="line">         </span><br><span class="line">        <span class="keyword">let</span> url = <span class="type">NSURL</span>(string: <span class="string">"https://api.hanks.xyz/1.1/Articles?limit=30&amp;order=-createdAt"</span>)! <span class="comment">// url 瞎写的</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> requset = <span class="type">NSMutableURLRequest</span>(<span class="type">URL</span>: url)</span><br><span class="line">        requset.allHTTPHeaderFields = headers</span><br><span class="line">        </span><br><span class="line">        <span class="type">NSURLConnection</span>.sendAsynchronousRequest(requset, queue: <span class="type">NSOperationQueue</span>()) &#123; (<span class="number">_</span>, data, e) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">if</span> e == <span class="literal">nil</span> &#123;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">let</span> json  = <span class="keyword">try</span>? <span class="type">NSJSONSerialization</span></span><br><span class="line">                    .<span class="type">JSONObjectWithData</span>(data!, options:<span class="type">NSJSONReadingOptions</span>.<span class="type">AllowFragments</span>) <span class="keyword">as</span>! <span class="type">NSDictionary</span></span><br><span class="line">                </span><br><span class="line">                <span class="keyword">let</span> result = json?[<span class="string">"results"</span>] <span class="keyword">as</span>! <span class="type">Array</span>&lt;<span class="type">Article</span>&gt; <span class="keyword">as</span> <span class="type">NSArray</span></span><br><span class="line">                </span><br><span class="line">                <span class="keyword">for</span> item <span class="keyword">in</span> result &#123;</span><br><span class="line">                    <span class="keyword">let</span> article = <span class="type">Article</span>()</span><br><span class="line">                    </span><br><span class="line">                    article.title = item.valueForKey(<span class="string">"title"</span>) <span class="keyword">as</span>? <span class="type">String</span></span><br><span class="line">                    article.subTitle = item.valueForKey(<span class="string">"subtitle"</span>) <span class="keyword">as</span>? <span class="type">String</span></span><br><span class="line">                    article.authorName = item.valueForKey(<span class="string">"author_name"</span>) <span class="keyword">as</span>? <span class="type">String</span></span><br><span class="line">                    <span class="keyword">self</span>.articleList.append(article)</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// UI 操作放在 UI 线程</span></span><br><span class="line">                dispatch_async(dispatch_get_main_queue(), &#123; </span><br><span class="line">                    <span class="keyword">self</span>.tableView!.reloadData()</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">didReceiveMemoryWarning</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.didReceiveMemoryWarning()</span><br><span class="line">        <span class="comment">// Dispose of any resources that can be recreated.</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// MARK: - Table view data source</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(tableView: UITableView, numberOfRowsInSection section: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="comment">// #warning Incomplete implementation, return the number of rows</span></span><br><span class="line">        <span class="keyword">return</span> articleList.<span class="built_in">count</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath)</span></span> -&gt; <span class="type">UITableViewCell</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> cell = tableView .dequeueReusableCellWithIdentifier(<span class="string">"articleCell"</span>, forIndexPath: indexPath) <span class="keyword">as</span>! <span class="type">ArticleCell</span></span><br><span class="line">        cell.setData(articleList[indexPath.row])</span><br><span class="line">        <span class="keyword">return</span> cell;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>ArticleCell</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  ArticleCell.swift</span></span><br><span class="line"><span class="comment">//  AndroidDaily</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by hanks on 16/4/20.</span></span><br><span class="line"><span class="comment">//  Copyright © 2016年 hanks. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArticleCell</span>: <span class="title">UITableViewCell</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="preprocessor">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> titleLabel: <span class="type">UILabel</span>!</span><br><span class="line">    <span class="preprocessor">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> authorLabel: <span class="type">UILabel</span>!</span><br><span class="line">    <span class="preprocessor">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> subtitleLabel: <span class="type">UILabel</span>!</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">awakeFromNib</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.awakeFromNib()</span><br><span class="line">        <span class="comment">// Initialization code</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">setSelected</span><span class="params">(selected: Bool, animated: Bool)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.setSelected(selected, animated: animated)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Configure the view for the selected state</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">setData</span><span class="params">(article:Article)</span></span>  &#123;</span><br><span class="line">        titleLabel.text = article.title</span><br><span class="line">        authorLabel.text = article.authorName </span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置label 行高</span></span><br><span class="line">        <span class="keyword">let</span> text = subtitleLabel.attributedText</span><br><span class="line">        <span class="keyword">let</span> mas = <span class="type">NSMutableAttributedString</span>(attributedString:text!)</span><br><span class="line">        mas.replaceCharactersInRange(<span class="type">NSMakeRange</span>(<span class="number">0</span>, mas.string.utf16.<span class="built_in">count</span>),</span><br><span class="line">                                     withString: article.subTitle!)</span><br><span class="line">        subtitleLabel.attributedText = mas</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p><code>iOS</code> 中的列表对应的控件为 <code>UITableView</code> ，可以通过给 <code>UITableView</code> 设置数据源来显示不同的数据。结合 Android 开发给 RecyclerView 或者 ListView 显示数据的步骤:</p>
<ol>
<li>界面中添加 ListView （xml）</li>
<li>代码中拿到 ListView 的引用（findViewById）</li>
<li>设置 ListView 的 item 的个数（一般为数据源的个数）</li>
<li>创建每个 item 的布局（xml）</li>
<li>设置 ListView 对应每个位置的 item 显示的内容（数据源的每一项）</li>
<li>刷新界面 adapter 的 notifyDataSetChanged()</li>
</ol>
<p>iOS 使用 UITableView 的步骤：</p>
<ol>
<li>界面中添加 UITableView （storyboard）</li>
<li>代码中拿到 UITableView 的引用 （按住 ctrl 拖动控件到代码中引用）</li>
<li>设置 UITableView 的 cell 的个数（一般为数据源的个数）</li>
<li>创建每个 item 的布局 （xib）</li>
<li>设置 UITableView 对应每个位置的 cell 显示的内容（数据源的每一项）</li>
<li>刷新界面 tableview 的 reloadData()</li>
</ol>]]>
    
    </summary>
    
      <category term="iOS" scheme="http://hanks.xyz/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ubuntu 上搭建 LAMP 环境]]></title>
    <link href="http://hanks.xyz/2016/04/14/Ubuntu-lamp/"/>
    <id>http://hanks.xyz/2016/04/14/Ubuntu-lamp/</id>
    <published>2016-04-14T15:14:53.000Z</published>
    <updated>2016-04-16T12:30:09.000Z</updated>
    <content type="html"><![CDATA[<p>记得前两年玩 <code>PHP</code> 的时候 windows 下有个 <code>wamp</code>的集成环境，一个安装包，直接安装就搭建好了，还带 mysql 管理界面。</p>
<a id="more"></a>
<h2 id="传统安装">传统安装</h2><p>依次安装 apache2、php5、mysql-server、php5-mysql 。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get <span class="operator"><span class="keyword">install</span> apache2</span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> php5</span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> mysql-<span class="keyword">server</span></span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> php5-mysql</span></span><br></pre></td></tr></table></figure>
<h2 id="使用_tasksel_安装">使用 tasksel 安装</h2><p>使用 <code>tasksel</code> 可以很方便的安装 <code>lamp</code> 环境。</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># 安装 tasksel</span></span><br><span class="line">$ sudo apt-<span class="keyword">get</span> install tasksel</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 使用 tasksel 安装 LAMP</span></span><br><span class="line">$ sudo tasksel install lamp-server</span><br></pre></td></tr></table></figure>
<p>或者直接执行：<code>sudo tasksel</code><br>然后在tasksel界面中选LAMP-Server就OK了。<br><img src="https://dn-coding-net-production-pp.qbox.me/fb72935c-c892-4a11-a6b9-a65989074bd4.jpg" alt="选择服务"> </p>
<p><img src="https://dn-coding-net-production-pp.qbox.me/bef520be-7c1c-437f-a79d-b73ad76a5845.jpg" alt="安装中..."> </p>
<p>安装过程中会提示你输入mysql的root密码。安装完成可以检测一下各个环境是否安装完成。</p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>记得前两年玩 <code>PHP</code> 的时候 windows 下有个 <code>wamp</code>的集成环境，一个安装包，直接安装就搭建好了，还带 mysql 管理界面。</p>]]>
    
    </summary>
    
      <category term="LAMP" scheme="http://hanks.xyz/tags/LAMP/"/>
    
      <category term="Ubuntu" scheme="http://hanks.xyz/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[强大的 RxJava 也要进行错误处理]]></title>
    <link href="http://hanks.xyz/2016/04/14/rxjava-error/"/>
    <id>http://hanks.xyz/2016/04/14/rxjava-error/</id>
    <published>2016-04-14T14:35:16.000Z</published>
    <updated>2016-04-14T15:01:17.000Z</updated>
    <content type="html"><![CDATA[<p>onNext, onComplete, onError，<code>onError</code> 在 <code>Observable</code> 序列传递过程中出现异常时被调用，然后终止<code>Observable</code> 序列的传递，以此通知所有的观察者发生了一个不可恢复的错误。但是有好多时候需要我们手动去终止序列，例如当序列传递时不满足某个条件了就不在进行后续的操作，这可能并不是一个异常，需要我们手动抛出。<br><a id="more"></a><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Observable.just(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, null, <span class="number">6</span>)</span><br><span class="line">          .doOnNext(integer1 -&gt; System.out.println(<span class="number">1.0</span> / integer1))</span><br><span class="line">          .subscribe(integer -&gt; System.out.println(<span class="string">"integer = "</span> + integer),</span><br><span class="line">                     throwable -&gt; System.out.println(<span class="string">"throwable = "</span> + throwable));</span><br></pre></td></tr></table></figure></p>
<p>输出<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.0</span></span><br><span class="line">integer = <span class="number">1</span></span><br><span class="line"><span class="number">0.5</span></span><br><span class="line">integer = <span class="number">2</span></span><br><span class="line"><span class="number">0.3333333333333333</span></span><br><span class="line">integer = <span class="number">3</span></span><br><span class="line"><span class="number">0.25</span></span><br><span class="line">integer = <span class="number">4</span></span><br><span class="line">throwable = java.lang.NullPointerException</span><br></pre></td></tr></table></figure></p>
<p>正常情况下，<code>Observable</code> 序列在传递过程中出现错误会调用 <code>onError</code> 终止序列。 看下面的情况：</p>
<figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Observable.just(<span class="string">"file1"</span>, <span class="string">"file2"</span>,<span class="string">"file3"</span>)</span><br><span class="line">        .doOnNext(fileName-&gt;&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">new</span> FileInputStream(fileName);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">                <span class="comment">// e.printStackTrace();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .subscribe(filename -&gt; System.<span class="keyword">out</span>.println(<span class="string">"filename = "</span> + filename),</span><br><span class="line">                throwable -&gt; System.<span class="keyword">out</span>.println(<span class="string">"throwable = "</span> + throwable));</span><br></pre></td></tr></table></figure>
<p>输出<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="setting">filename = <span class="value">file1</span></span></span><br><span class="line"><span class="setting">filename = <span class="value">file2</span></span></span><br><span class="line"><span class="setting">filename = <span class="value">file3</span></span></span><br></pre></td></tr></table></figure></p>
<p>因为使用了 <code>FileInputStream</code> 所以必须进行 <code>try ... catch</code>，但是我想在出现 <code>FileNotFoundException</code> 的异常时回调给 <code>Observable</code> 的 <code>onError</code> 统一处理，这时候就需要将异常抛出。</p>
<figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Observable.just(<span class="string">"file1"</span>, <span class="string">"file2"</span>,<span class="string">"file3"</span>)</span><br><span class="line">               .doOnNext(fileName-&gt;&#123;</span><br><span class="line">                   <span class="keyword">try</span> &#123;</span><br><span class="line">                       <span class="keyword">new</span> FileInputStream(fileName);</span><br><span class="line">                   &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">                       <span class="keyword">throw</span> Exceptions.propagate(<span class="keyword">new</span> Throwable(<span class="string">"文件找不到"</span>)); <span class="comment">// 抛出异常来中断序列</span></span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;)</span><br><span class="line">               .subscribe(filename -&gt; System.<span class="keyword">out</span>.println(<span class="string">"filename = "</span> + filename),</span><br><span class="line">                       throwable -&gt; System.<span class="keyword">out</span>.println(<span class="string">"throwable = "</span> + throwable));</span><br></pre></td></tr></table></figure>
<p>输出<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">throwable = java<span class="class">.lang</span><span class="class">.RuntimeException</span>: java<span class="class">.lang</span><span class="class">.Throwable</span>: 文件找不到</span><br></pre></td></tr></table></figure></p>
<h3 id="总结">总结</h3><p>通过 <code>throw</code> 关键字抛出异常<br><figure class="highlight golo"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="typename">Observable</span>.just(<span class="string">"Hello!"</span>)  </span><br><span class="line">  .<span class="typename">map</span>(input -&gt; &#123; <span class="keyword">throw</span> new RuntimeException(); &#125;)</span><br><span class="line">  .subscribe(</span><br><span class="line">    System.out::<span class="keyword">println</span>,</span><br><span class="line">    error -&gt; System.out.<span class="keyword">println</span>(<span class="string">"Error!"</span>)</span><br><span class="line">  );</span><br></pre></td></tr></table></figure></p>
<p>当在 <code>FlatMap</code> 中想终止序列，使用 <code>Observable.error()</code></p>
<figure class="highlight golo"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="typename">Observable</span>.just(<span class="string">"Hello!"</span>)  </span><br><span class="line">  .flatMap(input -&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="typename">Observable</span>.just(transform(input));</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable t) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="typename">Observable</span>.error(t);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure>
<p>高级异常处理：</p>
<p><code>onErrorReturn</code> ：当发生错误的时候，发射一个默认值然后结束数据流。所以 Subscriber 看不到异常信息，看到的是正常的数据流结束状态。<br><code>onErrorResumeNext</code> ：当错误发生的时候，使用另外一个数据流继续发射数据。在返回的 Observable 中是看不到错误信息的。<br><code>onExceptionResumeNext</code> ：onExceptionResumeNext 和 onErrorResumeNext 的区别是只捕获 Exception；<br><code>retry</code> ：如果发生了不定性的异常，则通常会重试一下看看是否正常了。 retry 的功能就算重新订阅到事件流，并重头重新开始发射数据。<br><code>retryWhen</code> ： retryWhen 的参数是一个函数， 该函数的输入参数为一个异常 Observable，返回值为另外一个 Observable。<br><code>using</code> ：用来管理资源的，如果一个 Observable 需要使用一个资源来发射数据（比如 需要使用一个文件资源，从文件中读取内容），当该 Observable 结束的时候（不管是正常结束还是异常结束）就释放该资源。这样你就不用自己管理资源了， 用 Rx 的方式来管理资源。</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">.flatMap(...)</span><br><span class="line">.flatMap(...)</span><br><span class="line">.onErrorResumeNext(<span class="keyword">new</span> Func1&lt;Throwable, Observable&lt;?&gt;&gt;() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Observable&lt;?&gt; call(Throwable throwable) &#123;</span><br><span class="line">        <span class="comment">// Here simply return an Observable which will emit the Throwable of your liking</span></span><br><span class="line">        <span class="keyword">return</span> Observable.<span class="keyword">error</span>(<span class="keyword">new</span> Throwable(...));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">.flatMap(...);</span><br></pre></td></tr></table></figure>
<p>参考链接</p>
<ul>
<li><a href="http://blog.danlew.net/2015/12/08/error-handling-in-rxjava/" target="_blank" rel="external">Error handling in RxJava</a></li>
<li><a href="http://blog.chengyunfeng.com/?p=970" target="_blank" rel="external">RxJava 教程第三部分：驯服数据流之 高级错误处理</a></li>
</ul>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>onNext, onComplete, onError，<code>onError</code> 在 <code>Observable</code> 序列传递过程中出现异常时被调用，然后终止<code>Observable</code> 序列的传递，以此通知所有的观察者发生了一个不可恢复的错误。但是有好多时候需要我们手动去终止序列，例如当序列传递时不满足某个条件了就不在进行后续的操作，这可能并不是一个异常，需要我们手动抛出。<br>]]>
    
    </summary>
    
      <category term="RxJava" scheme="http://hanks.xyz/tags/RxJava/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[购买搬瓦工 VPS]]></title>
    <link href="http://hanks.xyz/2016/04/12/buy-vps/"/>
    <id>http://hanks.xyz/2016/04/12/buy-vps/</id>
    <published>2016-04-12T15:37:51.000Z</published>
    <updated>2016-04-12T15:59:41.000Z</updated>
    <content type="html"><![CDATA[<p>买一个搬瓦工的 <code>VPS</code> 玩玩，<a href="https://bandwagonhost.com" target="_blank" rel="external">官网</a><br><a id="more"></a><br><img src="https://dn-coding-net-production-pp.qbox.me/5bf4d6fe-80b2-4353-9c9a-e10bf5e792e5.png" alt="购买"> </p>
<p>可以使用支付宝付款，买完了在个人的目录下可以看到刚买的 VPS，然后进入控制面板。</p>
<p><img src="https://dn-coding-net-production-pp.qbox.me/fedb3081-0936-442b-9e8e-f42f6274b3ba.png" alt="进入管理中心"> </p>
<p><img src="https://dn-coding-net-production-pp.qbox.me/0cea9cc2-0dee-4722-b3c3-18cda88ec47c.png" alt="信息"></p>
<p><img src="https://dn-coding-net-production-pp.qbox.me/824487f5-7ac8-4083-91e4-1fb45f4edc1d.png" alt="安装操作系统"><br>自带的 <code>Center OS</code>，又重新装了 <code>Ubuntu</code></p>
<p>重新设置超级管理员的密码，然后使用 <code>adduser hanks</code> 添加一个 hanks 用户，然后就可以通过 <code>ssh</code> 连接了。</p>
<blockquote>
<p>文章来自： <a href="http://hanks.xyz">http://hanks.xyz</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>买一个搬瓦工的 <code>VPS</code> 玩玩，<a href="https://bandwagonhost.com">官网</a><br>]]>
    
    </summary>
    
      <category term="VPS" scheme="http://hanks.xyz/tags/VPS/"/>
    
  </entry>
  
</feed>
