<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Hanks.xyz]]></title>
  <subtitle><![CDATA[coding]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://hanks.xyz/"/>
  <updated>2015-12-06T16:54:04.682Z</updated>
  <id>http://hanks.xyz/</id>
  
  <author>
    <name><![CDATA[Hanks]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Rx中的线程切换]]></title>
    <link href="http://hanks.xyz/2015/12/06/rx_thread/"/>
    <id>http://hanks.xyz/2015/12/06/rx_thread/</id>
    <published>2015-12-06T15:26:00.000Z</published>
    <updated>2015-12-06T16:54:04.682Z</updated>
    <content type="html"><![CDATA[<p>初学者在使用<code>RxJava</code>的过程中，经常搞不清Observable的事件序列和每次操作应该怎样切换线程，切换哪个线程<br>首先需要搞懂在<code>RxJava</code> 中<code>.subscribeOn()</code> 和  <code>observeOn()</code> 之间的区别：</p>
<ul>
<li><code>.subscribeOn()</code> 用来指定<code>Observable</code>应该操作的调度器(<code>Scheduler</code>)</li>
<li><code>.observeOn()</code> 指定 <code>Observable</code>在一个指定的调度器(<code>Scheduler</code>)上给观察者发送通知</li>
<li>默认情况下， 事件序列操作的线程与调用<code>.subscribe()</code>的线程一致</li>
</ul>
<p>没理解？<br><a id="more"></a></p>
<blockquote>
<p>英文原文: <a href="https://medium.com/@diolor/observe-in-the-correct-thread-1939bb9bb9d2#.nn1m7lrb8" target="_blank" rel="external">https://medium.com/@diolor/observe-in-the-correct-thread-1939bb9bb9d2#.nn1m7lrb8</a><br><br>翻译: <a href="https://github.com/hanks-zyh" target="_blank" rel="external">hanks</a><br>注: 不是完全翻译,添加了具体例子</p>
</blockquote>
<h2 id="例子">例子</h2><h3 id="1-主线程_/_-subscribe()_线程">1.主线程 /  .subscribe() 线程</h3><p>在 Activity的 <code>onCreate()</code>(主线程) 方法中添加以下代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Observable.just(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">  .subscribe();</span><br></pre></td></tr></table></figure>
<p>调用情况如下：</p>
<p><img src="https://dn-coding-net-production-pp.qbox.me/37e26756-da0d-46bb-bb2f-9b77ff067957.png" alt="图片"></p>
<p><strong>实验:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Observable.just(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">            .doOnNext(<span class="keyword">new</span> Action1&lt;Integer&gt;() &#123;</span><br><span class="line">                <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(Integer integer)</span> </span>&#123;</span><br><span class="line">                    Log.i(<span class="string">"RxThread"</span>, <span class="string">"doOnNext:"</span> + integer +<span class="string">", run In :"</span> + Thread.currentThread().getName() );</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            .subscribe(<span class="keyword">new</span> Action1&lt;Integer&gt;() &#123;</span><br><span class="line">                <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(Integer integer)</span> </span>&#123;</span><br><span class="line">                    Log.i(<span class="string">"RxThread"</span>, <span class="string">"get result:"</span> + integer +<span class="string">", run In :"</span> + Thread.currentThread().getName() );</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure>
<p><strong>输出结果:</strong></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">14</span>:<span class="number">39.225</span> <span class="number">15603</span>-<span class="number">15603</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">1</span>, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">14</span>:<span class="number">39.225</span> <span class="number">15603</span>-<span class="number">15603</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">1</span>, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">14</span>:<span class="number">39.225</span> <span class="number">15603</span>-<span class="number">15603</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">2</span>, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">14</span>:<span class="number">39.225</span> <span class="number">15603</span>-<span class="number">15603</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">2</span>, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">14</span>:<span class="number">39.225</span> <span class="number">15603</span>-<span class="number">15603</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">3</span>, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">14</span>:<span class="number">39.225</span> <span class="number">15603</span>-<span class="number">15603</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">3</span>, run In :main</span><br></pre></td></tr></table></figure>
<h3 id="2-_-subscribeOn()">2. .subscribeOn()</h3><p>即使你在主线程中添加下面的代码，但是整段代码将运行在 <code>.subscribeOn()</code>定义的线程上</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Observable.just(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">  .subscribeOn(Schedulers.newThread())</span><br><span class="line">  .subscribe();</span><br></pre></td></tr></table></figure>
<p><img src="https://dn-coding-net-production-pp.qbox.me/5004ed8c-6b4d-42fc-93d8-ed22c4af79d3.png" alt="图片"></p>
<p><strong>实验:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Observable.just(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">           .doOnNext(<span class="keyword">new</span> Action1&lt;Integer&gt;() &#123;</span><br><span class="line">               <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(Integer integer)</span> </span>&#123;</span><br><span class="line">                   Log.i(<span class="string">"RxThread"</span>, <span class="string">"doOnNext:"</span> + integer +<span class="string">", run In :"</span> + Thread.currentThread().getName() );</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">           .subscribeOn(Schedulers.newThread())</span><br><span class="line">           .subscribe(<span class="keyword">new</span> Action1&lt;Integer&gt;() &#123;</span><br><span class="line">               <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(Integer integer)</span> </span>&#123;</span><br><span class="line">                   Log.i(<span class="string">"RxThread"</span>, <span class="string">"get result:"</span> + integer +<span class="string">", run In :"</span> + Thread.currentThread().getName() );</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br></pre></td></tr></table></figure>
<p><strong>输出结果:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">13</span>:<span class="number">17.717</span> <span class="number">14294</span>-<span class="number">14319</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">1</span>, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">13</span>:<span class="number">17.717</span> <span class="number">14294</span>-<span class="number">14319</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">1</span>, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">13</span>:<span class="number">17.717</span> <span class="number">14294</span>-<span class="number">14319</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">2</span>, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">13</span>:<span class="number">17.717</span> <span class="number">14294</span>-<span class="number">14319</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">2</span>, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">13</span>:<span class="number">17.717</span> <span class="number">14294</span>-<span class="number">14319</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">3</span>, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">13</span>:<span class="number">17.717</span> <span class="number">14294</span>-<span class="number">14319</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">3</span>, run In :RxNewThreadScheduler-<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h3 id="3-_-observeOn()">3. .observeOn()</h3><p>加入在主线程中添加下面的代码，首先 <code>Observable</code> 将在 <code>.subscribe()</code> 的线程上创建，但是 <code>.observeOn()</code>方法被调用之后，代码将运行在指定的线程上：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">Observable</span><span class="class">.just</span>(1,2,3)</span><br><span class="line">  <span class="class">.observeOn</span>(<span class="tag">Schedulers</span><span class="class">.newThread</span>())</span><br><span class="line">  <span class="class">.subscribe</span>();</span><br></pre></td></tr></table></figure>
<p><img src="https://dn-coding-net-production-pp.qbox.me/97cc479d-fd85-4825-bdfa-b3b3b742a829.png" alt="图片"></p>
<p><strong>实验:</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread() &#123;</span><br><span class="line">           <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">               Observable.just(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>).doOnNext(<span class="keyword">new</span> Action1&lt;Integer&gt;() &#123;</span><br><span class="line">                   <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(Integer integer)</span> </span>&#123;</span><br><span class="line">                       Log.i(<span class="string">"RxThread"</span>, <span class="string">"doOnNext:"</span> + integer + <span class="string">", run In :"</span> + Thread.currentThread()</span><br><span class="line">                               .getName());</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;)</span><br><span class="line">               .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">               .subscribe(<span class="keyword">new</span> Action1&lt;Integer&gt;() &#123;</span><br><span class="line">                   <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(Integer integer)</span> </span>&#123;</span><br><span class="line">                       Log.i(<span class="string">"RxThread"</span>, <span class="string">"get result:"</span> + integer + <span class="string">", run In :"</span> + Thread.currentThread()</span><br><span class="line">                               .getName());</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;.start();</span><br></pre></td></tr></table></figure></p>
<p><strong>输出结果:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">18</span>:<span class="number">06.493</span> <span class="number">18584</span>-<span class="number">18606</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">1</span>, run In :Thread-<span class="number">155</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">18</span>:<span class="number">06.493</span> <span class="number">18584</span>-<span class="number">18606</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">2</span>, run In :Thread-<span class="number">155</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">18</span>:<span class="number">06.493</span> <span class="number">18584</span>-<span class="number">18606</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">3</span>, run In :Thread-<span class="number">155</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">18</span>:<span class="number">06.521</span> <span class="number">18584</span>-<span class="number">18584</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">1</span>, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">18</span>:<span class="number">06.521</span> <span class="number">18584</span>-<span class="number">18584</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">2</span>, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">18</span>:<span class="number">06.521</span> <span class="number">18584</span>-<span class="number">18584</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">3</span>, run In :main</span><br></pre></td></tr></table></figure>
<h3 id="3-_Combined_logic">3. Combined logic</h3><p>由于操作可以被组合使用,于是有了下面的代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Observable.just(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">  .subscribeOn(Schedulers.newThread())</span><br><span class="line">  .observeOn(Schedulers.newThread())</span><br><span class="line">  .subscribe();</span><br></pre></td></tr></table></figure>
<p><img src="https://dn-coding-net-production-pp.qbox.me/5abaaea0-babd-490c-abcb-6d404d3aa285.png" alt="图片"></p>
<p><strong>实验:</strong></p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">new</span> <span class="keyword">Thread</span>() &#123;</span><br><span class="line">     @Override <span class="keyword">public</span> <span class="literal">void</span> run() &#123;</span><br><span class="line">         Observable<span class="built_in">.</span>just(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)<span class="built_in">.</span>doOnNext(<span class="literal">new</span> Action1&lt;<span class="built_in">Integer</span>&gt;() &#123;</span><br><span class="line">             @Override <span class="keyword">public</span> <span class="literal">void</span> call(<span class="built_in">Integer</span> <span class="built_in">integer</span>) &#123;</span><br><span class="line">                 <span class="keyword">Log</span><span class="built_in">.</span>i(<span class="string">"RxThread"</span>, <span class="string">"doOnNext:"</span> + <span class="built_in">integer</span> + <span class="string">", run In :"</span> + <span class="keyword">Thread</span><span class="built_in">.</span>currentThread()</span><br><span class="line">                         <span class="built_in">.</span>getName());</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;)</span><br><span class="line">         <span class="built_in">.</span>subscribeOn(Schedulers<span class="built_in">.</span>newThread())</span><br><span class="line">         <span class="built_in">.</span>observeOn(AndroidSchedulers<span class="built_in">.</span>mainThread())</span><br><span class="line">         <span class="built_in">.</span>subscribe(<span class="literal">new</span> Action1&lt;<span class="built_in">Integer</span>&gt;() &#123;</span><br><span class="line">             @Override <span class="keyword">public</span> <span class="literal">void</span> call(<span class="built_in">Integer</span> <span class="built_in">integer</span>) &#123;</span><br><span class="line">                 <span class="keyword">Log</span><span class="built_in">.</span>i(<span class="string">"RxThread"</span>, <span class="string">"get result:"</span> + <span class="built_in">integer</span> + <span class="string">", run In :"</span> + <span class="keyword">Thread</span><span class="built_in">.</span>currentThread()</span><br><span class="line">                         <span class="built_in">.</span>getName());</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;<span class="built_in">.</span>start();</span><br></pre></td></tr></table></figure>
<p><strong>输出结果:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">19</span>:<span class="number">53.066</span> <span class="number">20247</span>-<span class="number">20274</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">1</span>, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">19</span>:<span class="number">53.066</span> <span class="number">20247</span>-<span class="number">20274</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">2</span>, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">19</span>:<span class="number">53.066</span> <span class="number">20247</span>-<span class="number">20274</span>/com.hanks.rxsearch I/RxThread: doOnNext:<span class="number">3</span>, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">19</span>:<span class="number">53.077</span> <span class="number">20247</span>-<span class="number">20247</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">1</span>, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">19</span>:<span class="number">53.077</span> <span class="number">20247</span>-<span class="number">20247</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">2</span>, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">19</span>:<span class="number">53.077</span> <span class="number">20247</span>-<span class="number">20247</span>/com.hanks.rxsearch I/RxThread: get result:<span class="number">3</span>, run In :main</span><br></pre></td></tr></table></figure>
<h2 id="Tips_/_Gotchas:">Tips / Gotchas:</h2><h3 id="1-_“UI线程运行异常”">1. “UI线程运行异常”</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Observable.just(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">  .subscribeOn(Schedulers.newThread())</span><br><span class="line">  .subscribe(<span class="comment">/** logic which touches ui **/</span>/); <span class="comment">//在newThread中调用</span></span><br></pre></td></tr></table></figure>
<p>obviously.</p>
<h3 id="2-_逻辑处理放在后台(newThread)">2. 逻辑处理放在后台(newThread)</h3><p>错误姿势：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Observable.just(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">  .subscribeOn(Schedulers.newThread())</span><br><span class="line">  .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">  .flatMap(<span class="comment">/** logic which doesn't touch ui **/</span>/)</span><br><span class="line">  .subscribe();</span><br></pre></td></tr></table></figure>
<p><strong>实验:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread() &#123;</span><br><span class="line">       <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">           Observable.just(<span class="string">"Android-Picasso"</span>, <span class="string">"Android-Glide"</span>, <span class="string">"Android-Fresco"</span>).doOnNext(<span class="keyword">new</span> Action1&lt;String&gt;() &#123;</span><br><span class="line">               <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">                   Log.i(<span class="string">"RxThread"</span>, <span class="string">"doOnNext:"</span> + str + <span class="string">", run In :"</span> + Thread.currentThread()</span><br><span class="line">                           .getName());</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">           .subscribeOn(Schedulers.newThread())</span><br><span class="line">           .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">           .flatMap(<span class="keyword">new</span> Func1&lt;String, Observable&lt;String&gt;&gt;() &#123;</span><br><span class="line">               <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> Observable&lt;String&gt; <span class="title">call</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">                   Log.i(<span class="string">"RxThread"</span>, <span class="string">"flatMap:"</span> + str + <span class="string">", run In :"</span> + Thread.currentThread());</span><br><span class="line">                   <span class="keyword">return</span> Observable.from(str.split(<span class="string">"-"</span>) ); <span class="comment">// 返回平方</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">           .subscribe(<span class="keyword">new</span> Action1&lt;String&gt;() &#123;</span><br><span class="line">               <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">                   Log.i(<span class="string">"RxThread"</span>, <span class="string">"get result:"</span> + str + <span class="string">", run In :"</span> + Thread.currentThread()</span><br><span class="line">                           .getName());</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;.start();</span><br></pre></td></tr></table></figure>
<p><strong>输出结果:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.181</span> <span class="number">8161</span>-<span class="number">8190</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Picasso, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.181</span> <span class="number">8161</span>-<span class="number">8190</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Glide, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.181</span> <span class="number">8161</span>-<span class="number">8190</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Fresco, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.243</span> <span class="number">8161</span>-<span class="number">8161</span>/com.hanks.rxsearch I/RxThread: flatMap:Android-Picasso, run In :Thread[main,<span class="number">5</span>,main]</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.243</span> <span class="number">8161</span>-<span class="number">8161</span>/com.hanks.rxsearch I/RxThread: get result:Android, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.243</span> <span class="number">8161</span>-<span class="number">8161</span>/com.hanks.rxsearch I/RxThread: get result:Picasso, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.243</span> <span class="number">8161</span>-<span class="number">8161</span>/com.hanks.rxsearch I/RxThread: flatMap:Android-Glide, run In :Thread[main,<span class="number">5</span>,main]</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.243</span> <span class="number">8161</span>-<span class="number">8161</span>/com.hanks.rxsearch I/RxThread: get result:Android, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.243</span> <span class="number">8161</span>-<span class="number">8161</span>/com.hanks.rxsearch I/RxThread: get result:Glide, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.243</span> <span class="number">8161</span>-<span class="number">8161</span>/com.hanks.rxsearch I/RxThread: flatMap:Android-Fresco, run In :Thread[main,<span class="number">5</span>,main]</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.243</span> <span class="number">8161</span>-<span class="number">8161</span>/com.hanks.rxsearch I/RxThread: get result:Android, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">43</span>:<span class="number">00.243</span> <span class="number">8161</span>-<span class="number">8161</span>/com.hanks.rxsearch I/RxThread: get result:Fresco, run In :main</span><br></pre></td></tr></table></figure>
<p>正确姿势:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Observable.just(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">  .subscribeOn(Schedulers.newThread())</span><br><span class="line">  .flatMap(<span class="comment">/** logic which doesn't touch ui **/</span>/)</span><br><span class="line">  .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">  .subscribe();</span><br></pre></td></tr></table></figure>
<p>第二段代码中 <code>flatMap</code> (或者其他逻辑处理)将运行在后台线程， 如果是在Android中，这样做不会阻塞UI，阻塞UI的话有可能导致ANR之类的异常。这跟 <code>AsyncTask</code>中的 <code>doInBackground()</code>类似，在 <code>doInBackground()</code>中做耗时操作</p>
<p><strong>实验:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread() &#123;</span><br><span class="line">       <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">           Observable.just(<span class="string">"Android-Picasso"</span>, <span class="string">"Android-Glide"</span>, <span class="string">"Android-Fresco"</span>).doOnNext(<span class="keyword">new</span> Action1&lt;String&gt;() &#123;</span><br><span class="line">               <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">                   Log.i(<span class="string">"RxThread"</span>, <span class="string">"doOnNext:"</span> + str + <span class="string">", run In :"</span> + Thread.currentThread()</span><br><span class="line">                           .getName());</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">           .subscribeOn(Schedulers.newThread())</span><br><span class="line">           .flatMap(<span class="keyword">new</span> Func1&lt;String, Observable&lt;String&gt;&gt;() &#123;</span><br><span class="line">               <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> Observable&lt;String&gt; <span class="title">call</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">                   Log.i(<span class="string">"RxThread"</span>, <span class="string">"flatMap:"</span> + str + <span class="string">", run In :"</span> + Thread.currentThread());</span><br><span class="line">                   <span class="keyword">return</span> Observable.from(str.split(<span class="string">"-"</span>) ); <span class="comment">// 返回平方</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">           .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">           .subscribe(<span class="keyword">new</span> Action1&lt;String&gt;() &#123;</span><br><span class="line">               <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">                   Log.i(<span class="string">"RxThread"</span>, <span class="string">"get result:"</span> + str + <span class="string">", run In :"</span> + Thread.currentThread()</span><br><span class="line">                           .getName());</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;.start();</span><br></pre></td></tr></table></figure>
<p><strong>输出结果:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.025</span> <span class="number">6812</span>-<span class="number">6839</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Picasso, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.025</span> <span class="number">6812</span>-<span class="number">6839</span>/com.hanks.rxsearch I/RxThread: flatMap:Android-Picasso, run In :Thread[RxNewThreadScheduler-<span class="number">1</span>,<span class="number">5</span>,main]</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.025</span> <span class="number">6812</span>-<span class="number">6839</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Glide, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.025</span> <span class="number">6812</span>-<span class="number">6839</span>/com.hanks.rxsearch I/RxThread: flatMap:Android-Glide, run In :Thread[RxNewThreadScheduler-<span class="number">1</span>,<span class="number">5</span>,main]</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.025</span> <span class="number">6812</span>-<span class="number">6839</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Fresco, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.025</span> <span class="number">6812</span>-<span class="number">6839</span>/com.hanks.rxsearch I/RxThread: flatMap:Android-Fresco, run In :Thread[RxNewThreadScheduler-<span class="number">1</span>,<span class="number">5</span>,main]</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.043</span> <span class="number">6812</span>-<span class="number">6812</span>/com.hanks.rxsearch I/RxThread: get result:Android, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.043</span> <span class="number">6812</span>-<span class="number">6812</span>/com.hanks.rxsearch I/RxThread: get result:Picasso, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.043</span> <span class="number">6812</span>-<span class="number">6812</span>/com.hanks.rxsearch I/RxThread: get result:Android, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.043</span> <span class="number">6812</span>-<span class="number">6812</span>/com.hanks.rxsearch I/RxThread: get result:Glide, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.043</span> <span class="number">6812</span>-<span class="number">6812</span>/com.hanks.rxsearch I/RxThread: get result:Android, run In :main</span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">41</span>:<span class="number">27.043</span> <span class="number">6812</span>-<span class="number">6812</span>/com.hanks.rxsearch I/RxThread: get result:Fresco, run In :main</span><br></pre></td></tr></table></figure>
<h3 id="3-_最早的_-subscribeOn()_生效">3. 最早的 <code>.subscribeOn()</code> 生效</h3><p>看下面的代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Observable.just(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">  .subscribeOn(thread1)</span><br><span class="line">  .subscribeOn(thread2)</span><br><span class="line">  .subscribe();</span><br></pre></td></tr></table></figure>
<p><code>Observable</code> 的创建和  <code>.subscribeOn()</code> 的调用都将在 thread1 上面执行，所以没有必要多次调用 <code>.subscribeOn()</code>,因为只有第一次的是有用的。</p>
<p><strong>实验:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread() &#123;</span><br><span class="line">      <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">          Observable.just(<span class="string">"Android-Picasso"</span>, <span class="string">"Android-Glide"</span>, <span class="string">"Android-Fresco"</span>).doOnNext(<span class="keyword">new</span> Action1&lt;String&gt;() &#123;</span><br><span class="line">              <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">                  Log.i(<span class="string">"RxThread"</span>, <span class="string">"doOnNext:"</span> + str + <span class="string">", run In :"</span> + Thread.currentThread()</span><br><span class="line">                          .getName());</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">          .subscribeOn(Schedulers.newThread())</span><br><span class="line">          .subscribeOn(Schedulers.io())</span><br><span class="line">          .subscribeOn(Schedulers.computation())</span><br><span class="line">          .subscribe(<span class="keyword">new</span> Action1&lt;String&gt;() &#123;</span><br><span class="line">              <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">                  Log.i(<span class="string">"RxThread"</span>, <span class="string">"get result:"</span> + str + <span class="string">", run In :"</span> + Thread.currentThread()</span><br><span class="line">                          .getName());</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;.start();</span><br></pre></td></tr></table></figure>
<p><strong>输出结果</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">51</span>:<span class="number">17.581</span> <span class="number">15622</span>-<span class="number">15652</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Picasso, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">51</span>:<span class="number">17.581</span> <span class="number">15622</span>-<span class="number">15652</span>/com.hanks.rxsearch I/RxThread: get result:Android-Picasso, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">51</span>:<span class="number">17.581</span> <span class="number">15622</span>-<span class="number">15652</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Glide, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">51</span>:<span class="number">17.581</span> <span class="number">15622</span>-<span class="number">15652</span>/com.hanks.rxsearch I/RxThread: get result:Android-Glide, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">51</span>:<span class="number">17.581</span> <span class="number">15622</span>-<span class="number">15652</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Fresco, run In :RxNewThreadScheduler-<span class="number">1</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">51</span>:<span class="number">17.581</span> <span class="number">15622</span>-<span class="number">15652</span>/com.hanks.rxsearch I/RxThread: get result:Android-Fresco, run In :RxNewThreadScheduler-<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p><strong>实验</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread() &#123;</span><br><span class="line">       <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">           Observable.just(<span class="string">"Android-Picasso"</span>, <span class="string">"Android-Glide"</span>, <span class="string">"Android-Fresco"</span>).doOnNext(<span class="keyword">new</span> Action1&lt;String&gt;() &#123;</span><br><span class="line">               <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">                   Log.i(<span class="string">"RxThread"</span>, <span class="string">"doOnNext:"</span> + str + <span class="string">", run In :"</span> + Thread.currentThread()</span><br><span class="line">                           .getName());</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;)</span><br><span class="line">           .subscribeOn(Schedulers.io())</span><br><span class="line">           .subscribeOn(Schedulers.newThread())</span><br><span class="line">           .subscribeOn(Schedulers.computation())</span><br><span class="line">           .subscribe(<span class="keyword">new</span> Action1&lt;String&gt;() &#123;</span><br><span class="line">               <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">                   Log.i(<span class="string">"RxThread"</span>, <span class="string">"get result:"</span> + str + <span class="string">", run In :"</span> + Thread.currentThread()</span><br><span class="line">                           .getName());</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;.start();</span><br></pre></td></tr></table></figure>
<p><strong>输出结果</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">52</span>:<span class="number">13.378</span> <span class="number">16424</span>-<span class="number">16454</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Picasso, run In :RxCachedThreadScheduler-<span class="number">2</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">52</span>:<span class="number">13.379</span> <span class="number">16424</span>-<span class="number">16454</span>/com.hanks.rxsearch I/RxThread: get result:Android-Picasso, run In :RxCachedThreadScheduler-<span class="number">2</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">52</span>:<span class="number">13.379</span> <span class="number">16424</span>-<span class="number">16454</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Glide, run In :RxCachedThreadScheduler-<span class="number">2</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">52</span>:<span class="number">13.379</span> <span class="number">16424</span>-<span class="number">16454</span>/com.hanks.rxsearch I/RxThread: get result:Android-Glide, run In :RxCachedThreadScheduler-<span class="number">2</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">52</span>:<span class="number">13.379</span> <span class="number">16424</span>-<span class="number">16454</span>/com.hanks.rxsearch I/RxThread: doOnNext:Android-Fresco, run In :RxCachedThreadScheduler-<span class="number">2</span></span><br><span class="line"><span class="number">12</span>-<span class="number">06</span> <span class="number">16</span>:<span class="number">52</span>:<span class="number">13.379</span> <span class="number">16424</span>-<span class="number">16454</span>/com.hanks.rxsearch I/RxThread: get result:Android-Fresco, run In :RxCachedThreadScheduler-<span class="number">2</span></span><br></pre></td></tr></table></figure></p>
<p><code>Android</code> <code>Rxjava</code> <code>Rxandroid</code></p>
<blockquote>
<p><strong>文章出处</strong> (<a href="http://hanks.xyz">http://hanks.xyz</a>)</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>初学者在使用<code>RxJava</code>的过程中，经常搞不清Observable的事件序列和每次操作应该怎样切换线程，切换哪个线程<br>首先需要搞懂在<code>RxJava</code> 中<code>.subscribeOn()</code> 和  <code>observeOn()</code> 之间的区别：</p>
<ul>
<li><code>.subscribeOn()</code> 用来指定<code>Observable</code>应该操作的调度器(<code>Scheduler</code>)</li>
<li><code>.observeOn()</code> 指定 <code>Observable</code>在一个指定的调度器(<code>Scheduler</code>)上给观察者发送通知</li>
<li>默认情况下， 事件序列操作的线程与调用<code>.subscribe()</code>的线程一致</li>
</ul>
<p>没理解？<br>]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
      <category term="Rxandroid" scheme="http://hanks.xyz/tags/Rxandroid/"/>
    
      <category term="Rxjava" scheme="http://hanks.xyz/tags/Rxjava/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[OS X中Java环境变量配置]]></title>
    <link href="http://hanks.xyz/2015/12/04/mac_java_enviroment/"/>
    <id>http://hanks.xyz/2015/12/04/mac_java_enviroment/</id>
    <published>2015-12-04T15:50:26.000Z</published>
    <updated>2015-12-04T16:10:58.548Z</updated>
    <content type="html"><![CDATA[<p>类似Linux下Java环境的配置,流程就是 <code>下载</code> -&gt; <code>解压</code> -&gt; <code>配置环境变量文件</code></p>
<h3 id="下载_jdk">下载 jdk</h3><p>到oracle官网下最新 jdk <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="external">下载链接</a>,  注意下载的是jdk(Java Development Kit ),不是jre(Java Runtime Environment)</p>
<h3 id="配置Java环境变量">配置Java环境变量</h3><p>安装过jdk之后, 查看jdk的安装路径, 一般在 <code>/Library/Java/JavaVirtualMachines</code>目录下面<br>然后编辑环境变量, 打开文件 <code>/etc/profile</code></p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="keyword">vim</span> /etc/<span class="keyword">profile</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>在底部添加下面的环境变量, windows上面是图形化的编辑, linux 和 mac 下都是 添加到 <code>/etc/profile</code>文件中</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=<span class="string">"/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home/"</span></span><br><span class="line">CLASS_PATH=<span class="string">"<span class="variable">$JAVA_HOME</span>/lib"</span></span><br><span class="line">PATH=<span class="string">".;<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin"</span></span><br></pre></td></tr></table></figure>
<h3 id="验证配置">验证配置</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -<span class="property">version</span></span><br></pre></td></tr></table></figure>
<p>看到版本信息则为配置成功.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>类似Linux下Java环境的配置,流程就是 <code>下载</code> -&gt; <code>解压</code> -&gt; <code>配置环境变量文件</code></p>
<h3 id="下载_jdk">下载 jdk</h3><p>到oracle官网下最新 jdk <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">下载链接</a>,  注意下载的是jdk(Java Development Kit ),不是jre(Java Runtime Environment)</p>
<h3 id="配置Java环境变量">配置Java环境变量</h3><p>安装过jdk之后, 查看jdk的安装路径, 一般在 <code>/Library/Java/JavaVirtualMachines</code>目录下面<br>然后编辑环境变量, 打开文件 <code>/etc/profile</code></p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="keyword">vim</span> /etc/<span class="keyword">profile</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="Java" scheme="http://hanks.xyz/tags/Java/"/>
    
      <category term="OS X" scheme="http://hanks.xyz/tags/OS-X/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ubuntu 安装 OS X 10.11  虚拟机]]></title>
    <link href="http://hanks.xyz/2015/12/02/mac-os-in-Ubuntu/"/>
    <id>http://hanks.xyz/2015/12/02/mac-os-in-Ubuntu/</id>
    <published>2015-12-02T15:50:26.000Z</published>
    <updated>2015-12-03T03:11:09.312Z</updated>
    <content type="html"><![CDATA[<p>看到<a href="http://bbs.feng.com/read-htm-tid-9908410.html" target="_blank" rel="external">论坛</a>里有人在windows平台上面利用 <code>VirtualBox</code> 成功安装了 <code>OS X 10.11</code>,(我的是Ubuntu 14.04)于是尝试一下虚拟机装mac,既然 <code>VirtualBox</code> 有linux版, 于是尝试在Ubuntu下装mac os虚拟机.<br><a id="more"></a></p>
<h3 id="下载_VirtualBox">下载 <code>VirtualBox</code></h3><p>到 <a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="external">VirtualBox 官网</a>下载, 我已经安装过了,版本是 5.0.8, 最新的 5.0.10</p>
<h3 id="下载_mac_os_虚拟机文件">下载 mac os 虚拟机文件</h3><p>到这个论坛里下载安装好的<a href="http://bbs.feng.com/read-htm-tid-9908410.html" target="_blank" rel="external">OS X 10.11 El Capitan GM by TechReviews.vmdk</a></p>
<h3 id="添加虚拟机">添加虚拟机</h3><p> 打开 <code>VirtualBox</code>, 新建mac os 虚拟机, <strong>需要记住自己填写的名字</strong>,下面需要用命令更改配置<br>我分配了8G内存, 虚拟硬盘使用刚才下载的<br> <img src="https://dn-coding-net-production-pp.qbox.me/44703706-0ca7-4163-89ff-968e8962c57f.png" alt="图片"><br>注意设置<code>启动顺序</code>,和<code>芯片组</code><br> <img src="https://dn-coding-net-production-pp.qbox.me/1f97a9c1-09b0-428a-aac9-60a098b78d6c.png" alt="图片"><br>设置<code>显存</code>为128MB<br> <img src="https://dn-coding-net-production-pp.qbox.me/2adabc19-197d-46b4-a960-0203a6c7fd52.png" alt="图片"></p>
<h3 id="更改配置">更改配置</h3><p>输入以下命令,注意使用的 <code>VboxManage</code> 命令</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage modifyvm <span class="string">"OSXElCapitan"</span>  --cpuidset <span class="number">00000001</span> <span class="number">000306</span>a9 <span class="number">04100800</span> <span class="number">7f</span>bae3ff bfebfbff</span><br><span class="line">VBoxManage setextradata <span class="string">"OSXElCapitan"</span>  <span class="string">"VBoxInternal/Devices/efi/0/Config/DmiSystemProduct"</span> <span class="string">"MacBookPro11,3"</span></span><br><span class="line">VBoxManage setextradata <span class="string">"OSXElCapitan"</span>  <span class="string">"VBoxInternal/Devices/efi/0/Config/DmiSystemVersion"</span> <span class="string">"1.0"</span></span><br><span class="line">VBoxManage setextradata <span class="string">"OSXElCapitan"</span>  <span class="string">"VBoxInternal/Devices/efi/0/Config/DmiBoardProduct"</span> <span class="string">"Iloveapple"</span></span><br><span class="line">VBoxManage setextradata <span class="string">"OSXElCapitan"</span>  <span class="string">"VBoxInternal/Devices/smc/0/Config/DeviceKey"</span> <span class="string">"ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc"</span></span><br><span class="line">VBoxManage setextradata <span class="string">"OSXElCapitan"</span>  <span class="string">"VBoxInternal/Devices/smc/0/Config/GetKeyFromRealSMC"</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>如需要更改 虚拟机分辨率 1440×900 输入命令如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage setextradata <span class="string">"OSXElCapitan"</span> <span class="string">"VBoxInternal2/EfiGopMode"</span> <span class="number">4</span></span><br></pre></td></tr></table></figure></p>
<p>其中数字表示如下, 虚拟机默认分辨率值是 2 – 1024×768</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> – <span class="number">640</span>×<span class="number">480</span></span><br><span class="line"><span class="number">1</span> – <span class="number">800</span>×<span class="number">600</span></span><br><span class="line"><span class="number">2</span> – <span class="number">1024</span>×<span class="number">768</span></span><br><span class="line"><span class="number">3</span> – <span class="number">1280</span>×<span class="number">1024</span></span><br><span class="line"><span class="number">4</span> – <span class="number">1440</span>×<span class="number">900</span></span><br></pre></td></tr></table></figure>
<h3 id="启动虚拟机">启动虚拟机</h3><ol>
<li>关闭 VirtualBOX</li>
<li>重新正常启动 VirtualBOX, 及启动 OSXYosemite 虚拟机文件</li>
<li>进行一些系统设置</li>
</ol>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/2ba64c95-f5f1-4e66-b878-5bdc6d873c6e.png" alt="图片"></p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/9d66a4d0-b141-4920-bde4-2a89d0afcc15.png" alt="图片"></p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/255e709e-3416-4e89-80a8-30c10768332b.png" alt="图片"></p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/ba9d827a-41dd-4f8c-8ae9-1467907024e4.png" alt="图片"></p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/a256c81f-0820-4b8d-bd0a-e55eca3b4d05.png" alt="图片"></p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/f3c72d29-4966-46b4-99cc-faad0d7af4f3.png" alt="图片"></p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/9cf7a273-c89d-4715-b0c4-62e76a228faa.png" alt="图片"></p>
<h3 id="安装_xcode_7">安装 xcode 7</h3><p>下载xcode</p>
<hr>
<p>参考链接:<br><br><a href="http://bbs.feng.com/read-htm-tid-9908410.html" target="_blank" rel="external">http://bbs.feng.com/read-htm-tid-9908410.html</a><br><br><a href="http://bbs.feng.com/read-htm-tid-8474315.html" target="_blank" rel="external">http://bbs.feng.com/read-htm-tid-8474315.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>看到<a href="http://bbs.feng.com/read-htm-tid-9908410.html">论坛</a>里有人在windows平台上面利用 <code>VirtualBox</code> 成功安装了 <code>OS X 10.11</code>,(我的是Ubuntu 14.04)于是尝试一下虚拟机装mac,既然 <code>VirtualBox</code> 有linux版, 于是尝试在Ubuntu下装mac os虚拟机.<br>]]>
    
    </summary>
    
      <category term="Ubuntu" scheme="http://hanks.xyz/tags/Ubuntu/"/>
    
      <category term="mac os" scheme="http://hanks.xyz/tags/mac-os/"/>
    
      <category term="virtualBox" scheme="http://hanks.xyz/tags/virtualBox/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ReactiveX]]></title>
    <link href="http://hanks.xyz/2015/12/01/ReactiveX/"/>
    <id>http://hanks.xyz/2015/12/01/ReactiveX/</id>
    <published>2015-12-01T14:28:34.000Z</published>
    <updated>2015-12-06T03:19:40.341Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>An API for asynchronous programming with observable streams</p>
</blockquote>
<p><img src="http://file.bmob.cn/M02/CD/5C/oYYBAFZehqmAAvzxAAEPNTqMZeU527.gif" alt=""><br><a id="more"></a></p>
<p>理解这个图上面各个部分,简直生动形象的不能再生动了,以后这个图经常看到<br><img src="https://mcxiaoke.gitbooks.io/rxdocs/content/images/legend.png" alt="介绍"></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>An API for asynchronous programming with observable streams</p>
</blockquote>
<p><img src="http://file.bmob.cn/M02/CD/5C/oYYBAFZehqmAAvzxAAEPNTqMZeU527.gif" alt=""><br>]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
      <category term="Rx" scheme="http://hanks.xyz/tags/Rx/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用RxJava 提升用户体验]]></title>
    <link href="http://hanks.xyz/2015/11/29/rx_ux/"/>
    <id>http://hanks.xyz/2015/11/29/rx_ux/</id>
    <published>2015-11-29T14:28:34.000Z</published>
    <updated>2015-12-06T15:43:13.858Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>原文链接：<a href="https://medium.com/@diolor/improving-ux-with-rxjava-4440a13b157f#.qdhu122d1" target="_blank" rel="external">https://medium.com/@diolor/improving-ux-with-rxjava-4440a13b157f#.qdhu122d1</a><br><br>翻译： <a href="https://github.com/hanks-zyh" target="_blank" rel="external">hanks</a></p>
</blockquote>
<p>“网络永连接，服务器不出错，培根没肥肉”</p>
<p><img src="http://file.bmob.cn/M02/C6/EF/oYYBAFZbFyCADEAkAAV75iu06QU497.gif" alt="Search list animation by Daley P Maasz from Dribbble."></p>
<a id="more"></a>
<p>友好的用户体验通常是用户很爽，但开发者很痛苦。 当用户点击一个按钮后，因为后端没有及时响应而卡住界面，这回让用户很失望。<br>现在让我们创建一个更好的搜索功能（当用户在EditText输入文字时进行搜索）：</p>
<ul>
<li>尽可能少的网络请求</li>
<li>尽可能少的错误信息<br>Rx 的逻辑会十分简单并且针对小的细节</li>
</ul>
<p>让我们从基本的逻辑开始:<br>让用户输入文字时执行网络请求，当结果返回时进行显示</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">RxTextView</span><span class="class">.textChanges</span>(<span class="tag">searchEditText</span>)</span><br><span class="line">     <span class="class">.flatMap</span>(<span class="tag">Api</span><span class="pseudo">::searchItems)</span></span><br><span class="line">     <span class="class">.subscribe</span>(<span class="tag">this</span><span class="pseudo">::updateList</span>, <span class="tag">t-</span>&gt;<span class="tag">showError</span>());</span><br></pre></td></tr></table></figure>
<h2 id="1-_减少网络请求">1. 减少网络请求</h2><p><strong>有两个问题</strong>：</p>
<ol>
<li>输入的文字每变化一个就执行请求（很垃圾），例如： 用户很快的输入 “a”（搜索”a“），然后”b”（搜索“ab”），然后“c”（搜索”abc”），然后又删除”c”（搜索“ab”）， 输入“e”（搜索”abe”）。这个过程执行了5次请求。</li>
<li>假如网络情况很差， 多个线程同时进行， 这时候就可能发生错误：如当用户输入“a”，然后”ab”，但是搜索“ab”的结果先返回了，之后返回了搜索“a的结果”，这时候输入框的文字是”ab”，但结果却是搜索“a”的</li>
</ol>
<p><strong>解决方案</strong>：</p>
<ol>
<li>增加 throttling （节流）行为<br><code>debounce()</code> 的作用正是如此， 时间为 100-150ms 为佳，如果服务器返回需要300ms，那么你可以在 500ms时更新UI界面</li>
</ol>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">RxTextView</span><span class="class">.textChanges</span>(<span class="tag">searchEditText</span>)</span><br><span class="line">     <span class="class">.debounce</span>(150, <span class="tag">MILLISECONDS</span>)</span><br><span class="line">     <span class="class">.flatMap</span>(<span class="tag">Api</span><span class="pseudo">::searchItems)</span></span><br><span class="line">     <span class="class">.subscribe</span>(<span class="tag">this</span><span class="pseudo">::updateList</span>, <span class="tag">t-</span>&gt;<span class="tag">showError</span>());</span><br></pre></td></tr></table></figure>
<ol>
<li>取消之前的请求:<br>使用 <code>switchMap</code>来替代  <code>flatMap</code>， <code>switchMap</code>停止之前发出的请求， 假如在150ms的时候搜索”ab“，在300ms的时候搜索了”abcd“，但是搜索”ab”的请求需要花费超过150ms，那么搜索“abcd”的请求开始的时候将会取消上一个请求，用户只会获取到最后的一次搜索的结果。</li>
</ol>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">RxTextView</span><span class="class">.textChanges</span>(<span class="tag">searchEditText</span>)</span><br><span class="line">     <span class="class">.debounce</span>(150, <span class="tag">MILLISECONDS</span>)</span><br><span class="line">     <span class="class">.switchMap</span>(<span class="tag">Api</span><span class="pseudo">::searchItems)</span></span><br><span class="line">     <span class="class">.subscribe</span>(<span class="tag">this</span><span class="pseudo">::updateList</span>, <span class="tag">t-</span>&gt;<span class="tag">showError</span>());</span><br></pre></td></tr></table></figure>
<h2 id="2-_没有错误提示/没有网络错误提示">2. 没有错误提示/没有网络错误提示</h2><p>如果网络请求失败，将不再观测文本的变化，（因为调用了OnError，整个事件流中断），这可以通过添加错误捕获函数轻松搞定</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">RxTextView</span><span class="class">.textChanges</span>(<span class="tag">searchEditText</span>)</span><br><span class="line">     <span class="class">.debounce</span>(150, <span class="tag">MILLISECONDS</span>)</span><br><span class="line">     <span class="class">.switchMap</span>(<span class="tag">Api</span><span class="pseudo">::searchItems)</span></span><br><span class="line">     <span class="class">.onErrorResumeNext</span>(<span class="tag">t-</span>&gt; <span class="tag">empty</span>())</span><br><span class="line">     <span class="class">.subscribe</span>(<span class="tag">this</span><span class="pseudo">::updateList)</span>;</span><br></pre></td></tr></table></figure>
<p>但是不要这样做， 我们需要更好的处理方案。假如   <code>searchItems()</code> api因为网络连接而返回失败的呢？ 或者是因为偶然的连接失败呢？<br>我们需要 <strong>重试机制</strong> :</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">RxTextView</span><span class="class">.textChanges</span>(<span class="tag">searchEditText</span>)</span><br><span class="line">     <span class="class">.debounce</span>(150, <span class="tag">MILLISECONDS</span>)</span><br><span class="line">     <span class="class">.switchMap</span>(<span class="tag">Api</span><span class="pseudo">::searchItems)</span></span><br><span class="line">     <span class="class">.retryWhen</span>(<span class="tag">new</span> <span class="tag">RetryWithConnectivity</span>())</span><br><span class="line">     <span class="class">.subscribe</span>(<span class="tag">this</span><span class="pseudo">::updateList</span>, <span class="tag">t-</span>&gt;<span class="tag">showError</span>());</span><br></pre></td></tr></table></figure>
<p>如何进一步提升呢？ 通过增加超时时间。 因为我们的 设计师 Lenzing 说 ”即使1s对用户来说也很漫长”，于是我们有做了下面的事情：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">RxTextView.textChanges(searchEditText)</span><br><span class="line">     .debounce(<span class="number">150</span>, MILLISECONDS)</span><br><span class="line">     .switchMap(Api::searchItems)</span><br><span class="line">     .retryWhen(<span class="keyword">new</span> RetryWithConnectivityIncremental(context, <span class="number">5</span>, <span class="number">15</span>, SECONDS))</span><br><span class="line">     .subscribe(<span class="keyword">this</span>::updateList, t-&gt;showErrorToUser());</span><br></pre></td></tr></table></figure>
<p>对比 <code>RetryWithConnectivityIncremental</code>  和 <code>RetryWithConnectivity</code> ， <code>RetryWithConnectivityIncremental</code> 更智能，它首先设置了 5 秒的超时时间， 如果这个时候连接失败，如果用户再次重试的话，超时时间会被设置的更长（如上面的15 秒）。</p>
<p>现在，使用RxJava 提示了用户体验， 请求防抖动， 取消上次请求获取最新的结果， 智能的网络超时重试。这些可能用户不会注意到，但是这是一个好的设计 ;)</p>
<p>标签： <strong>Android Rxjava UX</strong></p>
<p>完整代码：</p>
<figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Bind</span>(R.id.et_keyword) EditText et_keyword;</span><br><span class="line">    <span class="annotation">@Bind</span>(R.id.tv_result)  TextView tv_result;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span> protected <span class="keyword">void</span> onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ButterKnife.bind(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        RestAdapter retrofit = <span class="keyword">new</span> RestAdapter.Builder().setEndpoint(<span class="string">"https://suggest.taobao.com"</span>)</span><br><span class="line">                .setLogLevel(RestAdapter.LogLevel.FULL)</span><br><span class="line">                .setConverter(<span class="keyword">new</span> GsonConverter(<span class="keyword">new</span> Gson()))</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> SearchService service = retrofit.create(SearchService.<span class="keyword">class</span>);</span><br><span class="line"></span><br><span class="line">        RxTextView.textChanges(et_keyword)</span><br><span class="line">                <span class="comment">// 上面的对 tv_result 的操作需要在主线程</span></span><br><span class="line">                .subscribeOn(AndroidSchedulers.mainThread())</span><br><span class="line">                .debounce(<span class="number">600</span>, TimeUnit.MILLISECONDS, AndroidSchedulers.mainThread())</span><br><span class="line">                .filter(<span class="keyword">new</span> Func1&lt;CharSequence, Boolean&gt;() &#123;</span><br><span class="line">                    <span class="annotation">@Override</span> public Boolean call(CharSequence charSequence) &#123;</span><br><span class="line">                        <span class="comment">// 清空搜索出来的结构</span></span><br><span class="line">                        tv_result.setText(<span class="string">""</span>);</span><br><span class="line">                        <span class="comment">//当 EditText 中文字大于0的时候</span></span><br><span class="line">                        <span class="keyword">return</span> charSequence.length() &gt; <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .switchMap(<span class="keyword">new</span> Func1&lt;CharSequence, Observable&lt;Data&gt;&gt;() &#123;</span><br><span class="line">                    <span class="annotation">@Override</span> public Observable&lt;Data&gt; call(CharSequence charSequence) &#123;</span><br><span class="line">                        <span class="comment">// 搜索</span></span><br><span class="line">                        <span class="keyword">return</span> service.searchProdcut(<span class="string">"utf-8"</span>, charSequence.toString());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line"><span class="comment">//                .retryWhen(new RetryWithConnectivityIncremental(MainActivity.this, 5, 15, TimeUnit.MILLISECONDS))</span></span><br><span class="line">                <span class="comment">// 网络操作在io线程</span></span><br><span class="line">                .subscribeOn(Schedulers.io())</span><br><span class="line">                <span class="comment">//将 data 转换成 ArrayList&lt;ArrayList&lt;String&gt;&gt;</span></span><br><span class="line">                .map(<span class="keyword">new</span> Func1&lt;Data, ArrayList&lt;ArrayList&lt;<span class="built_in">String</span>&gt;&gt;&gt;() &#123;</span><br><span class="line">                    <span class="annotation">@Override</span> public ArrayList&lt;ArrayList&lt;<span class="built_in">String</span>&gt;&gt; call(Data data) &#123;</span><br><span class="line">                        <span class="keyword">return</span> data.result;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="comment">// 将 ArrayList&lt;ArrayList&lt;String&gt;&gt; 中每一项提取出来 ArrayList&lt;String&gt;</span></span><br><span class="line">                .flatMap(<span class="keyword">new</span> Func1&lt;ArrayList&lt;ArrayList&lt;<span class="built_in">String</span>&gt;&gt;, Observable&lt;ArrayList&lt;<span class="built_in">String</span>&gt;&gt;&gt;() &#123;</span><br><span class="line">                    <span class="annotation">@Override</span> public Observable&lt;ArrayList&lt;<span class="built_in">String</span>&gt;&gt; call(ArrayList&lt;ArrayList&lt;<span class="built_in">String</span>&gt;&gt; arrayLists) &#123;</span><br><span class="line">                        <span class="keyword">return</span> Observable.from(arrayLists);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .filter(<span class="keyword">new</span> Func1&lt;ArrayList&lt;<span class="built_in">String</span>&gt;, Boolean&gt;() &#123;</span><br><span class="line">                    <span class="annotation">@Override</span> public Boolean call(ArrayList&lt;<span class="built_in">String</span>&gt; strings) &#123;</span><br><span class="line">                        <span class="keyword">return</span> strings.size() &gt;= <span class="number">2</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .map(<span class="keyword">new</span> Func1&lt;ArrayList&lt;<span class="built_in">String</span>&gt;, <span class="built_in">String</span>&gt;() &#123;</span><br><span class="line">                    <span class="annotation">@Override</span> public <span class="built_in">String</span> call(ArrayList&lt;<span class="built_in">String</span>&gt; strings) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">"[商品名称:"</span> + strings.<span class="literal">get</span>(<span class="number">0</span>) + <span class="string">", ID:"</span> + strings.<span class="literal">get</span>(<span class="number">1</span>) + <span class="string">"]\n"</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="comment">// 发生错误后不要调用 onError，而是转到 onErrorResumeNext</span></span><br><span class="line">                <span class="comment">/*.onErrorResumeNext(new Func1&lt;Throwable, Observable&lt;? extends String&gt;&gt;() &#123;</span><br><span class="line">                    @Override public Observable&lt;? extends String&gt; call(Throwable throwable) &#123;</span><br><span class="line">                        return Observable.just("error result");</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)*/</span></span><br><span class="line"></span><br><span class="line">                .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">                .subscribe(<span class="keyword">new</span> Action1&lt;<span class="built_in">String</span>&gt;() &#123;</span><br><span class="line">                    <span class="annotation">@Override</span> public <span class="keyword">void</span> call(<span class="built_in">String</span> charSequence) &#123;</span><br><span class="line">                        showpop(charSequence);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private <span class="keyword">void</span> showpop(<span class="built_in">String</span> result) &#123;</span><br><span class="line">        tv_result.append(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">interface</span> <span class="title">SearchService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="annotation">@GET</span>(<span class="string">"/sug"</span>) Observable&lt;Data&gt; searchProdcut(<span class="annotation">@Query</span>(<span class="string">"code"</span>) <span class="built_in">String</span> code, <span class="annotation">@Query</span>(<span class="string">"q"</span>) <span class="built_in">String</span> keyword);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Data</span> </span>&#123;</span><br><span class="line">        public ArrayList&lt;ArrayList&lt;<span class="built_in">String</span>&gt;&gt; result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    https://suggest.taobao.com/sug?code=utf-8&amp;q=%E6%89%8B%E6%9C%BA</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>BroadcastObservable.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanks.rxsearch;</span><br><span class="line"><span class="keyword">import</span> android.content.BroadcastReceiver;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.content.IntentFilter;</span><br><span class="line"><span class="keyword">import</span> android.net.ConnectivityManager;</span><br><span class="line"><span class="keyword">import</span> android.net.NetworkInfo;</span><br><span class="line"><span class="keyword">import</span> android.os.Looper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> rx.Observable;</span><br><span class="line"><span class="keyword">import</span> rx.Scheduler;</span><br><span class="line"><span class="keyword">import</span> rx.Subscriber;</span><br><span class="line"><span class="keyword">import</span> rx.Subscription;</span><br><span class="line"><span class="keyword">import</span> rx.android.schedulers.AndroidSchedulers;</span><br><span class="line"><span class="keyword">import</span> rx.functions.Action0;</span><br><span class="line"><span class="keyword">import</span> rx.subscriptions.Subscriptions;</span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by hanks on 15-11-29.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BroadcastObservable</span> <span class="keyword">implements</span> <span class="title">Observable</span>.<span class="title">OnSubscribe</span>&lt;<span class="title">Boolean</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Context context;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BroadcastObservable</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.context = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Observable&lt;Boolean&gt; <span class="title">fromConnectivityManager</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Observable.create(<span class="keyword">new</span> BroadcastObservable(context)).share();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Subscription <span class="title">unsubscribeInUiThread</span><span class="params">(<span class="keyword">final</span> Action0 unsubscribe)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Subscriptions.create(<span class="keyword">new</span> Action0() &#123;</span><br><span class="line">            <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (Looper.getMainLooper() == Looper.myLooper()) &#123;</span><br><span class="line">                    unsubscribe.call();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">final</span> Scheduler.Worker inner = AndroidSchedulers.mainThread().createWorker();</span><br><span class="line">                    inner.schedule(<span class="keyword">new</span> Action0() &#123;</span><br><span class="line">                        <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                            unsubscribe.call();</span><br><span class="line">                            inner.unsubscribe();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">(<span class="keyword">final</span> Subscriber&lt;? <span class="keyword">super</span> Boolean&gt; subscriber)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> BroadcastReceiver receiver = <span class="keyword">new</span> BroadcastReceiver() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">                subscriber.onNext(isConnectedToInternet());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        context.registerReceiver(receiver, <span class="keyword">new</span> IntentFilter(ConnectivityManager.CONNECTIVITY_ACTION));</span><br><span class="line">        subscriber.add(unsubscribeInUiThread(<span class="keyword">new</span> Action0() &#123;</span><br><span class="line">            <span class="annotation">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                context.unregisterReceiver(receiver);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Boolean <span class="title">isConnectedToInternet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ConnectivityManager manager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);</span><br><span class="line">        NetworkInfo networkInfo = manager.getActiveNetworkInfo();</span><br><span class="line">        <span class="keyword">return</span> networkInfo != <span class="keyword">null</span> &amp;&amp; networkInfo.isConnected();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>RetryWithConnectivityIncremental.java<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanks.rxsearch;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeoutException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> retrofit.RetrofitError;</span><br><span class="line"><span class="keyword">import</span> rx.Observable;</span><br><span class="line"><span class="keyword">import</span> rx.functions.Action1;</span><br><span class="line"><span class="keyword">import</span> rx.functions.Func1;</span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * RetryWithConnectivityIncremental</span><br><span class="line"> * &lt;p/&gt;</span><br><span class="line"> * Created by hanks on 15-11-29.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> RetryWithConnectivityIncremental <span class="keyword">implements</span> Func1&lt;Observable&lt;? <span class="keyword">extends</span> Throwable&gt;, Observable&lt;?&gt;&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> startTimeOut;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> maxTimeOut;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> TimeUnit timeUnit;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> timeOut;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Observable&lt;<span class="keyword">Boolean</span>&gt; isConnected;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> RetryWithConnectivityIncremental(Context context, <span class="keyword">int</span> startTimeOut, <span class="keyword">int</span> maxTimeOut, TimeUnit timeUnit) &#123;</span><br><span class="line">        <span class="keyword">this</span>.startTimeOut = startTimeOut;</span><br><span class="line">        <span class="keyword">this</span>.maxTimeOut = maxTimeOut;</span><br><span class="line">        <span class="keyword">this</span>.timeOut = startTimeOut;</span><br><span class="line">        <span class="keyword">this</span>.timeUnit = timeUnit;</span><br><span class="line">        isConnected = getConnectedObservable(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Observable&lt;<span class="keyword">Boolean</span>&gt; getConnectedObservable(Context context) &#123;</span><br><span class="line">        <span class="keyword">return</span> BroadcastObservable.fromConnectivityManager(context)</span><br><span class="line">                .distinctUntilChanged()</span><br><span class="line">                .filter(<span class="keyword">new</span> Func1&lt;<span class="keyword">Boolean</span>, <span class="keyword">Boolean</span>&gt;() &#123;</span><br><span class="line">                    @Override <span class="keyword">public</span> <span class="keyword">Boolean</span> <span class="keyword">call</span>(<span class="keyword">Boolean</span> isConnected) &#123;</span><br><span class="line">                        <span class="keyword">return</span> isConnected;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Observable.Transformer&lt;<span class="keyword">Boolean</span>, <span class="keyword">Boolean</span>&gt; attachIncementalTimeOut() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Observable.Transformer&lt;<span class="keyword">Boolean</span>, <span class="keyword">Boolean</span>&gt;() &#123;</span><br><span class="line"></span><br><span class="line">            @Override <span class="keyword">public</span> Observable&lt;<span class="keyword">Boolean</span>&gt; <span class="keyword">call</span>(Observable&lt;<span class="keyword">Boolean</span>&gt; observable) &#123;</span><br><span class="line">                <span class="keyword">return</span> observable.timeout(timeOut, timeUnit).doOnError(<span class="keyword">new</span> Action1&lt;Throwable&gt;() &#123;</span><br><span class="line"></span><br><span class="line">                    @Override <span class="keyword">public</span> <span class="keyword">void</span> <span class="keyword">call</span>(Throwable throwable) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (throwable <span class="keyword">instanceof</span> TimeoutException) &#123;</span><br><span class="line">                            timeOut = timeOut &gt; maxTimeOut ? maxTimeOut : timeOut + startTimeOut;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override <span class="keyword">public</span> Observable&lt;?&gt; <span class="keyword">call</span>(<span class="keyword">final</span> Observable&lt;? <span class="keyword">extends</span> Throwable&gt; observable) &#123;</span><br><span class="line">        <span class="keyword">return</span> observable.flatMap(<span class="keyword">new</span> Func1&lt;Throwable, Observable&lt;<span class="keyword">Boolean</span>&gt;&gt;() &#123;</span><br><span class="line">            @Override <span class="keyword">public</span> Observable&lt;<span class="keyword">Boolean</span>&gt; <span class="keyword">call</span>(Throwable throwable) &#123;</span><br><span class="line">                <span class="keyword">if</span> (throwable <span class="keyword">instanceof</span> RetrofitError &amp;&amp; ((RetrofitError) throwable).getKind() == RetrofitError.Kind.NETWORK) &#123;</span><br><span class="line">                    <span class="keyword">return</span> isConnected;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> Observable.error(throwable);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).compose(attachIncementalTimeOut());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>原文链接：<a href="https://medium.com/@diolor/improving-ux-with-rxjava-4440a13b157f#.qdhu122d1">https://medium.com/@diolor/improving-ux-with-rxjava-4440a13b157f#.qdhu122d1</a></br><br>翻译： <a href="https://github.com/hanks-zyh">hanks</a></p>
</blockquote>
<p>“网络永连接，服务器不出错，培根没肥肉”</p>
<p><img src="http://file.bmob.cn/M02/C6/EF/oYYBAFZbFyCADEAkAAV75iu06QU497.gif" alt="Search list animation by Daley P Maasz from Dribbble."></p>]]>
    
    </summary>
    
      <category term="RxJava" scheme="http://hanks.xyz/tags/RxJava/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[利器 -- 抓包工具总结]]></title>
    <link href="http://hanks.xyz/2015/11/26/%E5%88%A9%E5%99%A8_--_%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7%E6%80%BB%E7%BB%93/"/>
    <id>http://hanks.xyz/2015/11/26/利器_--_抓包工具总结/</id>
    <published>2015-11-26T05:38:00.000Z</published>
    <updated>2015-12-04T17:20:04.324Z</updated>
    <content type="html"><![CDATA[<p>[github 地址] (<a href="https://github.com/hanks-zyh/capturedata" target="_blank" rel="external">https://github.com/hanks-zyh/capturedata</a>)</p>
<blockquote>
<p>抓包工具整理</p>
</blockquote>
<h1 id="抓包工具_–_Charles">抓包工具 – Charles</h1><p>基于Java 跨平台： Linux , Mac OS X, Windows<br><a href="https://www.charlesproxy.com/" target="_blank" rel="external">官网</a></p>
<blockquote>
<p>Charles is an HTTP proxy / HTTP monitor / Reverse Proxy that enables a developer to view all of the HTTP and SSL / HTTPS traffic between their machine and the Internet. This includes requests, responses and the HTTP headers (which contain the cookies and caching information).</p>
</blockquote>
<p><img src="https://www.charlesproxy.com/assets/img/sm/23/image/mac_screen_321.png?k=f28bf8eff3" alt=""></p>
<hr>
<p><strong>以下为Linux 平台</strong></p>
<h2 id="安装">安装</h2><p><a href="https://www.charlesproxy.com/latest-release/download.do" target="_blank" rel="external">下载 charles-proxy-3.11.2.tar.gz</a></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># 解压</span></span><br><span class="line">tar zxvf charles-proxy-<span class="number">3.11</span><span class="number">.2</span>.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 启动 charles</span></span><br><span class="line">./charles/bin/charles</span><br></pre></td></tr></table></figure>
<h2 id="手机抓包">手机抓包</h2><p><strong>前提：使手机和电脑在一个局域网内，不一定非要是一个ip段，只要是同一个路由下就可以了，比如电脑连接的有线网ip为192.168.16.12，然后手机链接的wifi ip为192.168.1.103，但是这个有线网和无线网的最终都是来自于一个外部ip，这样的话也是可以的。</strong></p>
<p>在安卓手机的 <code>设置 -&gt; wlan -&gt; 长按连接的wifi -&gt; 修改网络 -&gt;  高级选项 -&gt; 代理选手动</code> ， 填入电脑的 ip 和 charles 监听的 端口（默认为 8888）</p>
<blockquote>
<p>查看电脑端口 ： <code>ifconfig</code><br>查看/修改 charles 监听端口： charles的 <code>Proxy -&gt; Proxy Setting</code></p>
</blockquote>
<p>设置好之后Charles弹出确认框，点击Allow按钮即可</p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/ad193bbb-4d55-4feb-9e55-0634aa6dbfce.png" alt="图片"> </p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/c48ee820-f6ae-4814-b505-ff4870db1f5b.png" alt="图片"> </p>
<h2 id="抓取_https">抓取 https</h2><p> <img src="https://dn-coding-net-production-pp.qbox.me/027d34d1-c783-4aca-8db3-e0066bf4ca1b.png" alt="图片"> </p>
<h3 id="安装证书">安装证书</h3><p>charles的 Help -&gt; SSL Proxy -&gt; Install charles Root</p>
<h3 id="设置_ssl_enable">设置 ssl enable</h3><p>在需要抓取的 https 链接上 右键 <code>enable ssl proxy</code><br><img src="https://dn-coding-net-production-pp.qbox.me/4b91cf2a-e35b-4b9b-96ac-047eafe607e6.png" alt="图片"> </p>
<p>参考 <a href="http://drops.wooyun.org/tips/2423" target="_blank" rel="external">charles使用教程指南</a></p>
<h1 id="抓包工具_–_mitmproxy">抓包工具 – mitmproxy</h1><p>基于python 跨平台： linux, windows，    OSX (Mountain Lion and later)<br><a href="https://mitmproxy.org/" target="_blank" rel="external">官网</a></p>
<blockquote>
<p>Mitmproxy是一个基于python的中间人代理的框架。做过渗透测试的肯定很熟悉工具burpsuite或Fiddler，这些工具能够拦截并修改http或https的数据包，对于分析数据包交互的应用来说是非常有用的。但是这些工具都是整套给我们做好了。比如如果想自己定制一套这样的工具，添加一些自己需要的功能的话，那么我想，mitmproxy将是一个比较好的选择，因为它提供了一个可供用户调用的库libmproxy（注意该库目前只支持linux系统）。</p>
</blockquote>
<p><img src="https://dn-coding-net-production-pp.qbox.me/a2d09a30-ea72-42a1-818e-0982f7227784.png" alt="图片"></p>
<p><img src="https://dn-coding-net-production-pp.qbox.me/85e1f4e1-c914-4ac1-9984-4492aad7096f.png" alt="图片"></p>
<p><img src="https://dn-coding-net-production-pp.qbox.me/6992699a-cb21-44b7-9114-38d1b10f0272.png" alt="图片"></p>
<hr>
<p><strong>以下基于Linux台（Ubuntu14.04）</strong></p>
<h2 id="下载">下载</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pip <span class="keyword">install</span> mitmproxy</span><br></pre></td></tr></table></figure>
<p>如果下载速度慢可以下载<a href="https://mitmproxy.org/download/mitmproxy-0.14.0.tar.gz" target="_blank" rel="external">tar包</a></p>
<h2 id="启动">启动</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mitmproxy -b <span class="number">192.168</span><span class="number">.1</span><span class="number">.29</span> -p <span class="number">9999</span></span><br></pre></td></tr></table></figure>
<p>输入 <code>？</code> 查看帮助， <code>q</code>返回<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">A      accept all intercepted flows</span><br><span class="line">a      accept this intercepted flow</span><br><span class="line">b      save request/response body</span><br><span class="line">C      clear flow list or eventlog</span><br><span class="line">d      <span class="operator"><span class="keyword">delete</span> flow</span><br><span class="line"><span class="keyword">D</span>      <span class="keyword">duplicate</span> flow</span><br><span class="line"><span class="keyword">e</span>      toggle eventlog</span><br><span class="line"><span class="keyword">F</span>      toggle follow flow <span class="keyword">list</span></span><br><span class="line"><span class="keyword">l</span>      <span class="keyword">set</span> <span class="keyword">limit</span> filter pattern</span><br><span class="line"><span class="keyword">L</span>      <span class="keyword">load</span> saved flows</span><br><span class="line"><span class="keyword">m</span>      toggle flow mark</span><br><span class="line"><span class="keyword">n</span>      <span class="keyword">create</span> a <span class="keyword">new</span> request</span><br><span class="line"><span class="keyword">P</span>      copy flow <span class="keyword">to</span> clipboard</span><br><span class="line">r      replay request</span><br><span class="line">U      unmark all marked flows</span><br><span class="line">V      revert changes <span class="keyword">to</span> request</span><br><span class="line">w      <span class="keyword">save</span> flows</span><br><span class="line">W      stream flows <span class="keyword">to</span> <span class="keyword">file</span></span><br><span class="line">X      <span class="keyword">kill</span> <span class="keyword">and</span> <span class="keyword">delete</span> flow, even <span class="keyword">if</span> it<span class="string">'s mid-intercept</span><br><span class="line">tab    tab between eventlog and flow list</span><br><span class="line">enter  view flow</span><br><span class="line">|      run script on this flow</span></span></span><br></pre></td></tr></table></figure></p>
<p>手机设置好代理，界面上就可以看到请求了<br><img src="https://dn-coding-net-production-pp.qbox.me/c5446754-1d45-4d7d-ba48-44b6e26d3b4f.png" alt="图片"></p>
<h2 id="mitmproxy_查看http请求响应">mitmproxy 查看http请求响应</h2><p><code>C (大写)</code> 清除抓包结果</p>
<p><code>j</code>  <code>k</code> 选择请求， 回车查看详细信息</p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/5cfa3fd1-879b-4db6-8f05-f8885d730964.png" alt="图片"></p>
<p><code>tab</code>   切换 <strong>Request</strong> 和 <strong>Response</strong></p>
<p><code>m</code> Display Mode 美化信息<br> <img src="https://dn-coding-net-production-pp.qbox.me/70e7c4ad-f7c0-4e7a-bea6-2c4cdd36d50b.png" alt="图片"><br> 上图输入 m，在输入 s，便可以以json形式展示</p>
<p><code>e</code> 编辑<br>Edit request (cookies,query,path,url,header,form,raw body,method)?<br>Edit response (cookies,code,message,header,raw body)?</p>
<h3 id="mitmproxy拦截_(Intercept)">mitmproxy拦截 (Intercept)</h3><p>相当于在客户端和服务器做中间人，可以修改客户端请求，修改服务器返回</p>
<p>输入 <code>i</code>（代表Intercept filter）即可，此时界面便会让你输入想要拦截的条件：</p>
<p>mitmproxy的条件拦截在默认情况下是过滤抓包的URL的。也就是说当你直接输入要拦截的条件（比如输入“weibo”），那么接下来要出现抓包会将匹配的抓包整体变黄：</p>
<p>mitmproxy条件过滤效果<br>mitmproxy条件拦截效果<br>这些橘黄色的数据包都代表被拦截了，还未发送给服务器，这个时候你就可以对这些数据包进行修改，我们选择一个数据包enter进入：</p>
<p>mitmproxy 拦截 选择数据包<br>与之前的类似，输入“e”，进行request编辑模式，然后输入“h”代表要编辑request的头部:</p>
<p>mitmproxy 编辑拦截包的头部<br>输入enter便可对高亮的User-Agent的值进行修改，上图的weibo版本之前是5.0的，被我改成了6.0 。我们还可以对header进行添加属性，输入“a”即可，然后使用tab分别键入key和value。这里我添加了“test－test”键值对：</p>
<p>mitmproxy 拦截header添加键值对<br>至此，我对拦截的request header已经修改完毕，现在要做的就是我要认可接受这个修改，然后发给服务器。所以我们输入“a”（代表“accept”）即可，等到服务器响应后，注意，mitmproxy便又了拦截服务器发过来的response（注意那个“Response intercepted”）：</p>
<p>mitmproxy 拦截response<br>现在如果你想修改这个response也可以，方式同上面修改request一样。这个时候我再输入“a”，代表我接受了这个response，然后这个response便可发给客户端了:</p>
<p>mitmproxy 拦截response之后accept</p>
<p>更多类型的mitmproxy拦截</p>
<p>同时mitmproxy还支持不同类型的条件过滤，之前在拦截字符串前面加上特定的参数比如我要拦截所有的POST request怎么办？输入：~m POST 即可（m代表method）：</p>
<p>mitmproxy 拦截特定的request 方法</p>
<p>拦截所有的request： ~q</p>
<p>拦截特定的header： ~h</p>
<p>拦截特定的domain： ~d</p>
<p>拦截特定的响应代码（404之类的）： ~c</p>
<p>mitmproxy官方文档。</p>
<hr>
<h1 id="抓包工具_–_Fiddler">抓包工具 – Fiddler</h1><p>基于C#  windows, Linux看这里 <a href="http://fiddler.wikidot.com/mono" target="_blank" rel="external">Mono Fiddler</a></p>
<hr>
<h2 id="下载-1">下载</h2><p>直接下载，安装即可</p>
<h2 id="手机抓包-1">手机抓包</h2><p><img src="https://imququ.com/static/uploads/2013/09/Snip20130913_20.png.webp" alt=""></p>
<hr>
<h1 id="抓包工具_–_wireshark">抓包工具 – wireshark</h1><p>跨平台：Windows，OS X ，Linux</p>
<p><a href="https://www.wireshark.org/" target="_blank" rel="external">官网</a></p>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[解析 dex 文件结构 - DexHeader]]></title>
    <link href="http://hanks.xyz/2015/11/18/%E8%A7%A3%E6%9E%90_dex_%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84_-_DexHeader/"/>
    <id>http://hanks.xyz/2015/11/18/解析_dex_文件结构_-_DexHeader/</id>
    <published>2015-11-18T03:02:00.000Z</published>
    <updated>2015-12-06T04:32:37.893Z</updated>
    <content type="html"><![CDATA[
<p><span style="font-size:18px">原文:&nbsp;<a target="_blank" href="http://kiya-z.github.io/2015/11/17/parse-dex-file-part-dex-header/">http://kiya-z.github.io/2015/11/17/parse-dex-file-part-dex-header/</a></span></p>
<p><br>
</p>
<p></p>
<h1 class="post-title" style="font-size:26px; margin:0px; padding:0px; line-height:1; text-align:center; word-break:break-word">
解析 dex 文件结构 - DexHeader</h1>
<div class="post-meta" style="margin:3px 0px 60px; color:rgb(153,153,153); font-size:12px; text-align:center">
<span class="post-time">发表于&nbsp;2015-11-17&nbsp;</span><span class="post-category">&nbsp; | &nbsp; 分类于&nbsp;<span><a target="_blank" href="http://kiya-z.github.io/categories/Android/" rel="index" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent"><span>Android</span>&nbsp;</a></span></span><span class="post-comments-count">&nbsp;
 | &nbsp;&nbsp;<a target="_blank" href="http://kiya-z.github.io/2015/11/17/parse-dex-file-part-dex-header/#comments" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent"><span class="post-comments-count ds-thread-count">暂无评论</span>&nbsp;</a></span><span id="busuanzi_container_page_pv" style="display:inline">&nbsp;
 | &nbsp;&nbsp;<span id="busuanzi_value_page_pv">6</span>&nbsp; Hits</span></div>
<div class="post-body" style="text-align:justify; color:rgb(85,85,85); font-family:Lato,'PingFang SC','Microsoft YaHei',sans-serif; font-size:16px; line-height:32px">
<span></span>
<h3 id="简介" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
简介</h3>
<p style="margin-top:0px; margin-bottom:25px">dex 文件是 dalvik 虚拟机的可执行文件。</p>
<a target="_blank" id="more" style="border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent"></a>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<h3 id="dex_文件结构" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
dex 文件结构</h3>
<p style="margin-top:0px; margin-bottom:25px">该结构位于系统源码&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">dalvik\libdex\DexFile.h</code>&nbsp;中，描述的是
 dex 文件被映射到内存中的结构。</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
<span class="line" style="height:20px">4</span>
<span class="line" style="height:20px">5</span>
<span class="line" style="height:20px">6</span>
<span class="line" style="height:20px">7</span>
<span class="line" style="height:20px">8</span>
<span class="line" style="height:20px">9</span>
<span class="line" style="height:20px">10</span>
<span class="line" style="height:20px">11</span>
<span class="line" style="height:20px">12</span>
<span class="line" style="height:20px">13</span>
<span class="line" style="height:20px">14</span>
<span class="line" style="height:20px">15</span>
<span class="line" style="height:20px">16</span>
<span class="line" style="height:20px">17</span>
<span class="line" style="height:20px">18</span>
<span class="line" style="height:20px">19</span>
<span class="line" style="height:20px">20</span>
<span class="line" style="height:20px">21</span>
<span class="line" style="height:20px">22</span>
<span class="line" style="height:20px">23</span>
<span class="line" style="height:20px">24</span>
<span class="line" style="height:20px">25</span>
<span class="line" style="height:20px">26</span>
<span class="line" style="height:20px">27</span>
<span class="line" style="height:20px">28</span>
<span class="line" style="height:20px">29</span>
<span class="line" style="height:20px">30</span>
<span class="line" style="height:20px">31</span>
<span class="line" style="height:20px">32</span>
<span class="line" style="height:20px">33</span>
<span class="line" style="height:20px">34</span>
<span class="line" style="height:20px">35</span>
<span class="line" style="height:20px">36</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px">/<span class="keyword" style="color:rgb(178,148,187)">*</span></span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">*</span> Structure representing a DEX file.</span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">*</span></span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">*</span> Code should regard DexFile as opaque, using the API calls provided here</span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">*</span> to access specific structures.</span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">struct DexFile {</span>
<span class="line" style="height:20px">    /<span class="keyword" style="color:rgb(178,148,187)">*</span> directly-mapped <span class="string" style="color:rgb(181,189,104)">&quot;opt&quot;</span> header <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    const DexOptHeader<span class="keyword" style="color:rgb(178,148,187)">*</span> pOptHeader;</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">    /<span class="keyword" style="color:rgb(178,148,187)">*</span> pointers to directly-mapped structs and arrays in base DEX <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    const DexHeader<span class="keyword" style="color:rgb(178,148,187)">*</span>    pHeader;</span>
<span class="line" style="height:20px">    const DexStringId<span class="keyword" style="color:rgb(178,148,187)">*</span>  pStringIds;</span>
<span class="line" style="height:20px">    const DexTypeId<span class="keyword" style="color:rgb(178,148,187)">*</span>    pTypeIds;</span>
<span class="line" style="height:20px">    const DexFieldId<span class="keyword" style="color:rgb(178,148,187)">*</span>   pFieldIds;</span>
<span class="line" style="height:20px">    const DexMethodId<span class="keyword" style="color:rgb(178,148,187)">*</span>  pMethodIds;</span>
<span class="line" style="height:20px">    const DexProtoId<span class="keyword" style="color:rgb(178,148,187)">*</span>   pProtoIds;</span>
<span class="line" style="height:20px">    const DexClassDef<span class="keyword" style="color:rgb(178,148,187)">*</span>  pClassDefs;</span>
<span class="line" style="height:20px">    const DexLink<span class="keyword" style="color:rgb(178,148,187)">*</span>      pLinkData;</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">    /<span class="keyword" style="color:rgb(178,148,187)">*</span></span>
<span class="line" style="height:20px">     <span class="keyword" style="color:rgb(178,148,187)">*</span> These are mapped out of the <span class="string" style="color:rgb(181,189,104)">&quot;auxillary&quot;</span> section, and may not be</span>
<span class="line" style="height:20px">     <span class="keyword" style="color:rgb(178,148,187)">*</span> included in the file.</span>
<span class="line" style="height:20px">     <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    const DexClassLookup<span class="keyword" style="color:rgb(178,148,187)">*</span> pClassLookup;</span>
<span class="line" style="height:20px">    const void<span class="keyword" style="color:rgb(178,148,187)">*</span>         pRegisterMapPool;       // RegisterMapClassPool</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">    /<span class="keyword" style="color:rgb(178,148,187)">*</span> points to start of DEX file data <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    const u1<span class="keyword" style="color:rgb(178,148,187)">*</span>           baseAddr;</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">    /<span class="keyword" style="color:rgb(178,148,187)">*</span> track memory overhead for auxillary structures <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    int                 overhead;</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">    /<span class="keyword" style="color:rgb(178,148,187)">*</span> additional app-specific data structures associated with the DEX <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    //void<span class="keyword" style="color:rgb(178,148,187)">*</span>               auxData;</span>
<span class="line" style="height:20px">};</span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px">基本的文件结构只需关注:<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
<span class="line" style="height:20px">4</span>
<span class="line" style="height:20px">5</span>
<span class="line" style="height:20px">6</span>
<span class="line" style="height:20px">7</span>
<span class="line" style="height:20px">8</span>
<span class="line" style="height:20px">9</span>
<span class="line" style="height:20px">10</span>
<span class="line" style="height:20px">11</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px">struct DexFile{</span>
<span class="line" style="height:20px">    DexHeader    Header<span class="comment" style="color:rgb(150,152,150)">;</span></span>
<span class="line" style="height:20px">    DexStringId  StringIds[stringIdsSize]<span class="comment" style="color:rgb(150,152,150)">;</span></span>
<span class="line" style="height:20px">    DexTypeId    TypeIds[typeIdsSize]<span class="comment" style="color:rgb(150,152,150)">;</span></span>
<span class="line" style="height:20px">    DexFieldId   FieldIds[fieldIdsSize]<span class="comment" style="color:rgb(150,152,150)">;</span></span>
<span class="line" style="height:20px">    DexMethodId  MethodIds[methodIdsSize]<span class="comment" style="color:rgb(150,152,150)">;</span></span>
<span class="line" style="height:20px">    DexProtoId   ProtoIds[protoIdsSize]<span class="comment" style="color:rgb(150,152,150)">;</span></span>
<span class="line" style="height:20px">    DexClassDef  ClassDefs[classDefsSize]<span class="comment" style="color:rgb(150,152,150)">;</span></span>
<span class="line" style="height:20px">    DexData      Data[]<span class="comment" style="color:rgb(150,152,150)">;</span></span>
<span class="line" style="height:20px">    DexLink      LinkData<span class="comment" style="color:rgb(150,152,150)">;</span></span>
<span class="line" style="height:20px">}<span class="comment" style="color:rgb(150,152,150)">;</span></span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<h4 id="大体结构图" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1">
大体结构图</h4>
<p style="margin-top:0px; margin-bottom:25px"><a target="_blank" href="http://7xo976.com1.z0.glb.clouddn.com/images/github-io/Android/dex-file-general-structure.png" class="fancybox" rel="group" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent"><img src="http://7xo976.com1.z0.glb.clouddn.com/images/github-io/Android/dex-file-general-structure.png" alt="dex-file-general-structure" style="border:1px solid rgb(221,221,221); display:block!important; margin:0px auto; max-width:100%; height:auto; padding:3px"></a></p>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<h3 id="DexHeader_结构" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
DexHeader 结构</h3>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
<span class="line" style="height:20px">4</span>
<span class="line" style="height:20px">5</span>
<span class="line" style="height:20px">6</span>
<span class="line" style="height:20px">7</span>
<span class="line" style="height:20px">8</span>
<span class="line" style="height:20px">9</span>
<span class="line" style="height:20px">10</span>
<span class="line" style="height:20px">11</span>
<span class="line" style="height:20px">12</span>
<span class="line" style="height:20px">13</span>
<span class="line" style="height:20px">14</span>
<span class="line" style="height:20px">15</span>
<span class="line" style="height:20px">16</span>
<span class="line" style="height:20px">17</span>
<span class="line" style="height:20px">18</span>
<span class="line" style="height:20px">19</span>
<span class="line" style="height:20px">20</span>
<span class="line" style="height:20px">21</span>
<span class="line" style="height:20px">22</span>
<span class="line" style="height:20px">23</span>
<span class="line" style="height:20px">24</span>
<span class="line" style="height:20px">25</span>
<span class="line" style="height:20px">26</span>
<span class="line" style="height:20px">27</span>
<span class="line" style="height:20px">28</span>
<span class="line" style="height:20px">29</span>
<span class="line" style="height:20px">30</span>
<span class="line" style="height:20px">31</span>
<span class="line" style="height:20px">32</span>
<span class="line" style="height:20px">33</span>
<span class="line" style="height:20px">34</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px">/<span class="keyword" style="color:rgb(178,148,187)">*</span></span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">*</span> 160-bit SHA-1 digest.</span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">enum { kSHA1DigestLen = 20,</span>
<span class="line" style="height:20px">       kSHA1DigestOutputLen = kSHA1DigestLen<span class="keyword" style="color:rgb(178,148,187)">*</span>2 &#43;1 };</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">/<span class="keyword" style="color:rgb(178,148,187)">*</span></span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">*</span> Direct-mapped <span class="string" style="color:rgb(181,189,104)">&quot;header_item&quot;</span> struct.</span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">struct DexHeader {</span>
<span class="line" style="height:20px">    u1  magic[8];           /<span class="keyword" style="color:rgb(178,148,187)">*</span> 版本标识 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  checksum;           /<span class="keyword" style="color:rgb(178,148,187)">*</span> adler32 检验 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u1  signature[kSHA1DigestLen]; /<span class="keyword" style="color:rgb(178,148,187)">*</span> SHA-1 哈希&#20540; <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  fileSize;           /<span class="keyword" style="color:rgb(178,148,187)">*</span> 整个文件大小 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  headerSize;         /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexHeader 大小 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  endianTag;          /<span class="keyword" style="color:rgb(178,148,187)">*</span> 字节序标记 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  linkSize;           /<span class="keyword" style="color:rgb(178,148,187)">*</span> 链接段大小 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  linkOff;            /<span class="keyword" style="color:rgb(178,148,187)">*</span> 链接段偏移 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  mapOff;             /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexMapList 的文件偏移 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  stringIdsSize;      /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexStringId 的个数 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  stringIdsOff;       /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexStringId 的文件偏移 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  typeIdsSize;        /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexTypeId 的个数 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  typeIdsOff;         /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexTypeId 的文件偏移 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  protoIdsSize;       /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexProtoId 的个数 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  protoIdsOff;        /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexProtoId 的文件偏移 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  fieldIdsSize;       /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexFieldId 的个数 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  fieldIdsOff;        /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexFieldId 的文件偏移 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  methodIdsSize;      /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexMethodId 的个数 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  methodIdsOff;       /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexMethodId 的文件偏移 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  classDefsSize;      /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexClassDef 的个数 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  classDefsOff;       /<span class="keyword" style="color:rgb(178,148,187)">*</span> DexClassDef 的文件偏移 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  dataSize;           /<span class="keyword" style="color:rgb(178,148,187)">*</span> 数据段的大小 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">    u4  dataOff;            /<span class="keyword" style="color:rgb(178,148,187)">*</span> 数据段的文件偏移 <span class="keyword" style="color:rgb(178,148,187)">*</span>/</span>
<span class="line" style="height:20px">};</span>
</pre>
</td>
</tr>
</tbody>
</table>
<h4 id="其中：" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1">其中：</h4>
<p style="margin-top:0px; margin-bottom:25px"><strong>magic</strong>&nbsp;： dex文件标识，&#20540;必须为常量&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">DEX_FILE_MAGIC</code>；</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px">ubyte[<span class="number" style="color:rgb(222,147,95)">8</span>] DEX_FILE_MAGIC = { <span class="number" style="color:rgb(222,147,95)">0x64</span> <span class="number" style="color:rgb(222,147,95)">0x65</span> <span class="number" style="color:rgb(222,147,95)">0x78</span> <span class="number" style="color:rgb(222,147,95)">0x0a</span> <span class="number" style="color:rgb(222,147,95)">0x30</span> <span class="number" style="color:rgb(222,147,95)">0x33</span> <span class="number" style="color:rgb(222,147,95)">0x35</span> <span class="number" style="color:rgb(222,147,95)">0x00</span> }</span>
<span class="line" style="height:20px">                        = <span class="string" style="color:rgb(181,189,104)">&quot;dex\n035\0&quot;</span></span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"><strong>checkSum</strong>&nbsp;： 对除 magic 和 checkSum 外的剩余文件计算 adler32 校验&#20540;，目的是检测文件是否损坏；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>signature</strong>：对除 magic、checkSum 和 signature 外的剩余文件计算 SHA-1 校验&#20540;，用来确定文件的唯一性</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>fileSize</strong>：以字节为单位，整个文件（包括头部）的大小；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>headerSize</strong>：头部大小，0x70 字节，已经考虑到兼容性；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>endianTag</strong>：两种字节序取&#20540;；</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px">uint ENDIAN_CONSTANT = <span class="number" style="color:rgb(222,147,95)">0x12345678</span><span class="comment" style="color:rgb(150,152,150)">;</span></span>
<span class="line" style="height:20px">uint REVERSE_ENDIAN_CONSTANT = <span class="number" style="color:rgb(222,147,95)">0x78563412</span><span class="comment" style="color:rgb(150,152,150)">;</span></span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"><strong>linkSize</strong>：链接段的大小，如果没有使用静态链接，&#20540;为0；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>linkOff</strong>：链接段的文件偏移，指向链接数据段内，如果&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">linkSize</code>&nbsp;为
 0，则为 0；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>mapOff</strong>：map item 的文件偏移，指向数据段内，数据结构为&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">mapList</code>，如果没有
 map，&#20540;为 0；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>stringIdsSize</strong>：字符串 id 的个数；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>stringIdsOff</strong>：字符串 id 清单的文件偏移，指向&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">stringIds</code>&nbsp;的起始地址，如果
 stringIdsSize 为 0，&#20540;为0；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>typeIdsSize</strong>：类型标识符的个数；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>typeIdsOff</strong>：类型标识符清单的文件偏移，指向&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">typeIds</code>&nbsp;的起始地址，如果
 typeIdsSize 为 0，&#20540;为 0 (<em>这就很奇怪了哟</em>)；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>protoIdsSize</strong>：原型标识符的个数；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>protoIdsOff</strong>：原型标识符清单的文件偏移，指向&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">protoIds</code>&nbsp;的起始地址，如果
 protoIdsSize 为 0，&#20540;为 0 (<em>这就很奇怪了哟</em>)；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>fieldIdsSize</strong>：字段标识符的个数；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>fieldIdsOff</strong>：字段标识符清单的文件偏移，指向&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">fieldIds</code>&nbsp;的起始地址，如果
 fieldIdsSize 为 0，&#20540;为 0；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>methodIdsSize</strong>：方法标识符的个数；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>methodIdsOff</strong>：方法标识符清单的文件偏移，指向&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">methodIds</code>&nbsp;的起始地址，如果
 methodIdsSize 为 0，&#20540;为 0；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>classDefsSize</strong>：类的个数；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>classDefsOff</strong>：类清单的文件偏移，指向&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">classDefs</code>&nbsp;的起始地址，如果
 classDefsSize 为 0，&#20540;为 0 (<em>这就很奇怪了哟</em>)；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>dataSize</strong>：数据段的大小，以字节为单位，并且是 sizeof(uint) 的偶数倍；</p>
<p style="margin-top:0px; margin-bottom:25px"><strong>dataOff</strong>：数据段的文件偏移。</p>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<h3 id="手工查找" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
手工查找</h3>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
<span class="line" style="height:20px">4</span>
<span class="line" style="height:20px">5</span>
<span class="line" style="height:20px">6</span>
<span class="line" style="height:20px">7</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="number" style="color:rgb(222,147,95)">00000000</span>  <span class="number" style="color:rgb(222,147,95)">64</span> <span class="number" style="color:rgb(222,147,95)">65</span> <span class="number" style="color:rgb(222,147,95)">78</span> <span class="number" style="color:rgb(222,147,95)">0</span>a <span class="number" style="color:rgb(222,147,95)">30</span> <span class="number" style="color:rgb(222,147,95)">33</span> <span class="number" style="color:rgb(222,147,95)">35</span> <span class="number" style="color:rgb(222,147,95)">00</span>  <span class="number" style="color:rgb(222,147,95)">3</span>b ba fe c3 <span class="number" style="color:rgb(222,147,95)">83</span> <span class="number" style="color:rgb(222,147,95)">7</span>e aa be  |dex<span class="number" style="color:rgb(222,147,95)">.035</span>.;....~..|</span>
<span class="line" style="height:20px"><span class="number" style="color:rgb(222,147,95)">00000010</span>  <span class="number" style="color:rgb(222,147,95)">09</span> <span class="number" style="color:rgb(222,147,95)">97</span> <span class="number" style="color:rgb(222,147,95)">71</span> <span class="number" style="color:rgb(222,147,95)">1</span>e <span class="number" style="color:rgb(222,147,95)">17</span> <span class="number" style="color:rgb(222,147,95)">96</span> <span class="number" style="color:rgb(222,147,95)">9f</span> e9  <span class="number" style="color:rgb(222,147,95)">0</span>c bd <span class="number" style="color:rgb(222,147,95)">01</span> <span class="number" style="color:rgb(222,147,95)">60</span> b4 <span class="number" style="color:rgb(222,147,95)">2</span>a <span class="number" style="color:rgb(222,147,95)">1</span>a c9  |..q........`.*..|</span>
<span class="line" style="height:20px"><span class="number" style="color:rgb(222,147,95)">00000020</span>  c4 <span class="number" style="color:rgb(222,147,95)">10</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">70</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span>  <span class="number" style="color:rgb(222,147,95)">78</span> <span class="number" style="color:rgb(222,147,95)">56</span> <span class="number" style="color:rgb(222,147,95)">34</span> <span class="number" style="color:rgb(222,147,95)">12</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span>  |....p...xV4.....|</span>
<span class="line" style="height:20px"><span class="number" style="color:rgb(222,147,95)">00000030</span>  <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">10</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span>  <span class="number" style="color:rgb(222,147,95)">5</span>c <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">70</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span>  |........\...p...|</span>
<span class="line" style="height:20px"><span class="number" style="color:rgb(222,147,95)">00000040</span>  <span class="number" style="color:rgb(222,147,95)">19</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> e0 <span class="number" style="color:rgb(222,147,95)">01</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span>  <span class="number" style="color:rgb(222,147,95)">12</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">44</span> <span class="number" style="color:rgb(222,147,95)">02</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span>  |............D...|</span>
<span class="line" style="height:20px"><span class="number" style="color:rgb(222,147,95)">00000050</span>  <span class="number" style="color:rgb(222,147,95)">01</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">1</span>c <span class="number" style="color:rgb(222,147,95)">03</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span>  <span class="number" style="color:rgb(222,147,95)">2</span>b <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">24</span> <span class="number" style="color:rgb(222,147,95)">03</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span>  |........&#43;...$...|</span>
<span class="line" style="height:20px"><span class="number" style="color:rgb(222,147,95)">00000060</span>  <span class="number" style="color:rgb(222,147,95)">02</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">7</span>c <span class="number" style="color:rgb(222,147,95)">04</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span>  <span class="number" style="color:rgb(222,147,95)">08</span> <span class="number" style="color:rgb(222,147,95)">0</span>c <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span> bc <span class="number" style="color:rgb(222,147,95)">04</span> <span class="number" style="color:rgb(222,147,95)">00</span> <span class="number" style="color:rgb(222,147,95)">00</span>  |....|...........|</span>
</pre>
</td>
</tr>
</tbody>
</table>
<table style="border-collapse:collapse; border-spacing:0px; margin:20px 0px; width:899px; border:1px solid rgb(221,221,221); font-size:14px">
<thead>
<tr>
<th style="padding:8px 8px 10px; vertical-align:middle; border-bottom-width:3px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
binary</th>
<th style="padding:8px 8px 10px; vertical-align:middle; border-bottom-width:3px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
field</th>
</tr>
</thead>
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
64 65 78 0a 30 33 35 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
magic</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
3b ba fe c3</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
checksum</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
83 7e aa be 09 97 71 1e 17 96 9f e9 0c bd 01 60 b4 2a 1a c9</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
signature</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
c4 10 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
fileSize</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
70 00 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
headerSize</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
78 56 34 12</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
endianTag</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
00 00 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
linkSize</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
00 00 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
linkOff</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
00 10 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
mapOff</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
5c 00 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
stringIdsSize</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
70 00 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
stringIdsOff</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
19 00 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
typeIdsSize</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
e0 01 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
typeIdsOff</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
12 00 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
protoIdsSize</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
44 02 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
protoIdsOff</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
01 00 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
fieldIdsSize</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
1c 03 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
fieldIdsOff</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
2b 00 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
methodIdsSize</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
24 03 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
methodIdsOff</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
02 00 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
classDefsSize</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
7c 04 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
classDefsOff</td>
</tr>
<tr>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
08 0c 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
dataSize</td>
</tr>
<tr style="background-color:rgb(249,249,249)">
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
bc 04 00 00</td>
<td style="padding:8px; vertical-align:middle; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(221,221,221); border-right-width:1px; border-right-style:solid; border-right-color:rgb(238,238,238)">
dataOff</td>
</tr>
</tbody>
</table>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<h3 id="写程序解析_DexHeader" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
写程序解析 DexHeader</h3>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
<span class="line" style="height:20px">4</span>
<span class="line" style="height:20px">5</span>
<span class="line" style="height:20px">6</span>
<span class="line" style="height:20px">7</span>
<span class="line" style="height:20px">8</span>
<span class="line" style="height:20px">9</span>
<span class="line" style="height:20px">10</span>
<span class="line" style="height:20px">11</span>
<span class="line" style="height:20px">12</span>
<span class="line" style="height:20px">13</span>
<span class="line" style="height:20px">14</span>
<span class="line" style="height:20px">15</span>
<span class="line" style="height:20px">16</span>
<span class="line" style="height:20px">17</span>
<span class="line" style="height:20px">18</span>
<span class="line" style="height:20px">19</span>
<span class="line" style="height:20px">20</span>
<span class="line" style="height:20px">21</span>
<span class="line" style="height:20px">22</span>
<span class="line" style="height:20px">23</span>
<span class="line" style="height:20px">24</span>
<span class="line" style="height:20px">25</span>
<span class="line" style="height:20px">26</span>
<span class="line" style="height:20px">27</span>
<span class="line" style="height:20px">28</span>
<span class="line" style="height:20px">29</span>
<span class="line" style="height:20px">30</span>
<span class="line" style="height:20px">31</span>
<span class="line" style="height:20px">32</span>
<span class="line" style="height:20px">33</span>
<span class="line" style="height:20px">34</span>
<span class="line" style="height:20px">35</span>
<span class="line" style="height:20px">36</span>
<span class="line" style="height:20px">37</span>
<span class="line" style="height:20px">38</span>
<span class="line" style="height:20px">39</span>
<span class="line" style="height:20px">40</span>
<span class="line" style="height:20px">41</span>
<span class="line" style="height:20px">42</span>
<span class="line" style="height:20px">43</span>
<span class="line" style="height:20px">44</span>
<span class="line" style="height:20px">45</span>
<span class="line" style="height:20px">46</span>
<span class="line" style="height:20px">47</span>
<span class="line" style="height:20px">48</span>
<span class="line" style="height:20px">49</span>
<span class="line" style="height:20px">50</span>
<span class="line" style="height:20px">51</span>
<span class="line" style="height:20px">52</span>
<span class="line" style="height:20px">53</span>
<span class="line" style="height:20px">54</span>
<span class="line" style="height:20px">55</span>
<span class="line" style="height:20px">56</span>
<span class="line" style="height:20px">57</span>
<span class="line" style="height:20px">58</span>
<span class="line" style="height:20px">59</span>
<span class="line" style="height:20px">60</span>
<span class="line" style="height:20px">61</span>
<span class="line" style="height:20px">62</span>
<span class="line" style="height:20px">63</span>
<span class="line" style="height:20px">64</span>
<span class="line" style="height:20px">65</span>
<span class="line" style="height:20px">66</span>
<span class="line" style="height:20px">67</span>
<span class="line" style="height:20px">68</span>
<span class="line" style="height:20px">69</span>
<span class="line" style="height:20px">70</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="atom">import</span> <span class="atom">struct</span></span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px"><span class="atom">class</span> <span class="name">DexStruct</span>(<span class="atom">object</span>):</span>
<span class="line" style="height:20px">    <span class="name">DexHeader</span> = {</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;magic&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;checkSum&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">'signature'</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">'fileSize'</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;headerSize&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;endianTag&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;linkSize&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;linkOff&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;mapOff&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;stringIdsSize&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;stringIdsOff&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;typeIdsSize&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;typeIdsOff&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;protoIdsSize&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;protoIdsOff&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;fieldIdsSize&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;fieldIdsOff&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;methodIdsSize&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;methodIdsOff&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;classDefsSize&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;classDefsOff&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;dataSize&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,</span>
<span class="line" style="height:20px">          <span class="string" style="color:rgb(181,189,104)">&quot;dataOff&quot;</span>: <span class="number" style="color:rgb(222,147,95)">0</span>,   }</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px"><span class="atom">def</span> <span class="atom">parseHeader</span>(<span class="atom">header_data</span>):</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">        <span class="atom">header_list</span> = [<span class="atom">header_data</span>[<span class="atom">i</span>:<span class="atom">i</span>&#43;<span class="number" style="color:rgb(222,147,95)">4</span>] <span class="atom">for</span> <span class="atom">i</span> <span class="atom">in</span> <span class="atom">range</span>(<span class="number" style="color:rgb(222,147,95)">32</span>,<span class="number" style="color:rgb(222,147,95)">112</span>,<span class="number" style="color:rgb(222,147,95)">4</span>)]</span>
<span class="line" style="height:20px">        <span class="atom">header_list</span>.<span class="atom">insert</span>(<span class="number" style="color:rgb(222,147,95)">0</span>,<span class="atom">header_data</span>[<span class="number" style="color:rgb(222,147,95)">12</span>:<span class="number" style="color:rgb(222,147,95)">32</span>])</span>
<span class="line" style="height:20px">        <span class="atom">header_list</span>.<span class="atom">insert</span>(<span class="number" style="color:rgb(222,147,95)">0</span>,<span class="atom">header_data</span>[<span class="number" style="color:rgb(222,147,95)">8</span>:<span class="number" style="color:rgb(222,147,95)">12</span>])</span>
<span class="line" style="height:20px">        <span class="atom">header_list</span>.<span class="atom">insert</span>(<span class="number" style="color:rgb(222,147,95)">0</span>,<span class="atom">header_data</span>[:<span class="number" style="color:rgb(222,147,95)">8</span>])</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'magic'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'8s'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">0</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="atom">if</span> <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'magic'</span>] != <span class="string" style="color:rgb(181,189,104)">&quot;dex\n035\0&quot;</span>:</span>
<span class="line" style="height:20px">            <span class="atom">print</span> <span class="string" style="color:rgb(181,189,104)">'invalid dex file.'</span></span>
<span class="line" style="height:20px">            <span class="atom">exit</span>(-<span class="number" style="color:rgb(222,147,95)">1</span>)</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'checkSum'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">1</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'signature'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'20s'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">2</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'fileSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">3</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'headerSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">4</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'endianTag'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">5</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'linkSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">6</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'linkOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">7</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'mapOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">8</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'stringIdsSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">9</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'stringIdsOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">10</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'typeIdsSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">11</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'typeIdsOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">12</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'protoIdsSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">13</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'protoIdsOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">14</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'fieldIdsSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">15</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'fieldIdsOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">16</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'methodIdsSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">17</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'methodIdsOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">18</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'classDefsSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">19</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'classDefsOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">20</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'dataSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">21</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string" style="color:rgb(181,189,104)">'dataOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string" style="color:rgb(181,189,104)">'I'</span>,<span class="atom">header_list</span>[<span class="number" style="color:rgb(222,147,95)">22</span>])[<span class="number" style="color:rgb(222,147,95)">0</span>]</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px"><span class="atom">if</span> <span class="name">__name__</span> == <span class="string" style="color:rgb(181,189,104)">'__main__'</span>:</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">    <span class="atom">with</span> <span class="atom">open</span>(<span class="string" style="color:rgb(181,189,104)">&quot;classes.dex&quot;</span>, <span class="string" style="color:rgb(181,189,104)">'rb'</span>) <span class="atom">as</span> <span class="atom">f</span>:</span>
<span class="line" style="height:20px">        <span class="atom">parseHeader</span>(<span class="atom">f</span>.<span class="atom">read</span>(<span class="number" style="color:rgb(222,147,95)">0x70</span>))</span>
<span class="line" style="height:20px">        <span class="atom">for</span> <span class="atom">x</span> <span class="atom">in</span> <span class="name">DexStruct</span>.<span class="name">DexHeader</span>:</span>
<span class="line" style="height:20px">            <span class="atom">print</span> <span class="atom">x</span>, <span class="atom">hex</span>(<span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="atom">x</span>])</span>
</pre>
</td>
</tr>
</tbody>
</table>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<h3 id="Reference" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
Reference</h3>
<p style="margin-top:0px; margin-bottom:25px"><a target="_blank" href="http://www.ituring.com.cn/book/1131" rel="external" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent">《Android
 软件安全与逆向分析》</a></p>
<p style="margin-top:0px; margin-bottom:25px"><a target="_blank" href="http://www.blogfshare.com/dex-format.html" rel="external" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent">Android安全–Dex文件&#26684;式详解</a></p>
</div>
<div class="post-tags" style="margin-top:40px; text-align:center"><a target="_blank" href="http://kiya-z.github.io/tags/Android-%E5%AE%89%E5%85%A8/" rel="tag" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; display:inline-block; margin-right:10px; font-size:13px; background-color:transparent">#Android
 安全</a>&nbsp;<a target="_blank" href="http://kiya-z.github.io/tags/dex/" rel="tag" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; display:inline-block; margin-right:10px; font-size:13px; background-color:transparent">#dex</a></div>
<br>
<p></p>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何运行 .smali 程序]]></title>
    <link href="http://hanks.xyz/2015/11/17/%E5%A6%82%E4%BD%95%E8%BF%90%E8%A1%8C_.smali_%E7%A8%8B%E5%BA%8F/"/>
    <id>http://hanks.xyz/2015/11/17/如何运行_.smali_程序/</id>
    <published>2015-11-17T03:53:00.000Z</published>
    <updated>2015-12-04T17:20:04.328Z</updated>
    <content type="html"><![CDATA[
<h1 class="post-title" style="margin:0px; padding:0px; line-height:1; text-align:center; word-break:break-word">
<span style="font-size:18px">原文:&nbsp;<a target="_blank" href="http://kiya-z.github.io/2015/11/16/how-to-run-file-ended-with-smali/">http://kiya-z.github.io/2015/11/16/how-to-run-file-ended-with-smali/</a></span></h1>
<h1 class="post-title" style="margin:0px; padding:0px; line-height:1; text-align:center; word-break:break-word">
<span style="font-size:18px"><br>
</span></h1>
<h1 class="post-title" style="font-size:26px; margin:0px; padding:0px; line-height:1; text-align:center; word-break:break-word">
<br>
</h1>
<h1 class="post-title" style="font-size:26px; margin:0px; padding:0px; line-height:1; text-align:center; word-break:break-word">
<br>
如何运行 .smali 程序</h1>
<div class="post-meta" style="font-size:12px; margin:3px 0px 60px; color:rgb(153,153,153); text-align:center">
<span class="post-time">发表于&nbsp;2015-11-16&nbsp;</span><span class="post-category">&nbsp; | &nbsp; 分类于&nbsp;<span><a target="_blank" href="http://kiya-z.github.io/categories/Android/" rel="index" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent"><span>Android</span>&nbsp;</a></span></span><span class="post-comments-count">&nbsp;
 | &nbsp;&nbsp;<a target="_blank" href="http://kiya-z.github.io/2015/11/16/how-to-run-file-ended-with-smali/#comments" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent"><span class="post-comments-count ds-thread-count">暂无评论</span>&nbsp;</a></span><span id="busuanzi_container_page_pv" style="display:inline">&nbsp;
 | &nbsp;&nbsp;<span id="busuanzi_value_page_pv">3</span>&nbsp; Hits</span></div>
<div class="post-body" style="text-align:justify; color:rgb(85,85,85); font-family:Lato,'PingFang SC','Microsoft YaHei',sans-serif; font-size:16px; line-height:32px">
<span></span>
<h2 id="准备_smali_程序" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:20px">
准备 smali 程序</h2>
<a target="_blank" id="more" style="border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent"></a>
<p style="margin-top:0px; margin-bottom:25px">从 《Android 软件安全与逆向》书中抠出一段，起名为&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">FirstSmali.smali</code>&nbsp;：<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
<span class="line" style="height:20px">4</span>
<span class="line" style="height:20px">5</span>
<span class="line" style="height:20px">6</span>
<span class="line" style="height:20px">7</span>
<span class="line" style="height:20px">8</span>
<span class="line" style="height:20px">9</span>
<span class="line" style="height:20px">10</span>
<span class="line" style="height:20px">11</span>
<span class="line" style="height:20px">12</span>
<span class="line" style="height:20px">13</span>
<span class="line" style="height:20px">14</span>
<span class="line" style="height:20px">15</span>
<span class="line" style="height:20px">16</span>
<span class="line" style="height:20px">17</span>
<span class="line" style="height:20px">18</span>
<span class="line" style="height:20px">19</span>
<span class="line" style="height:20px">20</span>
<span class="line" style="height:20px">21</span>
<span class="line" style="height:20px">22</span>
<span class="line" style="height:20px">23</span>
<span class="line" style="height:20px">24</span>
<span class="line" style="height:20px">25</span>
<span class="line" style="height:20px">26</span>
<span class="line" style="height:20px">27</span>
<span class="line" style="height:20px">28</span>
<span class="line" style="height:20px">29</span>
<span class="line" style="height:20px">30</span>
<span class="line" style="height:20px">31</span>
<span class="line" style="height:20px">32</span>
<span class="line" style="height:20px">33</span>
<span class="line" style="height:20px">34</span>
<span class="line" style="height:20px">35</span>
<span class="line" style="height:20px">36</span>
<span class="line" style="height:20px">37</span>
<span class="line" style="height:20px">38</span>
<span class="line" style="height:20px">39</span>
<span class="line" style="height:20px">40</span>
<span class="line" style="height:20px">41</span>
<span class="line" style="height:20px">42</span>
<span class="line" style="height:20px">43</span>
<span class="line" style="height:20px">44</span>
<span class="line" style="height:20px">45</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="keyword" style="color:rgb(178,148,187)">.class</span><span class="keyword" style="color:rgb(178,148,187)"> public</span> <span class="class">LFirstSmali;</span>  <span class="comment" style="color:rgb(150,152,150)"># 定义类名</span></span>
<span class="line" style="height:20px"><span class="keyword" style="color:rgb(178,148,187)">.super</span> <span class="class">Ljava/lang/Object;</span>   <span class="comment" style="color:rgb(150,152,150)"># 定义父类</span></span>
<span class="line" style="height:20px"><span class="keyword" style="color:rgb(178,148,187)">.method</span><span class="keyword" style="color:rgb(178,148,187)"> public</span><span class="keyword" style="color:rgb(178,148,187)"> static</span><span class="function" style="color:rgb(129,162,190)"> main(</span><span class="keyword" style="color:rgb(178,148,187)">[</span><span class="class">Ljava/lang/String;</span><span class="function" style="color:rgb(129,162,190)">)</span>V     <span class="comment" style="color:rgb(150,152,150)"># 声明静态方法</span></span>
<span class="line" style="height:20px"><span class="keyword" style="color:rgb(178,148,187)">    .registers</span> 4     <span class="comment" style="color:rgb(150,152,150)"># 寄存器</span></span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#.parameter      # 参数</span></span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px"><span class="keyword" style="color:rgb(178,148,187)">    .prologue</span>      <span class="comment" style="color:rgb(150,152,150)"># 代码起始</span></span>
<span class="line" style="height:20px">   <span class="instruction"> nop</span>
<span class="line" style="height:20px"></span>   <span class="instruction"> nop</span>
<span class="line" style="height:20px"></span>   <span class="instruction"> nop</span>
<span class="line" style="height:20px"></span>   <span class="instruction"> nop</span>
<span class="line" style="height:20px"></span>    <span class="comment" style="color:rgb(150,152,150)">#数据定义</span></span>
<span class="line" style="height:20px">   <span class="instruction"> const/16 </span><span class="variable" style="color:rgb(204,102,102)">v0</span>,0x8</span>
<span class="line" style="height:20px">   <span class="instruction"> const/4 </span><span class="variable" style="color:rgb(204,102,102)">v1</span>,0x5</span>
<span class="line" style="height:20px">   <span class="instruction"> const/4 </span><span class="variable" style="color:rgb(204,102,102)">v2</span>,0x3</span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#数据操作</span></span>
<span class="line" style="height:20px">   <span class="instruction"> move </span><span class="variable" style="color:rgb(204,102,102)">v1</span>,<span class="variable" style="color:rgb(204,102,102)">v2</span></span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#数组操作</span></span>
<span class="line" style="height:20px">   <span class="instruction"> new-array </span><span class="variable" style="color:rgb(204,102,102)">v0</span>,<span class="variable" style="color:rgb(204,102,102)">v0</span>,<span class="keyword" style="color:rgb(178,148,187)">[</span>I</span>
<span class="line" style="height:20px">   <span class="instruction"> array-length </span><span class="variable" style="color:rgb(204,102,102)">v1</span>,<span class="variable" style="color:rgb(204,102,102)">v0</span></span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#实例操作</span></span>
<span class="line" style="height:20px">   <span class="instruction"> new-instance </span><span class="variable" style="color:rgb(204,102,102)">v1</span>,<span class="class">Ljava/lang/StringBuilder;</span></span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#方法调用</span></span>
<span class="line" style="height:20px">   <span class="instruction"> invoke-direct </span>{<span class="variable" style="color:rgb(204,102,102)">v1</span>},<span class="class">Ljava/lang/StringBuilder;</span><span class="function" style="color:rgb(129,162,190)">-&gt;&lt;init&gt;(</span><span class="function" style="color:rgb(129,162,190)">)</span>V</span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#跳转</span></span>
<span class="line" style="height:20px">   <span class="instruction"> if-nez </span><span class="variable" style="color:rgb(204,102,102)">v0</span>,<span class="keyword" style="color:rgb(178,148,187)"> :cond_0</span></span>
<span class="line" style="height:20px">   <span class="instruction"> goto </span>:goto_0</span>
<span class="line" style="height:20px">   <span class="keyword" style="color:rgb(178,148,187)"> :cond_0</span></span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#数据转换</span></span>
<span class="line" style="height:20px">   <span class="instruction"> int-to-float </span><span class="variable" style="color:rgb(204,102,102)">v2</span>,<span class="variable" style="color:rgb(204,102,102)">v2</span></span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#运算</span></span>
<span class="line" style="height:20px">   <span class="instruction"> add-float </span><span class="variable" style="color:rgb(204,102,102)">v2</span>,<span class="variable" style="color:rgb(204,102,102)">v2</span>,<span class="variable" style="color:rgb(204,102,102)">v2</span></span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#比较</span></span>
<span class="line" style="height:20px">   <span class="instruction"> cmpl-float </span><span class="variable" style="color:rgb(204,102,102)">v0</span>,<span class="variable" style="color:rgb(204,102,102)">v2</span>,<span class="variable" style="color:rgb(204,102,102)">v2</span></span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#字段操作</span></span>
<span class="line" style="height:20px">   <span class="instruction"> sget-object </span><span class="variable" style="color:rgb(204,102,102)">v0</span>,<span class="class">Ljava/lang/System;</span>-&gt;out:<span class="class">Ljava/io/PrintStream;</span></span>
<span class="line" style="height:20px">   <span class="instruction"> const-string </span><span class="variable" style="color:rgb(204,102,102)">v1</span>,<span class="string" style="color:rgb(181,189,104)">&quot;Hello Smali&quot;</span></span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#调用</span></span>
<span class="line" style="height:20px">   <span class="instruction"> invoke-virtual </span>{<span class="variable" style="color:rgb(204,102,102)">v0</span>,<span class="variable" style="color:rgb(204,102,102)">v1</span>}, <span class="class">Ljava/io/PrintStream;</span><span class="function" style="color:rgb(129,162,190)">-&gt;println(</span><span class="class">Ljava/lang/String;</span><span class="function" style="color:rgb(129,162,190)">)</span>V</span>
<span class="line" style="height:20px">    <span class="comment" style="color:rgb(150,152,150)">#返回</span></span>
<span class="line" style="height:20px">   <span class="keyword" style="color:rgb(178,148,187)"> :goto_0</span></span>
<span class="line" style="height:20px">   <span class="instruction"> return-void</span>
<span class="line" style="height:20px"></span>   <span class="instruction"> return-void </span>    <span class="comment" style="color:rgb(150,152,150)"># 返回空</span><span class="keyword" style="color:rgb(178,148,187)"></span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">.end method</span></span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<h2 id="编译_smali_程序" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:20px">
编译 smali 程序</h2>
<p style="margin-top:0px; margin-bottom:25px">将&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">.smali</code>&nbsp;文件编译为&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">.dex</code>&nbsp;文件
 :<br>
<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">java -jar smali.jar -o FirstSmali.dex FirstSmali.smali</code></p>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<h2 id="执行_smali_程序" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:20px">
执行 smali 程序</h2>
<p style="margin-top:0px; margin-bottom:25px">打开&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">adb</code>&nbsp;环境，连上手机，在命令行下<br>
执行&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">adb devices</code>&nbsp;查看手机是否连接成功；<br>
执行&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">adb push FirstSmali.dex /sdcard/</code>&nbsp;将 dex 文件推到手机上；<br>
执行如下命令就 OK 了。<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px">adb shell dalvikvm -cp /sdcard/FirstSmali<span class="class">.dex</span> FirstSmali</span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<h3 id="备注" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
备注</h3>
<p style="margin-top:0px; margin-bottom:25px"><code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">-cp</code>&nbsp;是&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">classpath</code>&nbsp;的意思，<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">dalvikvm</code>&nbsp;命令第一个参数指定类路径，第二个指定类名。</p>
<p style="margin-top:0px; margin-bottom:25px">另外，如果想要 push 到如&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">data/local</code>&nbsp;之类的目录下是没有权限的，可以先
 push 到 sdcard，进入&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">adb shell</code>&nbsp;执行&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">su</code>&nbsp;获得
 root 权限之后，就可以复制到&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">data</code>&nbsp;目录了。</p>
<p style="margin-top:0px; margin-bottom:25px">本文程序只有一个 dex 文件，多个的话需要打包为&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">zip</code>&nbsp;，将此 zip
 文件作为&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">dalvikvm</code>&nbsp;的第一个参数便可。</p>
</div>
<div class="post-tags" style="margin-top:40px; text-align:center"><a target="_blank" href="http://kiya-z.github.io/tags/Android-%E5%AE%89%E5%85%A8/" rel="tag" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; display:inline-block; margin-right:10px; font-size:13px; background-color:transparent">#Android
 安全</a>&nbsp;<a target="_blank" href="http://kiya-z.github.io/tags/smali/" rel="tag" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; display:inline-block; margin-right:10px; font-size:13px; background-color:transparent">#smali</a>&nbsp;<a target="_blank" href="http://kiya-z.github.io/tags/%E5%8F%8D%E7%BC%96%E8%AF%91/" rel="tag" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; display:inline-block; margin-right:10px; font-size:13px; background-color:transparent">#反编译</a></div>
<div class="post-nav" style="overflow:hidden; margin-top:60px; padding:10px; white-space:nowrap; border-top-width:1px; border-top-style:solid; border-top-color:rgb(238,238,238)">
<h1 class="post-title" style="color:rgb(85,85,85); font-family:Lato,'PingFang SC','Microsoft YaHei',sans-serif; margin:0px; padding:0px; line-height:1; text-align:center; word-break:break-word">
<span style="font-size:18px">原文:&nbsp;<a target="_blank" href="http://kiya-z.github.io/2015/11/16/how-to-run-file-ended-with-smali/">http://kiya-z.github.io/2015/11/16/how-to-run-file-ended-with-smali/</a></span></h1>
<div><br>
</div>
<div><br>
</div>
<div><br>
</div>
<div class="post-nav-next post-nav-item" style="display:inline-block; width:440px; white-space:normal">
<a target="_blank" href="http://kiya-z.github.io/2015/11/12/check-signature-for-avoiding-fake-app-java-level-check/" rel="next" title="校验数字签名防止 apk 被二次打包 - Java层校验（大众点评为例）" style="color:rgb(85,85,85); text-decoration:none; border-bottom-style:none; word-wrap:break-word; position:relative; display:inline-block; line-height:25px; font-size:14px; background-color:transparent"><span class="fa fa-chevron-left" style=""></span></a></div>
</div>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[校验数字签名防止 apk 被二次打包 - Java层校验（大众点评为例）]]></title>
    <link href="http://hanks.xyz/2015/11/17/%E6%A0%A1%E9%AA%8C%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E9%98%B2%E6%AD%A2_apk_%E8%A2%AB%E4%BA%8C%E6%AC%A1%E6%89%93%E5%8C%85_-_Java%E5%B1%82%E6%A0%A1%E9%AA%8C%EF%BC%88%E5%A4%A7%E4%BC%97%E7%82%B9%E8%AF%84%E4%B8%BA%E4%BE%8B%EF%BC%89/"/>
    <id>http://hanks.xyz/2015/11/17/校验数字签名防止_apk_被二次打包_-_Java层校验（大众点评为例）/</id>
    <published>2015-11-17T03:51:00.000Z</published>
    <updated>2015-12-04T17:20:04.332Z</updated>
    <content type="html"><![CDATA[
<div class="post-body" style="text-align:justify; color:rgb(85,85,85); font-family:Lato,'PingFang SC','Microsoft YaHei',sans-serif; font-size:16px; line-height:32px">
<span></span>
<blockquote style="margin:0px; padding:0px 15px; color:rgb(102,102,102); border-left-width:4px; border-left-style:solid; border-left-color:rgb(221,221,221)">
<p style="margin-top:0px; margin-bottom:25px">原文链接: &nbsp;http://kiya-z.github.io/2015/11/12/check-signature-for-avoiding-fake-app-java-level-check/<br>
测试环境<br>
Ubuntu 14.04<br>
Lenovo Android 5.1<br>
Lenovo Android 4.2.2<br>
Android Studio</p>
</blockquote>
<a target="_blank" id="more" style="border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent"></a>
<h2 id="普及签名包名知识" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:20px">
普及签名包名知识</h2>
<p style="margin-top:0px; margin-bottom:25px">包名 (Package Name) 相当于「应用的身份证」，是系统用来<strong>区分不同应用</strong>的字段，重复的包名会被认为是同一款应用。<br>
签名文件相当于「开发者的身份证」，目的是为了<strong>检验应用是否被人更改过</strong>（应用必须签名过才能正常安装）。</p>
<p style="margin-top:0px; margin-bottom:25px">包名相同签名相同时，会发生 替换安装 / 应用升级；<br>
包名相同签名不同时，安装失败；<br>
包名不同签名相同时，相当于同一开发者的两个应用，互相不冲突。</p>
<blockquote style="margin:0px; padding:0px 15px; color:rgb(102,102,102); border-left-width:4px; border-left-style:solid; border-left-color:rgb(221,221,221)">
<p style="margin-top:0px; margin-bottom:25px">签名的注意事项<br>
所有的Android应用都必须有数字签名，没有不存在数字签名的应用，包括模拟器上运行的。Android系统不会安装没有数字证书的应用。<br>
签名的数字证书不需要权威机构来认证，是开发者自己产生的数字证书，即所谓的自签名。<br>
正式发布一个Android应用时，必须使用一个合适的私钥生成的数字证书来给程序签名，不能使用ADT插件或者ANT工具生成的调试证书来发布。<br>
Android将数字证书用来标识应用程序的作者和在应用程序之间建立信任关系，而不是用来决定最终用户可以安装哪些应用程序。</p>
</blockquote>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<h2 id="为大众点评换签名" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:20px">
为大众点评换签名</h2>
<p style="margin-top:0px; margin-bottom:25px">按照常规步骤使用&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">apktool</code>&nbsp;&#43;&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">signapk</code>&nbsp;反编译、编译、签名并安装到手机上（没有修改任何代码），打开
 app 选择城市后界面如下图并很快退出：</p>
<p style="margin-top:0px; margin-bottom:25px"><a target="_blank" href="http://7xo976.com1.z0.glb.clouddn.com/images/github-io/Android/dianping-crash.jpeg-style1" class="fancybox" rel="group" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent"><img src="http://7xo976.com1.z0.glb.clouddn.com/images/github-io/Android/dianping-crash.jpeg-style1" alt="dianping-crash" style="border:1px solid rgb(221,221,221); display:block!important; margin:0px auto; max-width:100%; height:auto; padding:3px"></a></p>
<p style="margin-top:0px; margin-bottom:25px">说明点评对签名进行了校验 。</p>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<h2 id="分析校验方法" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:20px">
分析校验方法</h2>
<h3 id="怎么退出的？" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
怎么退出的？</h3>
<p style="margin-top:0px; margin-bottom:25px">打开 apktool 反编译得到的文件夹下的&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">AndroidManifest.xml</code>&nbsp;，得到程序包名：<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">com.dianping.v1</code>&nbsp;。<br>
清除大众点评的数据，打开 as，连上手机，log 的过滤条件设为 com.dianping ，在选择城市之前清一下 log ，在 log 里搜索 “die”，比较明显的是有四处：</p>
<p style="margin-top:0px; margin-bottom:25px">进程死亡：<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px">Process com<span class="class">.dianping</span><span class="class">.v1</span> (pid <span class="number" style="color:rgb(222,147,95)">19182</span>) has died</span>
<span class="line" style="height:20px">Process com<span class="class">.dianping</span><span class="class">.v1</span> (pid <span class="number" style="color:rgb(222,147,95)">19586</span>) has died</span>
<span class="line" style="height:20px">Process com<span class="class">.dianping</span><span class="class">.v1</span> (pid <span class="number" style="color:rgb(222,147,95)">19650</span>) has died</span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<p style="margin-top:0px; margin-bottom:25px">app 死亡：<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px">Force removing ActivityRecord{<span class="number" style="color:rgb(222,147,95)">266</span>e5efd u0 com.dianping.v1/.NovaMainActivity t14010}: app died, no saved <span class="keyword" style="color:rgb(178,148,187)">state</span></span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<p style="margin-top:0px; margin-bottom:25px">其中前两个进程死亡之后都有开启进程的操作，说明第一次校验失败后重试了两次：<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="string" style="color:rgb(181,189,104)">startProcess:</span> name=com.dianping.v1 app=<span class="literal" style="color:rgb(222,147,95)">null</span> knownToBeDead=<span class="literal" style="color:rgb(222,147,95)">true</span> thread=<span class="literal" style="color:rgb(222,147,95)">null</span> pid=-<span class="number" style="color:rgb(222,147,95)">1</span></span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="string" style="color:rgb(181,189,104)">startProcess:</span> name=com.dianping.v1 app=<span class="literal" style="color:rgb(222,147,95)">null</span> knownToBeDead=<span class="literal" style="color:rgb(222,147,95)">true</span> thread=<span class="literal" style="color:rgb(222,147,95)">null</span> pid=-<span class="number" style="color:rgb(222,147,95)">1</span></span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px">最后一个直接杀死了 app，没有再继续创建进程。</p>
<p style="margin-top:0px; margin-bottom:25px">在进程结束之前，发生错误的调用记录：<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
<span class="line" style="height:20px">4</span>
<span class="line" style="height:20px">5</span>
<span class="line" style="height:20px">6</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="number" style="color:rgb(222,147,95)">9586</span>-<span class="number" style="color:rgb(222,147,95)">19586</span>/? D/AccessibilityManager:     at com.dianping.base.app.NovaActivity.setContentView(NovaActivity.java:<span class="number" style="color:rgb(222,147,95)">722</span>)</span>
<span class="line" style="height:20px"> <span class="number" style="color:rgb(222,147,95)">9586</span>-<span class="number" style="color:rgb(222,147,95)">19586</span>/? D/AccessibilityManager:     at com.dianping.main.guide.MainActivity.setOnContentView(MainActivity.java:<span class="number" style="color:rgb(222,147,95)">339</span>)</span>
<span class="line" style="height:20px"> <span class="number" style="color:rgb(222,147,95)">9586</span>-<span class="number" style="color:rgb(222,147,95)">19586</span>/? D/AccessibilityManager:     at com.dianping.base.basic.FragmentTabActivity.onCreate(FragmentTabActivity.java:<span class="number" style="color:rgb(222,147,95)">51</span>)</span>
<span class="line" style="height:20px"> <span class="number" style="color:rgb(222,147,95)">9586</span>-<span class="number" style="color:rgb(222,147,95)">19586</span>/? D/AccessibilityManager:     at com.dianping.base.widget.NovaFragmentTabActivity.onCreate(NovaFragmentTabActivity.java:<span class="number" style="color:rgb(222,147,95)">26</span>)</span>
<span class="line" style="height:20px"> <span class="number" style="color:rgb(222,147,95)">9586</span>-<span class="number" style="color:rgb(222,147,95)">19586</span>/? D/AccessibilityManager:     at com.dianping.main.guide.MainActivity.onCreate(MainActivity.java:<span class="number" style="color:rgb(222,147,95)">169</span>)</span>
<span class="line" style="height:20px"> <span class="number" style="color:rgb(222,147,95)">9586</span>-<span class="number" style="color:rgb(222,147,95)">19586</span>/? D/AccessibilityManager:     at com.dianping.v1.NovaMainActivity.onCreate(NovaMainActivity.java:<span class="number" style="color:rgb(222,147,95)">15</span>)</span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<h3 id="代码探索" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
代码探索</h3>
<p style="margin-top:0px; margin-bottom:25px">解压 apk 文件，发现有 3 个 dex 文件，先拿第一个下手，JD-GUI 打开发现代码没有混淆！</p>
<p style="margin-top:0px; margin-bottom:25px">调用记录中的文件从上往下过一遍，发现在&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">com.dianping.main.guide.MainActivity.onCreate()</code>&nbsp;方法中有校验签名的函数：<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="keyword" style="color:rgb(178,148,187)">if</span> <span class="comment" style="color:rgb(150,152,150)">(!checkSignature()</span>) {    </span>
<span class="line" style="height:20px">      Process.killProcess<span class="comment" style="color:rgb(150,152,150)">(Process.myPid()</span>);</span>
<span class="line" style="height:20px">    }</span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<p style="margin-top:0px; margin-bottom:25px"><code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">checkSignature</code>&nbsp;函数：<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
<span class="line" style="height:20px">4</span>
<span class="line" style="height:20px">5</span>
<span class="line" style="height:20px">6</span>
<span class="line" style="height:20px">7</span>
<span class="line" style="height:20px">8</span>
<span class="line" style="height:20px">9</span>
<span class="line" style="height:20px">10</span>
<span class="line" style="height:20px">11</span>
<span class="line" style="height:20px">12</span>
<span class="line" style="height:20px">13</span>
<span class="line" style="height:20px">14</span>
<span class="line" style="height:20px">15</span>
<span class="line" style="height:20px">16</span>
<span class="line" style="height:20px">17</span>
<span class="line" style="height:20px">18</span>
<span class="line" style="height:20px">19</span>
<span class="line" style="height:20px">20</span>
<span class="line" style="height:20px">21</span>
<span class="line" style="height:20px">22</span>
<span class="line" style="height:20px">23</span>
<span class="line" style="height:20px">24</span>
<span class="line" style="height:20px">25</span>
<span class="line" style="height:20px">26</span>
<span class="line" style="height:20px">27</span>
<span class="line" style="height:20px">28</span>
<span class="line" style="height:20px">29</span>
<span class="line" style="height:20px">30</span>
<span class="line" style="height:20px">31</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="function" style="color:rgb(129,162,190)"><span class="keyword" style="color:rgb(178,148,187)">private</span> boolean <span class="title" style="color:rgb(138,190,183)">checkSignature</span><span class="params" style="color:rgb(222,147,95)">()</span></span>
<span class="line" style="height:20px"></span>{</span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">try</span></span>
<span class="line" style="height:20px"> {</span>
<span class="line" style="height:20px">   Signature[] arrayOfSignature = getPackageManager().getPackageInfo(getPackageName(), <span class="number" style="color:rgb(222,147,95)">64</span>).signatures;     <span class="comment" style="color:rgb(150,152,150)">//获得签名数组</span></span>
<span class="line" style="height:20px">   <span class="keyword" style="color:rgb(178,148,187)">if</span> (arrayOfSignature != null)</span>
<span class="line" style="height:20px">   {</span>
<span class="line" style="height:20px">     <span class="keyword" style="color:rgb(178,148,187)">if</span> (arrayOfSignature.length == <span class="number" style="color:rgb(222,147,95)">0</span>) {</span>
<span class="line" style="height:20px">       <span class="keyword" style="color:rgb(178,148,187)">return</span> <span class="literal" style="color:rgb(222,147,95)">false</span>;</span>
<span class="line" style="height:20px">     }</span>
<span class="line" style="height:20px">     <span class="keyword" style="color:rgb(178,148,187)">int</span> j = arrayOfSignature.length;</span>
<span class="line" style="height:20px">     <span class="keyword" style="color:rgb(178,148,187)">int</span> i = <span class="number" style="color:rgb(222,147,95)">0</span>;</span>
<span class="line" style="height:20px">     <span class="keyword" style="color:rgb(178,148,187)">while</span> (i &lt; j)   <span class="comment" style="color:rgb(150,152,150)">//如果数组中的某个元素&#20540;与 'ac6fc3fe' 相等，返回校验成功；如果直到结束也没有相等的元素，返回失败</span></span>
<span class="line" style="height:20px">     {               <span class="comment" style="color:rgb(150,152,150)">//只比较一个特定的元素，可能也是为了不把整个签名泄露出来，同时也做到了一定程度的校验</span></span>
<span class="line" style="height:20px">       String str = Integer.toHexString(arrayOfSignature[i].toCharsString().hashCode());</span>
<span class="line" style="height:20px">       <span class="keyword" style="color:rgb(178,148,187)">if</span> (!<span class="string" style="color:rgb(181,189,104)">&quot;ac6fc3fe&quot;</span>.equalsIgnoreCase(str))   </span>
<span class="line" style="height:20px">       {</span>
<span class="line" style="height:20px">         boolean <span class="keyword" style="color:rgb(178,148,187)">bool</span> = <span class="string" style="color:rgb(181,189,104)">&quot;600cf559&quot;</span>.equalsIgnoreCase(str);       <span class="comment" style="color:rgb(150,152,150)">//这个比较好像没用</span></span>
<span class="line" style="height:20px">         <span class="keyword" style="color:rgb(178,148,187)">if</span> (!<span class="keyword" style="color:rgb(178,148,187)">bool</span>) {}</span>
<span class="line" style="height:20px">       }</span>
<span class="line" style="height:20px">       <span class="keyword" style="color:rgb(178,148,187)">else</span></span>
<span class="line" style="height:20px">       {</span>
<span class="line" style="height:20px">         <span class="keyword" style="color:rgb(178,148,187)">return</span> <span class="literal" style="color:rgb(222,147,95)">true</span>;</span>
<span class="line" style="height:20px">       }</span>
<span class="line" style="height:20px">       i &#43;= <span class="number" style="color:rgb(222,147,95)">1</span>;</span>
<span class="line" style="height:20px">     }</span>
<span class="line" style="height:20px">   }</span>
<span class="line" style="height:20px">   <span class="keyword" style="color:rgb(178,148,187)">return</span> <span class="literal" style="color:rgb(222,147,95)">false</span>;</span>
<span class="line" style="height:20px"> }</span>
<span class="line" style="height:20px"> <span class="keyword" style="color:rgb(178,148,187)">catch</span> (Exception localException) {}</span>
<span class="line" style="height:20px">}</span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<p style="margin-top:0px; margin-bottom:25px">相关 API：</p>
<p style="margin-top:0px; margin-bottom:25px"><code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">public Signature[] signatures</code><br>
Array of all signatures read from the package file. This is only filled in if the flag GET_SIGNATURES was set.</p>
<p style="margin-top:0px; margin-bottom:25px"><code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">public static final int GET_SIGNATURES</code><br>
PackageInfo flag: return information about the signatures included in the package.<br>
Constant Value: 64 (0x00000040)</p>
<p style="margin-top:0px; margin-bottom:25px"><code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">public boolean equalsIgnoreCase (String string)</code><br>
Compares the given string to this string ignoring case.<br>
The strings are compared one char at a time.</p>
<h3 id="流程修改" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
流程修改</h3>
<p style="margin-top:0px; margin-bottom:25px">在&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">smali/com/dianping/main/guide/MainActivity.smali</code>&nbsp;中搜索&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">ac6fc3fe</code>&nbsp;:<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
<span class="line" style="height:20px">4</span>
<span class="line" style="height:20px">5</span>
<span class="line" style="height:20px">6</span>
<span class="line" style="height:20px">7</span>
<span class="line" style="height:20px">8</span>
<span class="line" style="height:20px">9</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="keyword" style="color:rgb(178,148,187)">.line</span> 358</span>
<span class="line" style="height:20px"><span class="keyword" style="color:rgb(178,148,187)">    .local</span> <span class="variable" style="color:rgb(204,102,102)">v4</span>, <span class="string" style="color:rgb(181,189,104)">&quot;myHash&quot;</span>:<span class="class">Ljava/lang/String;</span></span>
<span class="line" style="height:20px">   <span class="instruction"> const-string </span><span class="variable" style="color:rgb(204,102,102)">v9</span>, <span class="string" style="color:rgb(181,189,104)">&quot;ac6fc3fe&quot;</span></span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">   <span class="instruction"> invoke-virtual </span>{<span class="variable" style="color:rgb(204,102,102)">v9</span>, <span class="variable" style="color:rgb(204,102,102)">v4</span>}, <span class="class">Ljava/lang/String;</span><span class="function" style="color:rgb(129,162,190)">-&gt;equalsIgnoreCase(</span><span class="class">Ljava/lang/String;</span><span class="function" style="color:rgb(129,162,190)">)</span>Z</span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">   <span class="instruction"> move-result </span><span class="variable" style="color:rgb(204,102,102)">v9</span></span>
<span class="line" style="height:20px"></span>
<span class="line" style="height:20px">   <span class="instruction"> if-nez </span><span class="variable" style="color:rgb(204,102,102)">v9</span>,<span class="keyword" style="color:rgb(178,148,187)"> :cond_2</span>     <span class="function" style="color:rgb(129,162,190)"> //if(</span>!equal(..<span class="function" style="color:rgb(129,162,190)">)</span><span class="function" style="color:rgb(129,162,190)">)</span><span class="instruction"> return </span>1</span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<p style="margin-top:0px; margin-bottom:25px">找到&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">con_2</code>&nbsp;的定义:<br>
</p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
<span class="line" style="height:20px">3</span>
<span class="line" style="height:20px">4</span>
<span class="line" style="height:20px">5</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="keyword" style="color:rgb(178,148,187)">.line</span> 359<span class="keyword" style="color:rgb(178,148,187)"></span>
<span class="line" style="height:20px">:cond_2</span><span class="instruction"></span>
<span class="line" style="height:20px">const/4 </span><span class="variable" style="color:rgb(204,102,102)">v8</span>, 0x1</span>
<span class="line" style="height:20px"><span class="instruction"></span>
<span class="line" style="height:20px">goto </span>:goto_0</span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px"></p>
<table style="border-collapse:collapse; border-spacing:0px; margin:0px; width:auto; border:none; font-size:14px">
<tbody>
<tr style="background-color:rgb(249,249,249)">
<td class="gutter" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px 20px 1px 1px; color:rgb(102,102,102); line-height:1.6; border:none; text-align:right; background:rgb(29,31,33)"><span class="line" style="height:20px">1</span>
<span class="line" style="height:20px">2</span>
</pre>
</td>
<td class="code" style="padding:0px; vertical-align:middle; border:none">
<pre style="overflow:auto; font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:13px; margin-top:0px; margin-bottom:0px; padding:1px; color:rgb(197,200,198); line-height:1.6; border:none; background:rgb(29,31,33)"><span class="line" style="height:20px"><span class="symbol">:goto_0</span></span>
<span class="line" style="height:20px">    <span class="keyword" style="color:rgb(178,148,187)">return</span> v8</span>
</pre>
</td>
</tr>
</tbody>
</table>
<p style="margin-top:0px; margin-bottom:25px">所以把&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">if-nez v9, :cond_2</code>&nbsp;改成&nbsp;<code style="font-family:'Input Mono','PT Mono',Consolas,Monaco,Menlo,monospace; font-size:1em; word-break:break-all; padding:0px 0.3em; background:rgb(238,238,238)">if-eqz
 v9, :cond_2</code>&nbsp;就可以了，当然，修改方法还有很多。</p>
<h3 id="打包签名" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:18px">
打包签名</h3>
<p style="margin-top:0px; margin-bottom:25px">点评可以正常打开，正常登录，正常使用了。</p>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<blockquote style="margin:0px; padding:0px 15px; color:rgb(102,102,102); border-left-width:4px; border-left-style:solid; border-left-color:rgb(221,221,221)">
<p style="margin-top:0px; margin-bottom:25px">番外：<br>
而另一台手机 (Lenovo Android 4.2.2) 测试进程会不断重新创建。<br>
应用 crash 之后 App 对应的 Process 都被杀死，然后安排重启 Service，重新启动 Task 栈顶的 Activity 。</p>
</blockquote>
<hr style="height:3px; margin:40px 0px; border:none; background-color:rgb(221,221,221)">
<h2 id="Reference" style="margin:60px 0px 15px; padding:10px 0px 0px; line-height:1; font-size:20px">
Reference</h2>
<p style="margin-top:0px; margin-bottom:25px"><a target="_blank" href="http://www.ituring.com.cn/book/1131" rel="external" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent">Android软件安全与逆向分析</a><br>
<a target="_blank" href="http://www.wandoujia.com/blog/xibaibai-diary-3" rel="external" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent">洗白白手记：绕开
 Android 应用开发的那些「坑」</a><br>
<a target="_blank" href="http://www.oschina.net/question/163910_27292#tags_nav" rel="external" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; background-color:transparent">给
 Android 应用程序签名</a></p>
</div>
<div class="post-tags" style="margin-top:40px; text-align:center"><a target="_blank" href="http://kiya-z.github.io/tags/Android-%E5%AE%89%E5%85%A8/" rel="tag" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; display:inline-block; margin-right:10px; font-size:13px; background-color:transparent">#Android
 安全</a>&nbsp;<a target="_blank" href="http://kiya-z.github.io/tags/%E5%8F%8D%E7%BC%96%E8%AF%91/" rel="tag" style="color:rgb(85,85,85); text-decoration:none; border-bottom-width:1px; border-bottom-style:solid; border-bottom-color:rgb(153,153,153); word-wrap:break-word; display:inline-block; margin-right:10px; font-size:13px; background-color:transparent">#反编译</a></div>
<div class="post-tags" style="margin-top:40px; text-align:center"><span style="color:rgb(102,102,102); font-family:Lato,'PingFang SC','Microsoft YaHei',sans-serif; font-size:16px; line-height:32px; text-align:justify">原文链接:
<a target="_blank" href="http://kiya-z.github.io/2015/11/12/check-signature-for-avoiding-fake-app-java-level-check/">
&nbsp;</a></span><span style="color:rgb(102,102,102); font-family:Lato,'PingFang SC','Microsoft YaHei',sans-serif; font-size:16px; line-height:32px; text-align:justify"><a target="_blank" href="http://kiya-z.github.io/2015/11/12/check-signature-for-avoiding-fake-app-java-level-check/">http://kiya-z.github.io/2015/11/12/check-signature-for-avoiding-fake-app-java-level-check/</a></span><br>
</div>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[抓包工具整理]]></title>
    <link href="http://hanks.xyz/2015/11/02/capture/"/>
    <id>http://hanks.xyz/2015/11/02/capture/</id>
    <published>2015-11-02T08:36:49.000Z</published>
    <updated>2015-12-02T09:29:32.138Z</updated>
    <content type="html"><![CDATA[<p><a href="https://github.com/hanks-zyh/capturedata" target="_blank" rel="external">github 地址</a></p>
<blockquote>
<p>抓包工具整理</p>
</blockquote>
<h1 id="抓包工具_–_Charles">抓包工具 – Charles</h1><p>基于Java 跨平台： Linux , Mac OS X, Windows<br><a href="https://www.charlesproxy.com/" target="_blank" rel="external">官网</a></p>
<blockquote>
<p>Charles is an HTTP proxy / HTTP monitor / Reverse Proxy that enables a developer to view all of the HTTP and SSL / HTTPS traffic between their machine and the Internet. This includes requests, responses and the HTTP headers (which contain the cookies and caching information).</p>
</blockquote>
<p><img src="https://www.charlesproxy.com/assets/img/sm/23/image/mac_screen_321.png?k=f28bf8eff3" alt=""></p>
<hr>
<a id="more"></a>
<p><strong>以下为Linux 平台</strong></p>
<h2 id="安装">安装</h2><p><a href="https://www.charlesproxy.com/latest-release/download.do" target="_blank" rel="external">下载 charles-proxy-3.11.2.tar.gz</a></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># 解压</span></span><br><span class="line">tar zxvf charles-proxy-<span class="number">3.11</span><span class="number">.2</span>.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># 启动 charles</span></span><br><span class="line">./charles/bin/charles</span><br></pre></td></tr></table></figure>
<h2 id="手机抓包">手机抓包</h2><p><strong>前提：使手机和电脑在一个局域网内，不一定非要是一个ip段，只要是同一个路由下就可以了，比如电脑连接的有线网ip为192.168.16.12，然后手机链接的wifi ip为192.168.1.103，但是这个有线网和无线网的最终都是来自于一个外部ip，这样的话也是可以的。</strong></p>
<p>在安卓手机的 <code>设置 -&gt; wlan -&gt; 长按连接的wifi -&gt; 修改网络 -&gt;  高级选项 -&gt; 代理选手动</code> ， 填入电脑的 ip 和 charles 监听的 端口（默认为 8888）</p>
<blockquote>
<p>查看电脑端口 ： <code>ifconfig</code><br>查看/修改 charles 监听端口： charles的 <code>Proxy -&gt; Proxy Setting</code></p>
</blockquote>
<p>设置好之后Charles弹出确认框，点击Allow按钮即可</p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/ad193bbb-4d55-4feb-9e55-0634aa6dbfce.png" alt="图片"></p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/c48ee820-f6ae-4814-b505-ff4870db1f5b.png" alt="图片"></p>
<h2 id="抓取_https">抓取 https</h2><p> <img src="https://dn-coding-net-production-pp.qbox.me/027d34d1-c783-4aca-8db3-e0066bf4ca1b.png" alt="图片"></p>
<h3 id="安装证书">安装证书</h3><p>charles的 Help -&gt; SSL Proxy -&gt; Install charles Root</p>
<h3 id="设置_ssl_enable">设置 ssl enable</h3><p>在需要抓取的 https 链接上 右键 <code>enable ssl proxy</code><br><img src="https://dn-coding-net-production-pp.qbox.me/4b91cf2a-e35b-4b9b-96ac-047eafe607e6.png" alt="图片"></p>
<p>参考 <a href="http://drops.wooyun.org/tips/2423" target="_blank" rel="external">charles使用教程指南</a></p>
<h1 id="抓包工具_–_mitmproxy">抓包工具 – mitmproxy</h1><p>基于python 跨平台： linux, windows，    OSX (Mountain Lion and later)<br><a href="https://mitmproxy.org/" target="_blank" rel="external">官网</a></p>
<blockquote>
<p>Mitmproxy是一个基于python的中间人代理的框架。做过渗透测试的肯定很熟悉工具burpsuite或Fiddler，这些工具能够拦截并修改http或https的数据包，对于分析数据包交互的应用来说是非常有用的。但是这些工具都是整套给我们做好了。比如如果想自己定制一套这样的工具，添加一些自己需要的功能的话，那么我想，mitmproxy将是一个比较好的选择，因为它提供了一个可供用户调用的库libmproxy（注意该库目前只支持linux系统）。</p>
</blockquote>
<p><img src="https://dn-coding-net-production-pp.qbox.me/a2d09a30-ea72-42a1-818e-0982f7227784.png" alt="图片"></p>
<p><img src="https://dn-coding-net-production-pp.qbox.me/85e1f4e1-c914-4ac1-9984-4492aad7096f.png" alt="图片"></p>
<p><img src="https://dn-coding-net-production-pp.qbox.me/6992699a-cb21-44b7-9114-38d1b10f0272.png" alt="图片"></p>
<hr>
<p><strong>以下基于Linux台（Ubuntu14.04）</strong></p>
<h2 id="下载">下载</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pip <span class="keyword">install</span> mitmproxy</span><br></pre></td></tr></table></figure>
<p>如果下载速度慢可以下载<a href="https://mitmproxy.org/download/mitmproxy-0.14.0.tar.gz" target="_blank" rel="external">tar包</a></p>
<h2 id="启动">启动</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mitmproxy -b <span class="number">192.168</span><span class="number">.1</span><span class="number">.29</span> -p <span class="number">9999</span></span><br></pre></td></tr></table></figure>
<p>输入 <code>？</code> 查看帮助， <code>q</code>返回<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">A      accept all intercepted flows</span><br><span class="line">a      accept this intercepted flow</span><br><span class="line">b      save request/response body</span><br><span class="line">C      clear flow list or eventlog</span><br><span class="line">d      <span class="operator"><span class="keyword">delete</span> flow</span><br><span class="line"><span class="keyword">D</span>      <span class="keyword">duplicate</span> flow</span><br><span class="line"><span class="keyword">e</span>      toggle eventlog</span><br><span class="line"><span class="keyword">F</span>      toggle follow flow <span class="keyword">list</span></span><br><span class="line"><span class="keyword">l</span>      <span class="keyword">set</span> <span class="keyword">limit</span> filter pattern</span><br><span class="line"><span class="keyword">L</span>      <span class="keyword">load</span> saved flows</span><br><span class="line"><span class="keyword">m</span>      toggle flow mark</span><br><span class="line"><span class="keyword">n</span>      <span class="keyword">create</span> a <span class="keyword">new</span> request</span><br><span class="line"><span class="keyword">P</span>      copy flow <span class="keyword">to</span> clipboard</span><br><span class="line">r      replay request</span><br><span class="line">U      unmark all marked flows</span><br><span class="line">V      revert changes <span class="keyword">to</span> request</span><br><span class="line">w      <span class="keyword">save</span> flows</span><br><span class="line">W      stream flows <span class="keyword">to</span> <span class="keyword">file</span></span><br><span class="line">X      <span class="keyword">kill</span> <span class="keyword">and</span> <span class="keyword">delete</span> flow, even <span class="keyword">if</span> it<span class="string">'s mid-intercept</span><br><span class="line">tab    tab between eventlog and flow list</span><br><span class="line">enter  view flow</span><br><span class="line">|      run script on this flow</span></span></span><br></pre></td></tr></table></figure></p>
<p>手机设置好代理，界面上就可以看到请求了<br><img src="https://dn-coding-net-production-pp.qbox.me/c5446754-1d45-4d7d-ba48-44b6e26d3b4f.png" alt="图片"></p>
<h2 id="mitmproxy_查看http请求响应">mitmproxy 查看http请求响应</h2><p><code>C (大写)</code> 清除抓包结果</p>
<p><code>j</code>  <code>k</code> 选择请求， 回车查看详细信息</p>
<p> <img src="https://dn-coding-net-production-pp.qbox.me/5cfa3fd1-879b-4db6-8f05-f8885d730964.png" alt="图片"></p>
<p><code>tab</code>   切换 <strong>Request</strong> 和 <strong>Response</strong></p>
<p><code>m</code> Display Mode 美化信息<br> <img src="https://dn-coding-net-production-pp.qbox.me/70e7c4ad-f7c0-4e7a-bea6-2c4cdd36d50b.png" alt="图片"><br> 上图输入 m，在输入 s，便可以以json形式展示</p>
<p><code>e</code> 编辑<br>Edit request (cookies,query,path,url,header,form,raw body,method)?<br>Edit response (cookies,code,message,header,raw body)?</p>
<h3 id="mitmproxy拦截_(Intercept)">mitmproxy拦截 (Intercept)</h3><p>相当于在客户端和服务器做中间人，可以修改客户端请求，修改服务器返回</p>
<p>输入 <code>i</code>（代表Intercept filter）即可，此时界面便会让你输入想要拦截的条件：</p>
<p>mitmproxy的条件拦截在默认情况下是过滤抓包的URL的。也就是说当你直接输入要拦截的条件（比如输入“weibo”），那么接下来要出现抓包会将匹配的抓包整体变黄：</p>
<p>mitmproxy条件过滤效果<br>mitmproxy条件拦截效果<br>这些橘黄色的数据包都代表被拦截了，还未发送给服务器，这个时候你就可以对这些数据包进行修改，我们选择一个数据包enter进入：</p>
<p>mitmproxy 拦截 选择数据包<br>与之前的类似，输入“e”，进行request编辑模式，然后输入“h”代表要编辑request的头部:</p>
<p>mitmproxy 编辑拦截包的头部<br>输入enter便可对高亮的User-Agent的值进行修改，上图的weibo版本之前是5.0的，被我改成了6.0 。我们还可以对header进行添加属性，输入“a”即可，然后使用tab分别键入key和value。这里我添加了“test－test”键值对：</p>
<p>mitmproxy 拦截header添加键值对<br>至此，我对拦截的request header已经修改完毕，现在要做的就是我要认可接受这个修改，然后发给服务器。所以我们输入“a”（代表“accept”）即可，等到服务器响应后，注意，mitmproxy便又了拦截服务器发过来的response（注意那个“Response intercepted”）：</p>
<p>mitmproxy 拦截response<br>现在如果你想修改这个response也可以，方式同上面修改request一样。这个时候我再输入“a”，代表我接受了这个response，然后这个response便可发给客户端了:</p>
<p>mitmproxy 拦截response之后accept</p>
<p>更多类型的mitmproxy拦截</p>
<p>同时mitmproxy还支持不同类型的条件过滤，之前在拦截字符串前面加上特定的参数比如我要拦截所有的POST request怎么办？输入：~m POST 即可（m代表method）：</p>
<p>mitmproxy 拦截特定的request 方法</p>
<p>拦截所有的request： ~q</p>
<p>拦截特定的header： ~h</p>
<p>拦截特定的domain： ~d</p>
<p>拦截特定的响应代码（404之类的）： ~c</p>
<p>mitmproxy官方文档。</p>
<hr>
<h1 id="抓包工具_–_Fiddler">抓包工具 – Fiddler</h1><p>基于C#  windows, Linux看这里 <a href="http://fiddler.wikidot.com/mono" target="_blank" rel="external">Mono Fiddler</a></p>
<hr>
<h2 id="下载-1">下载</h2><p>直接下载，安装即可</p>
<h2 id="手机抓包-1">手机抓包</h2><p><img src="https://imququ.com/static/uploads/2013/09/Snip20130913_20.png.webp" alt=""></p>
<hr>
<h1 id="抓包工具_–_wireshark">抓包工具 – wireshark</h1><p>跨平台：Windows，OS X ，Linux</p>
<p><a href="https://www.wireshark.org/" target="_blank" rel="external">官网</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://github.com/hanks-zyh/capturedata">github 地址</a></p>
<blockquote>
<p>抓包工具整理</p>
</blockquote>
<h1 id="抓包工具_–_Charles">抓包工具 – Charles</h1><p>基于Java 跨平台： Linux , Mac OS X, Windows<br><a href="https://www.charlesproxy.com/">官网</a></p>
<blockquote>
<p>Charles is an HTTP proxy / HTTP monitor / Reverse Proxy that enables a developer to view all of the HTTP and SSL / HTTPS traffic between their machine and the Internet. This includes requests, responses and the HTTP headers (which contain the cookies and caching information).</p>
</blockquote>
<p><img src="https://www.charlesproxy.com/assets/img/sm/23/image/mac_screen_321.png?k=f28bf8eff3" alt=""></p>
<hr>]]>
    
    </summary>
    
      <category term="必备知识" scheme="http://hanks.xyz/tags/%E5%BF%85%E5%A4%87%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[利用ADB 来进行无线调试]]></title>
    <link href="http://hanks.xyz/2015/11/01/adb-wifi/"/>
    <id>http://hanks.xyz/2015/11/01/adb-wifi/</id>
    <published>2015-11-01T14:28:34.000Z</published>
    <updated>2015-12-02T08:33:27.929Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>通过wifi连接进行 adb 调试, 也是插件 <strong><a href="https://github.com/pedrovgs/AndroidWiFiADB" target="_blank" rel="external">AndroidWiFiADB</a></strong> 的原理</p>
<p>前提: 电脑和手机在同一局域网下</p>
</blockquote>
<h3 id="adb_connect_命令">adb connect 命令</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb connect &lt;host&gt;[<span class="symbol">:&lt;port&gt;</span>]</span><br></pre></td></tr></table></figure>
<ol>
<li><p>通过USB线连接电脑</p>
</li>
<li><p>查看 <code>adb</code> 连接的设备列表</p>
</li>
</ol>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ adb devices -l</span><br><span class="line"></span><br><span class="line">List of devices attached</span><br><span class="line"><span class="number">005</span>deabe1919a90b       device <span class="string">usb:</span><span class="number">1</span>-<span class="number">2</span> <span class="string">product:</span>occam <span class="string">model:</span>Nexus_4 <span class="string">device:</span>mako</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<ol>
<li>重置 TCP端口</li>
</ol>
<figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ adb tcpip <span class="number">5555</span></span><br><span class="line"></span><br><span class="line"><span class="title">restarting</span> <span class="keyword">in</span> <span class="type">TCP</span> mode <span class="foreign"><span class="keyword">port</span>: 5555</span></span><br></pre></td></tr></table></figure>
<ol>
<li>查看手机设备的 ip</li>
</ol>
<p>设置 -&gt; wifi -&gt; 高级设置, 查看手机在局域网的 ip<br>我的是 192.168.1.230</p>
<ol>
<li><code>adb</code>连接手机</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ adb connect <span class="number">192.168</span><span class="number">.1</span><span class="number">.230</span></span><br><span class="line"></span><br><span class="line">connected to <span class="number">192.168</span><span class="number">.1</span><span class="number">.230</span>:<span class="number">5555</span></span><br></pre></td></tr></table></figure>
<ol>
<li>断开USB数据线, 验证adb连接是否断开</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ adb devices -l</span><br><span class="line">List of devices attached</span><br><span class="line"><span class="number">192.168</span><span class="number">.1</span><span class="number">.230</span>:<span class="number">5555</span>     device product:occam model:Nexus_4 device:mako</span><br></pre></td></tr></table></figure>
<p>现在可以执行各种adb 命令了, 当然包括安装调试apk,查看log等等</p>
<p>相关链接:<br><a href="http://adbshell.com/commands/adb-connect" target="_blank" rel="external">adb shell- adb conntect</a><br><a href="https://github.com/pedrovgs/AndroidWiFiADB" target="_blank" rel="external">AndroidWiFiADB</a><br><a href="https://github.com/Bob1993/adbwifi/blob/master/adbwifi.sh" target="_blank" rel="external">adbwifi(shell脚本)</a><br><a href="http://developer.android.com/intl/zh-cn/tools/help/adb.html#directingcommands" target="_blank" rel="external">Android Debug Bridge</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>通过wifi连接进行 adb 调试, 也是插件 <strong><a href="https://github.com/pedrovgs/AndroidWiFiADB">AndroidWiFiADB</a></strong> 的原理</p>
<p>前提: 电脑和手机在同一局域网下</p>
</blockquote>
<h3 id="adb_connect_命令">adb connect 命令</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb connect &lt;host&gt;[<span class="symbol">:&lt;port&gt;</span>]</span><br></pre></td></tr></table></figure>
<ol>
<li><p>通过USB线连接电脑</p>
</li>
<li><p>查看 <code>adb</code> 连接的设备列表</p>
</li>
</ol>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ adb devices -l</span><br><span class="line"></span><br><span class="line">List of devices attached</span><br><span class="line"><span class="number">005</span>deabe1919a90b       device <span class="string">usb:</span><span class="number">1</span>-<span class="number">2</span> <span class="string">product:</span>occam <span class="string">model:</span>Nexus_4 <span class="string">device:</span>mako</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[上传自己的库到jcenter]]></title>
    <link href="http://hanks.xyz/2015/10/31/%E4%B8%8A%E4%BC%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BA%93%E5%88%B0jcenter/"/>
    <id>http://hanks.xyz/2015/10/31/上传自己的库到jcenter/</id>
    <published>2015-10-31T12:24:00.000Z</published>
    <updated>2015-12-06T03:19:40.425Z</updated>
    <content type="html"><![CDATA[<h1 id="注册">注册</h1><p><a href="https://bintray.com/" target="_blank" rel="external">https://bintray.com/</a><br>注册一个账号。</p>
<p>获取API Key<br><a href="https://bintray.com/profile/edit" target="_blank" rel="external">https://bintray.com/profile/edit</a></p>
<h1 id="创建与配置项目">创建与配置项目</h1><ol>
<li>修改项目目录下的 <code>build.gradle</code>,添加依赖</li>
</ol>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Top-level build file where you can add configuration options common to all sub-projects/modules.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">buildscript</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">dependencies</span> &#123;</span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.android.tools.build:gradle:1.3.0'</span></span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'</span></span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.github.dcendents:android-maven-gradle-plugin:1.3'</span></span><br><span class="line">        <span class="comment">// <span class="doctag">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class="line">        <span class="comment">// in the individual module build.gradle files</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">allprojects</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>修改要打包成aar的moudle下的<code>build.gradle</code></li>
</ol>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: <span class="string">'com.android.library'</span></span><br><span class="line">apply plugin: <span class="string">'com.github.dcendents.android-maven'</span></span><br><span class="line">apply plugin: <span class="string">'com.jfrog.bintray'</span></span><br><span class="line"></span><br><span class="line">version = <span class="string">"0.6.6"</span>                                                              <span class="comment">// #CONFIG# // project version</span></span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">21</span></span><br><span class="line">    buildToolsVersion <span class="string">"21.1.2"</span></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        minSdkVersion <span class="number">8</span></span><br><span class="line">        targetSdkVersion <span class="number">21</span></span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        versionName <span class="string">"1.0"</span></span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="keyword">false</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">fileTree</span>(dir: <span class="string">'libs'</span>, <span class="keyword">include</span>: [<span class="string">'*.jar'</span>])</span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:support-v4:22.2.1'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:recyclerview-v7:22.2.1'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> siteUrl = <span class="string">'https://github.com/hanks-zyh/AnimateCheckBox'</span>                    <span class="comment">// #CONFIG# // project homepage</span></span><br><span class="line"><span class="keyword">def</span> gitUrl = <span class="string">'https://github.com/hanks-zyh/AnimateCheckBox.git'</span>                <span class="comment">// #CONFIG# // project git</span></span><br><span class="line"><span class="keyword">group</span> = <span class="string">"com.hanks"</span>                                                           <span class="comment">// #CONFIG# // Maven Group ID for the artifact (pageckage name is ok)</span></span><br><span class="line"></span><br><span class="line">install &#123;</span><br><span class="line">    <span class="keyword">repositories</span>.mavenInstaller &#123;</span><br><span class="line">        <span class="comment">// This generates POM.xml with proper parameters</span></span><br><span class="line">        pom &#123;</span><br><span class="line">            <span class="keyword">project</span> &#123;</span><br><span class="line">                packaging <span class="string">'aar'</span></span><br><span class="line">                name <span class="string">'Less Code For Android'</span>                                   <span class="comment">// #CONFIG# // project title</span></span><br><span class="line">                url siteUrl</span><br><span class="line">                <span class="comment">// Set your license</span></span><br><span class="line">                licenses &#123;</span><br><span class="line">                    license &#123;</span><br><span class="line">                        name <span class="string">'The Apache Software License, Version 2.0'</span></span><br><span class="line">                        url <span class="string">'http://www.apache.org/licenses/LICENSE-2.0.txt'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                developers &#123;</span><br><span class="line">                    developer &#123;</span><br><span class="line">                        id <span class="string">'hanks'</span>                                           <span class="comment">// #CONFIG# // your user id (you can write your nickname)</span></span><br><span class="line">                        name <span class="string">'hanks'</span>                                       <span class="comment">// #CONFIG# // your user name</span></span><br><span class="line">                        email <span class="string">'zhangyuhan2014@gmail.com'</span>                               <span class="comment">// #CONFIG# // your email</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                scm &#123;</span><br><span class="line">                    connection gitUrl</span><br><span class="line">                    developerConnection gitUrl</span><br><span class="line">                    url siteUrl</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">task</span> sourcesJar(type: Jar) &#123;</span><br><span class="line">    <span class="keyword">from</span> android.<span class="keyword">sourceSets</span>.main.java.srcDirs</span><br><span class="line">    classifier = <span class="string">'sources'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">task</span> javadoc(type: Javadoc) &#123;</span><br><span class="line">    <span class="keyword">source</span> = android.<span class="keyword">sourceSets</span>.main.java.srcDirs</span><br><span class="line">    <span class="keyword">classpath</span> += <span class="keyword">project</span>.files(android.getBootClasspath().<span class="keyword">join</span>(<span class="keyword">File</span>.pathSeparator))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">task</span> javadocJar(type: Jar, dependsOn: javadoc) &#123;</span><br><span class="line">    classifier = <span class="string">'javadoc'</span></span><br><span class="line">    <span class="keyword">from</span> javadoc.<span class="keyword">destinationDir</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">artifacts</span> &#123;</span><br><span class="line">    archives javadocJar</span><br><span class="line">    archives sourcesJar</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在local.properties添加bintray.user和bintray.apikey</span></span><br><span class="line">Properties properties = <span class="keyword">new</span> Properties()</span><br><span class="line">properties.load(<span class="keyword">project</span>.rootProject.<span class="keyword">file</span>(<span class="string">'local.properties'</span>).newDataInputStream())</span><br><span class="line">bintray &#123;</span><br><span class="line">    user = properties.getProperty(<span class="string">"bintray.user"</span>)</span><br><span class="line">    key = properties.getProperty(<span class="string">"bintray.apikey"</span>)</span><br><span class="line">    <span class="keyword">configurations</span> = [<span class="string">'archives'</span>]</span><br><span class="line">    pkg &#123;</span><br><span class="line">        repo = <span class="string">"maven"</span></span><br><span class="line">        name = <span class="string">"AnimateCheckBox"</span>     <span class="comment">// #CONFIG# project name in jcenter</span></span><br><span class="line">        websiteUrl = siteUrl</span><br><span class="line">        vcsUrl = gitUrl</span><br><span class="line">        licenses = [<span class="string">"Apache-2.0"</span>]</span><br><span class="line">        publish = <span class="keyword">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="执行_bintrayUpload">执行 bintrayUpload</h1><p>当bintrayUpload成功之后，</p>
<p>到 <a href="https://bintray.com/" target="_blank" rel="external">https://bintray.com/</a> 查看刚上传的项目<br>找到 <strong>Maven Central</strong> 标签，提示体积jcenter审核</p>
<h1 id="上传到_jcenter">上传到 jcenter</h1><p>等邮件通知，审核通过之后可以查看</p>
<p>到<a href="http://jcenter.bintray.com/" target="_blank" rel="external">http://jcenter.bintray.com/</a> 按照路径查看是否存在<br>如 <strong>otto</strong> 的 <a href="http://jcenter.bintray.com/com/squareup/otto/1.3.7/" target="_blank" rel="external">http://jcenter.bintray.com/com/squareup/otto/1.3.7/</a><br>然后别人就可以添加引用，从远程下载了</p>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ubuntu下Java环境配置]]></title>
    <link href="http://hanks.xyz/2015/10/25/Ubuntu%E4%B8%8BJava%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>http://hanks.xyz/2015/10/25/Ubuntu下Java环境配置/</id>
    <published>2015-10-25T14:42:00.000Z</published>
    <updated>2015-12-06T03:19:40.385Z</updated>
    <content type="html"><![CDATA[<p>#Java环境配置</p>
<ol>
<li>下载 <code>jdk-8u60-linux-x64.tar.gz</code></li>
<li>解压文件</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入到下载目录</span></span><br><span class="line"><span class="built_in">cd</span> ~/Downloads</span><br><span class="line"><span class="comment"># 在 /usr/lib/ 下创建jvm目录，如果有可以跳过</span></span><br><span class="line">sudo mkdir /usr/lib/jvm</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">sudo tar zxvf jdk-<span class="number">8</span>u60-linux-x64.tar.gz -C /usr/lib/jvm</span><br><span class="line"><span class="comment"># 进入到解压过后的文件</span></span><br><span class="line"><span class="built_in">cd</span> /usr/lib/jvm/</span><br><span class="line"><span class="comment"># 重命名目录</span></span><br><span class="line">mv jdk1.<span class="number">8.0</span>_60/ java-<span class="number">8</span>u60-sun</span><br></pre></td></tr></table></figure>
<ol>
<li>修改环境变量</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑.bashrc文件</span></span><br><span class="line">vim ~/.bashrc</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在文件底部添加：</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-<span class="number">8</span>u60-sun  </span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre  </span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib  </span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>
<p>保存退出</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使更改生效</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>
<ol>
<li>测试</li>
</ol>
<p><img src="http://file.bmob.cn/M02/44/E5/oYYBAFYs6cGAUXgGAAQQhkbBVNA434.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
      <category term="Java" scheme="http://hanks.xyz/tags/Java/"/>
    
      <category term="Ubuntu" scheme="http://hanks.xyz/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Anko for Android]]></title>
    <link href="http://hanks.xyz/2015/10/21/Anko_for_Android/"/>
    <id>http://hanks.xyz/2015/10/21/Anko_for_Android/</id>
    <published>2015-10-21T10:39:00.000Z</published>
    <updated>2015-12-06T03:19:40.237Z</updated>
    <content type="html"><![CDATA[<h1 id="Anko_for_Android">Anko for Android</h1><blockquote>
<p><a href="https://github.com/JetBrains/anko" target="_blank" rel="external">Anko</a> 是一个使开发Android应用更简单更快捷的库,Anko使你的代码简洁易懂, 使开发者不用再在意Android SDK对Java版本的限制(目前还不支持Java8  =。= ).</p>
</blockquote>
<p> Anko版本的 <code>hello world</code> :<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">verticalLayout &#123;</span><br><span class="line">    <span class="variable"><span class="keyword">val</span> name</span> = editText()</span><br><span class="line">    button(<span class="string">"Say Hello"</span>) &#123;</span><br><span class="line">        onClick &#123; toast(<span class="string">"Hello, $&#123;name.text&#125;!"</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>上面的代码创建了一个Button,放在 <code>LinearLayout</code> 内, 并为其设置了一个点击监听器<code>OnClickListener</code> .</p>
<p><img src="http://file.bmob.cn/M02/32/C1/oYYBAFYnZ7GAHENVAATT_iv8nqY107.gif" alt=""></p>
<p>上面是一个DSL(Domain Specific Language),使用的是 <a href="http://kotlinlang.org" target="_blank" rel="external">Kotlin</a>语言.</p>
<blockquote>
<p>DSL，即 Domain Specific Language，领域相关语言。什么是 DSL，说白了它就是某个行业中的行话。</p>
</blockquote>
<p>[TOC]</p>
<h2 id="Why_Anko?">Why Anko?</h2><h3 id="为啥_DSL?">为啥 DSL?</h3><p>平时开发android, UI写在xml中,这就导致了下面的几个问题 :</p>
<ul>
<li>It is not typesafe</li>
<li>It is not null-safe</li>
<li>It forces you to write almost <em>the same code</em> for every layout you make</li>
<li>XML is parsed on the device wasting CPU time and battery 渲染xml为对象过程耗时耗电</li>
<li>Most of all, it allows no code reuse. 大部分不能重用</li>
</ul>
<p>但是全部只在代码中写UI,这很难,不仅代码丑,而且冗余难维护,下面是 <strong>Ktolin</strong>版本的(Java甚至更长):</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable"><span class="keyword">val</span> act</span> = this</span><br><span class="line"><span class="variable"><span class="keyword">val</span> layout</span> = LinearLayout(act)</span><br><span class="line">layout.setOrientation(LinearLayout.VERTICAL)</span><br><span class="line"><span class="variable"><span class="keyword">val</span> name</span> = EditText(act)</span><br><span class="line"><span class="variable"><span class="keyword">val</span> button</span> = Button(act)</span><br><span class="line">button.setText(<span class="string">"Say Hello"</span>)</span><br><span class="line">button.setOnClickListener &#123;</span><br><span class="line">    Toast.makeText(act, <span class="string">"Hello, $&#123;name.getText()&#125;!"</span>, Toast.LENGTH_SHORT).show()  </span><br><span class="line">&#125;</span><br><span class="line">layout.addView(name)</span><br><span class="line">layout.addView(button)</span><br></pre></td></tr></table></figure>
<p>DSL 就不一样类,相同的逻辑,但简洁易懂, 易于编写而且没有运行开销(runtime overhead)看下面的代码:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">verticalLayout &#123;</span><br><span class="line">    <span class="variable"><span class="keyword">val</span> name</span> = editText()</span><br><span class="line">    button(<span class="string">"Say Hello"</span>) &#123;</span><br><span class="line">        onClick &#123; toast(<span class="string">"Hello, $&#123;name.text&#125;!"</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="为啥不用_Scaloid?">为啥不用 Scaloid?</h3><p><a href="https://github.com/pocorall/scaloid" target="_blank" rel="external">Scaloid</a> 是一个类似与 Scala 的库, 有很多非常酷的特性可供 Scala 开发者使用. Anko主要是针对 Java 和 Kotlin developers.</p>
<h3 id="兼容已有的代码">兼容已有的代码</h3><p>不需要用Anko重写所有的UI, 你可以保留原有的Java代码. 此外, 如果你想写一个 <strong>Kotlin</strong>的activity类并且由于某些需求需要使用 inflate来渲染xml, 你完全可以按照原来的写法:<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Same as findViewById(), simpler to use</span></span><br><span class="line"><span class="variable"><span class="keyword">val</span> name</span> = find<span class="type">&lt;TextView&gt;</span>(R.id.name)</span><br><span class="line">name.hint = <span class="string">"Enter your name"</span></span><br><span class="line">name.onClick &#123; <span class="comment">/*do something*/</span> &#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="工作原理">工作原理</h3><p>There is no :tophat:. Anko 由一些 <strong>Kotlin</strong>的 <a href="http://kotlinlang.org/docs/reference/extensions.html" target="_blank" rel="external">扩展函数和属性</a>,被设置成<strong>类型安全</strong>(<em>type-safe builders</em>)的, <a href="http://kotlinlang.org/docs/reference/type-safe-builders.html" target="_blank" rel="external">under Type Safe Builders</a>.</p>
<p>他们繁琐的手工编写所有这些扩展, 使用Android SDK的源码中的 <em>android.jar</em> 文件自动生成</p>
<h3 id="可扩展吗?">可扩展吗?</h3><p>答案是: <strong>yes</strong>.<br>例如. 你可能想使用 <code>MapView</code> 在DSL中.你可以编写下面的代码(kotlin文件中),然后就可已到处使用了<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> ViewManager.<span class="title">mapView</span><span class="params">()</span> = mapView &#123;&#125;</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> ViewManager.<span class="title">mapView</span><span class="params">(init: <span class="typename">MapView.(</span>)</span> -&gt; Unit): MapView &#123;</span></span><br><span class="line">    <span class="keyword">return</span> ankoView(&#123; MapView(it) &#125;, init)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><code>{ MapView(it) }</code> 是你自定义View的一个工厂方法<code>View</code>. 接受一个 <code>Context</code> .</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">frameLayout &#123;</span><br><span class="line">    <span class="variable"><span class="keyword">val</span> mapView</span> = mapView().lparams(width = matchParent)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果你想创建一个 顶级的 DSL,看<a href="https://github.com/JetBrains/anko/blob/master/doc/ADVANCED.md#extending-anko" target="_blank" rel="external">这里Extending Anko</a>.</p>
<h3 id="使用_Gradle">使用 Gradle</h3><p>这里有个例子 <a href="https://github.com/yanex/anko-template-project" target="_blank" rel="external">template project</a> 展示类如果在Android中Gradle配置.</p>
<p>基本上,你只需要配置  <code>repository</code> 和一个 <code>compile dependency</code>:</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'org.jetbrains.anko:anko-sdk15:0.7.1'</span> <span class="comment">// sdk19, sdk21, sdk23 are also available</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'org.jetbrains.anko:anko-support-v4:0.7.1'</span> <span class="comment">// In case you need support.v4 bindings</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="当作_Jar_library使用">当作 Jar library使用</h3><p>加入你的项目不是基于Gradl, 不需要配置 Maven. 只要添加<a href="https://github.com/JetBrains/anko/releases" target="_blank" rel="external">这里</a> 的jar包即可.</p>
<h3 id="编译_Anko">编译 Anko</h3><p>如何编译看<a href="https://github.com/JetBrains/anko/blob/master/doc/BUILDING.md" target="_blank" rel="external">under Building</a>.</p>
<h2 id="理解_Anko">理解 Anko</h2><p>Anko 是使用 <strong>Kotlin</strong>语言编写的.<br>如果不熟悉<strong>Kotlin</strong>看 <a href="http://kotlinlang.org/docs/reference/" target="_blank" rel="external">kotlinlang.org</a>.<br><strong>Kotlin</strong>与Java很类似,所以很容易学.</p>
<h3 id="基础">基础</h3><p>Anko中, 你不需要继承其他奇怪的类,只要标准的<code>Activity</code>, <code>Fragment</code>, <code>FragmentActivity</code> 或者其他任意的类</p>
<p>首先, 在使用Anko的DSL的类中导入 <code>org.jetbrains.anko.*</code> .</p>
<p>DSL 可以在 <code>onCreate()</code>中使用:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="typename">Bundle?</span>)</span> &#123;</span></span><br><span class="line">    super<span class="type">&lt;Activity&gt;</span>.onCreate(savedInstanceState)</span><br><span class="line"></span><br><span class="line">    verticalLayout &#123;</span><br><span class="line">        padding = dip(<span class="number">30</span>)</span><br><span class="line">        editText &#123;</span><br><span class="line">            hint = <span class="string">"Name"</span></span><br><span class="line">            textSize = <span class="number">24</span>f</span><br><span class="line">        &#125;</span><br><span class="line">        editText &#123;</span><br><span class="line">            hint = <span class="string">"Password"</span></span><br><span class="line">            textSize = <span class="number">24</span>f</span><br><span class="line">        &#125;</span><br><span class="line">        button(<span class="string">"Login"</span>) &#123;</span><br><span class="line">            textSize = <span class="number">26</span>f</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>不需要显示的调用 <code>setContentView(R.layout.something)</code>,  Anko 自动为Activity（只会对Activity）进行 set content view</p>
<p><code>padding</code>, <code>hint</code> 和 <code>textSize</code> 是 <a href="http://kotlinlang.org/docs/reference/extensions.html#extension-properties" target="_blank" rel="external">扩展属性</a>. 大多数 <code>View</code> 具有这些属性，允许使用<code>text = &quot;Some text&quot;</code> 代替 <code>setText(&quot;Some text&quot;)</code>.</p>
<p><code>verticalLayout</code> (一个竖直方向的 <code>LinearLayout</code>), <code>editText</code> 和 <code>button</code> are<br><a href="http://kotlinlang.org/docs/reference/extensions.html" target="_blank" rel="external">扩展函数</a>. 这些函数存在与ANdroid 框架中的大部View中,  <code>Activities</code>, <code>Fragments</code> ( <code>android.support</code> 包中的) 甚至 <code>Context</code>同样适用.</p>
<p>如果有一个 <code>Context</code> 实例, 可以写出下面的DSL结构:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable"><span class="keyword">val</span> name</span> = with(myContext) &#123;</span><br><span class="line">    editText &#123;</span><br><span class="line">        hint = <span class="string">"Name"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>变量 <code>name</code> 成为了 <code>EditText</code>类型.</p>
<h3 id="Helper_方法">Helper 方法</h3><p>你可能注意到了，前面章节中  <code>button</code> 方法接了一个字符串参数，这样的Helper方法同样使用与 <code>TextView</code>, <code>EditText</code>, <code>Button</code> ， <code>ImageView</code>.</p>
<p>如果你不需要 <code>View</code> 其他的属性，你可以省略 <code>{}</code> 直接写 <code>button(&quot;Ok&quot;)</code> 或只有 <code>button()</code>:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">verticalLayout &#123;</span><br><span class="line">    button(<span class="string">"Ok"</span>)</span><br><span class="line">    button(<span class="string">"Cancel"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Layouts_和_LayoutParams">Layouts 和 LayoutParams</h3><p>在父布局中布局控件可能需要使用 <code>LayoutParams</code>. xml中长这样:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">ImageView</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android_layout_marginLeft</span>=<span class="value">"5dip"</span></span><br><span class="line">    <span class="attribute">android_layout_marginTop</span>=<span class="value">"10dip"</span></span><br><span class="line">    <span class="attribute">android:src</span>=<span class="value">"@drawable/something"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>Anko中, 在<code>View</code>的后面使用 <code>lparams</code>来实现类似与xml的 <code>LayoutParams</code>。</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">linearLayout &#123;</span><br><span class="line">    button(<span class="string">"Login"</span>) &#123;</span><br><span class="line">        textSize = <span class="number">26</span>f</span><br><span class="line">    &#125;.lparams(width = wrapContent) &#123;</span><br><span class="line">        horizontalMargin = dip(<span class="number">5</span>)</span><br><span class="line">        topMargin = dip(<span class="number">10</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果指定了 <code>lparams</code>,但是没有指定 <code>width</code> 或者 <code>height</code>, 默认是 <code>WRAP_CONTENT</code>.但是你可以自己通过使用<a href="http://kotlinlang.org/docs/reference/functions.html#named-arguments" target="_blank" rel="external">named arguments</a>指定.</p>
<p>注意下面一些方便的属性:</p>
<ul>
<li><code>horizontalMargin</code> 同时设置 left 和 right margins,</li>
<li><code>verticalMargin</code> 同时设置   top 和 bottom  </li>
<li><code>margin</code> 同时设置4个方向的 margins.</li>
</ul>
<p><strong>注意</strong>  <code>lparams</code> 的使用在不同的布局中是不同的, 例如在 <code>RelativeLayout</code>中:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable"><span class="keyword">val</span> ID_OK</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">relativeLayout &#123;</span><br><span class="line">    button(<span class="string">"Ok"</span>) &#123;</span><br><span class="line">        id = ID_OK</span><br><span class="line">    &#125;.lparams &#123; alignParentTop() &#125;</span><br><span class="line"></span><br><span class="line">    button(<span class="string">"Cancel"</span>).lparams &#123; below(ID_OK) &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Listeners">Listeners</h3><p>设置listeners:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">button(<span class="string">"Login"</span>) &#123;</span><br><span class="line">    onClick &#123;</span><br><span class="line">        login(name, password)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>下面的效果一样:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">button.setOnClickListener(<span class="keyword">object</span> : OnClickListener &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onClick</span><span class="params">(v: <span class="typename">View</span>)</span> &#123;</span></span><br><span class="line">        login(name, password)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>当一个Listener有多个方法时，Anko就显得很方便类. 看下面的代码（没有使用Anko）:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">seekBar.setOnSeekBarChangeListener(<span class="keyword">object</span>: OnSeekBarChangeListener &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onProgressChanged</span><span class="params">(seekBar: <span class="typename">SeekBar, progress: Int, fromUser: Boolean</span>)</span> &#123;</span></span><br><span class="line">        <span class="comment">// Something</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onStartTrackingTouch</span><span class="params">(seekBar: <span class="typename">SeekBar?</span>)</span> &#123;</span></span><br><span class="line">        <span class="comment">// Just an empty method</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onStopTrackingTouch</span><span class="params">(seekBar: <span class="typename">SeekBar</span>)</span> &#123;</span></span><br><span class="line">        <span class="comment">// Another empty method</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>使用了Anko:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">seekBar &#123;</span><br><span class="line">    onSeekBarChangeListener &#123;</span><br><span class="line">        onProgressChanged &#123; seekBar, progress, fromUser -&gt;</span><br><span class="line">            <span class="comment">// Something</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果你同时设置了<code>onProgressChanged</code> 和 <code>onStartTrackingTouch</code>  , 两个方法将被合并. 对于多个相同的方法，最后的一个有效.</p>
<h3 id="Resources,_Colors_和_Dimensions">Resources, Colors 和 Dimensions</h3><h4 id="Using_resource_identifiers">Using resource identifiers</h4><p>前面的所有例子直接使用的 Java的字符串，但是大多数时候字符串都是放在  <code>res/values/</code> 目录下，并且是运行时调用的，例如 <code>getString(R.string.login)</code>.</p>
<p>幸运的是，Anko中可以使用以下两个 helper方法 (<code>button(R.string.login)</code>) 和 (<code>button { textResource = R.string.login }</code>).</p>
<p><strong>注意</strong>，这些属性不是 <code>text</code>, <code>hint</code>, <code>image</code>, 而是 <code>textResource</code>, <code>hintResource</code> and <code>imageResource</code>.</p>
<blockquote>
<p>Resource properties always throw <code>AnkoException</code> when read.</p>
</blockquote>
<h4 id="Colors">Colors</h4><p>两个简单的扩展函数使代码更加易懂。</p>
<table>
<thead>
<tr>
<th>Function</th>
<th>Result</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>0xff0000.opaque</code></td>
<td><span style="color:#ff0000">non-transparent red</span></td>
</tr>
<tr>
<td><code>0x99.gray.opaque</code></td>
<td><span style="color:#999">non-transparent #999999 gray</span></td>
</tr>
</tbody>
</table>
<h4 id="Dimensions">Dimensions</h4><p>你可以指定 dimension 的 <strong>dip</strong> (density-independent pixels) 或  <strong>sp</strong> (scale-independent pixels)值: <code>dip(dipValue)</code> 或 <code>sp(spValue)</code>. <strong>注意</strong> <code>textSize</code>属性默认接受<strong>sp</strong> (<code>textSize = 16f</code>). 使用 <code>px2dip</code> 和 <code>px2sp</code> 相互转换.</p>
<h3 id="Instance_shorthands">Instance shorthands</h3><p>在Activity中，有时你需要传一个 <code>Context</code>实例给一个 Android SDK中的方法，通常你会写 <code>this</code>, 如果在内部类呢?你可能写<code>SomeActivity.this</code> ，如果你使用 <strong>Kotlin</strong>，你只需写 <code>this@SomeActivity</code> ，<br>使用 Anko，你可以只写  <code>ctx</code>. <code>ctx</code>是<code>Activity</code> 和 <code>Service</code> 或者 <code>Fragment</code> (使用的 <code>getActivity()</code> )内部的一个属性. 你也可以使用<code>act</code>扩展属性获取 <code>Activity</code>实例.</p>
<h3 id="UI_wrapper">UI wrapper</h3><p>开始使用Anko 之前，将 <code>UI</code> tag 作为 DSL 顶级元素:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">UI &#123;</span><br><span class="line">    editText &#123;</span><br><span class="line">        hint = <span class="string">"Name"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这将更易于扩展 DSL ，因为你必须声明一个函数 <code>ViewManager.customView</code>.<br>看这里 <a href="https://github.com/JetBrains/anko/blob/master/doc/ADVANCED.md#extending-anko" target="_blank" rel="external">Extending Anko</a> 获取更多信息.</p>
<h3 id="Include_tag">Include tag</h3><p>使用 <code>include</code> tag 很容易向 DSL 插入 一个 XML layout ：</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">include<span class="type">&lt;View&gt;</span>(R.layout.something) &#123;</span><br><span class="line">    backgroundColor = Color.RED</span><br><span class="line">&#125;.lparams(width = matchParent) &#123; margin = dip(<span class="number">12</span>) &#125;</span><br></pre></td></tr></table></figure>
<p>通常可以使用 <code>lparams</code> ， 如果类型不是 <code>View</code>,仍然可以用 <code>{}</code>:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">include<span class="type">&lt;TextView&gt;</span>(R.layout.textfield) &#123;</span><br><span class="line">    text = <span class="string">"Hello, world!"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Styles">Styles</h3><p>Anko 支持 styling: <code>style</code> 是一个简单的函数，接受一个<code>View</code>, 效果作用于这个 <code>View</code> , 并且当这个<code>View</code> 是一个<code>ViewGroup</code> 时，可以可以递归的作用与 这个View的 child View:</p>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">verticalLayout &#123;</span><br><span class="line">    editText &#123;</span><br><span class="line">        hint = <span class="string">"Name"</span></span><br><span class="line">    &#125;</span><br><span class="line">    editText &#123;</span><br><span class="line">        hint = <span class="string">"Password"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;.style &#123; view -&gt; <span class="keyword">when</span>(view) &#123;</span><br><span class="line">    <span class="keyword">is</span> EditText -&gt; view.textSize = <span class="number">20</span>f</span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure>
<hr>
<p><a href="http://kotlinlang.org" target="_blank" rel="external"><img src="http://file.bmob.cn/M02/32/C5/oYYBAFYnaXGAU36mAAA-AHHYR0Y038.png" alt=""></a></p>
<hr>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ubuntu下开发Android配置流程]]></title>
    <link href="http://hanks.xyz/2015/10/15/Ubuntu%E4%B8%8B%E5%BC%80%E5%8F%91Android%E9%85%8D%E7%BD%AE%E6%B5%81%E7%A8%8B/"/>
    <id>http://hanks.xyz/2015/10/15/Ubuntu下开发Android配置流程/</id>
    <published>2015-10-15T15:57:00.000Z</published>
    <updated>2015-12-06T03:19:40.661Z</updated>
    <content type="html"><![CDATA[<p>#安装Ubuntu 12.04</p>
<ol>
<li>使用USBwriterU盘写入镜像，安装</li>
<li>安装时分区/：20G swap：8G /home：20G</li>
<li>安装完成后首先本地拨号 DSL，用户名，密码</li>
<li>软件与更新 -&gt; 选择软件源163的, 附加驱动，使用博通bcm的无线驱动，显卡驱动选择Video…-fglrx-update(专有)</li>
<li><a href="https://github.com/shadowsocks/shadowsocks/wiki" target="_blank" rel="external">shadowsocks</a>的<a href="www.8dlive.com/post/168.html">下载与配置</a><br>注意可在 &gt;= 14.04 安装 qt5<br>(sudo pip install shadowsocks)</li>
</ol>
<p>#Android studio 使用Shadowsocks</p>
<p>##首先Convert Shadowsocks into an HTTP proxy</p>
<ol>
<li>First run <strong>polipo</strong> with parent proxy set to Shadowsocks:</li>
</ol>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-<span class="built_in">get</span> install polipo</span><br><span class="line">service polipo <span class="keyword">stop</span></span><br><span class="line">polipo socksParentProxy=localhos<span class="variable">t:1080</span></span><br></pre></td></tr></table></figure>
<p>如果地址被占用</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netstat -apn | grep <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">kill <span class="number">9</span> pid(如<span class="number">8936</span>)</span><br></pre></td></tr></table></figure>
<ol>
<li>Then you can play with the HTTP proxy:</li>
</ol>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#测试</span></span><br><span class="line">http_proxy=<span class="keyword">http</span>://localhost:<span class="number">8123</span> apt-<span class="built_in">get</span> update</span><br><span class="line">http_proxy=<span class="keyword">http</span>://localhost:<span class="number">8123</span> curl www.google.com</span><br><span class="line">http_proxy=<span class="keyword">http</span>://localhost:<span class="number">8123</span> wget www.google.com</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># 配置 github</span></span><br><span class="line">git config --global http.proxy <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8123</span></span><br><span class="line">git clone https:<span class="comment">//github.com/<span class="label">xxx/xxx.git</span></span></span><br><span class="line">git xxx</span><br><span class="line">git xxx</span><br><span class="line">git config --global --unset-all http.proxy</span><br></pre></td></tr></table></figure>
<ol>
<li>gradle.properties<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemProp<span class="class">.https</span><span class="class">.proxyPort</span>=<span class="number">8123</span></span><br><span class="line">systemProp<span class="class">.https</span><span class="class">.proxyHost</span>=<span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line">systemProp<span class="class">.http</span><span class="class">.proxyHost</span>=<span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line">systemProp<span class="class">.http</span><span class="class">.proxyPort</span>=<span class="number">8123</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>#Android studio 相关异常</p>
<blockquote>
<p>IllegalArgumentException: java.io.IOException: Cannot run program “/home/hanks/android-sdk-linux/platform-tools/adb”: error=2, 没有那个文件或目录</p>
</blockquote>
<p> 需要添加相应权限</p>
<p>##使用Android Studio 编译时提示 appt error</p>
<blockquote>
<p>appcompat-v7:21.0.0’: No resource found that matches the given name: attr ‘android:actionModeShareDrawable’</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get <span class="operator"><span class="keyword">install</span> lib32z1 lib32ncurses5 lib32bz2-<span class="number">1.0</span></span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> lib32stdc++<span class="number">6</span></span></span><br></pre></td></tr></table></figure>
<p>#android6.0SDK中删除HttpClient的相关类的解决方法</p>
<p>一、出现的情况<br>在eclipse或 android studio开发，<br>设置android SDK的编译版本为23时，且使用了httpClient相关类的库项目：如android-async-http等等，会出现有一些类找不到的错误。<br>二、原因<br>android 6.0(api 23) SDK，不再提供org.apache.http.*(只保留几个类).</p>
<p>三、解决方法<br>1.eclipse:<br>libs中加入<br>org.apache.http.legacy.jar<br>上面的jar包在：**\android-sdk-windows\platforms\android-23\optional下（需要下载android 6.0的SDK）</p>
<p>#virtualBox<br>直接官网下载deb安装即可</p>
<p>#Genymotion<br>官网下载，得到bin包</p>
<ol>
<li>添加执行权限</li>
</ol>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">chmod</span> <span class="tag">u</span>+<span class="tag">x</span> <span class="tag">genymotion</span><span class="class">.bin</span></span><br><span class="line"><span class="tag">sudo</span> <span class="tag">genymotion</span><span class="class">.bin</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
      <category term="Ubuntu" scheme="http://hanks.xyz/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[FTI们在使用的开源库]]></title>
    <link href="http://hanks.xyz/2015/09/27/FTI%E4%BB%AC%E5%9C%A8%E4%BD%BF%E7%94%A8%E7%9A%84%E5%BC%80%E6%BA%90%E5%BA%93/"/>
    <id>http://hanks.xyz/2015/09/27/FTI们在使用的开源库/</id>
    <published>2015-09-27T14:49:00.000Z</published>
    <updated>2015-12-06T03:19:40.265Z</updated>
    <content type="html"><![CDATA[<p>#FTI们在使用的开源库</p>
<blockquote>
<p>转载请注明出处 <a href="http://blog.csdn.net/hpu_zyh/article/details/48769703" target="_blank" rel="external">http://blog.csdn.net/hpu_zyh/article/details/48769703</a></p>
</blockquote>
<p><img src="http://img.blog.csdn.net/20150927233506588" alt="这里写图片描述"></p>
<p>##1. Instagram<br><a href="https://github.com/ACRA/acra" target="_blank" rel="external">ACRA</a><br><a href="https://github.com/loopj/android-async-http" target="_blank" rel="external">android-async-http</a><br><a href="https://github.com/JakeWharton/DiskLruCache" target="_blank" rel="external">DiskLruCache</a><br><a href="">Foursquared</a><br><a href="https://github.com/FasterXML/jackson-annotations" target="_blank" rel="external">jackson-annotations</a><br><a href="https://github.com/FasterXML/jackson-core" target="_blank" rel="external">jackson-core</a><br><a href="https://github.com/FasterXML/jackson-databind" target="_blank" rel="external">jackson-databind</a><br><a href="https://github.com/facebook/rebound" target="_blank" rel="external">rebound</a><br><a href="https://github.com/mttkay/signpost" target="_blank" rel="external">signpost</a><br><a href="https://github.com/code4craft/webmagic" target="_blank" rel="external">webm</a><br><a href="">XML Pull Parser</a><br><a href="https://github.com/sannies/mp4parser" target="_blank" rel="external">mp4parser</a></p>
<p>##2. Twitter<br>Apache Software<br>FoundationApache<br>ThriftAndroid Open Source Project<br>Bouncy Castle Crypto (via Spongy Castle)<br>Chris Banes<br><a href="https://github.com/google/ExoPlayer" target="_blank" rel="external">ExoPlayer</a><br><a href="https://github.com/google/gcm" target="_blank" rel="external">Google Cloud Messaging</a><br><a href="https://github.com/googlei18n/libphonenumber" target="_blank" rel="external">Google libphonenumber</a><br><a href="https://github.com/FasterXML/jackson" target="_blank" rel="external">Jackson</a> Java JSON-processor Core<br><a href="https://github.com/bluelinelabs/LoganSquare" target="_blank" rel="external">LoganSquare</a><br><a href="https://github.com/square/okhttp" target="_blank" rel="external">OkHttp</a><br><a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="external">RxJava</a><br><a href="https://github.com/ReactiveX/RxAndroid" target="_blank" rel="external">RxAndroid</a><br><a href="https://github.com/qos-ch/slf4j" target="_blank" rel="external">SLF4J</a><br>Vandal Software, LLC<br><a href="https://github.com/etsy/AndroidStaggeredGrid" target="_blank" rel="external">AndroidStaggeredGridView</a><br><a href="https://github.com/JakeWharton/ViewPagerIndicator" target="_blank" rel="external">ViewPagerIndicator</a></p>
<p>##3. facebook<br>ACE<br>achartengine<br>ACRA<br>actionbar-pulltorefresh<br>ActionBarSherloc<br>AES block cipher<br>android-async-http<br>android-circlebutton<br>android-gif-drawable<br>android-support-v4-perferencefragment<br>Android Open Source Project<br>android websockets<br>antlr<br>Apache Commons Codec<br>Apache Commons Exec<br>Apache Commons Lang<br>Apache Commons Logging<br>Apache Commons Math<br>Apache Harmony<br>Apache httpminme<br>Apache JAMES Mime4J<br>Apache Lucene<br>Apache Thrift<br>Apache HttpComments Client<br>Apache HttpComments Core<br>appirater<br>apps-for-android<br>ASM<br>assertj<br>atinject<br>base64coer<br>bitvect<br>Boost<br>bsdiff<br>c-ares<br>Code Generation Library(cglib)<br>chromecast-java-api<br>chrometophone<br>chromimum<br>commons-cli<br>custommenu<br>cwac-camera<br>cwac-touchlist<br>dagger<br>dependency-shot<br>dex-method-counts<br>DisLruCache<br>djinni<br>dnsjava<br>double-conversion<br>DynamicGrid<br>ejs<br>encode<br>ExoPlayer<br>expat<br>ffmpeg<br>FFT by mark Oleson<br>FFT by Takuya Ooura<br>flatbuffers<br>getRoundedCornerBitmap<br>giflib<br>Google Breakpad<br>google-gson<br>google-guice<br>JetBrains Grammar-Kit<br>guava-libraries<br>gyp<br>Hamcrest<br>horizontal-listview<br>http-parser<br>icu4j<br>ieeehalfprecision<br>ImageViewZoom<br>intellij-community<br>Jackson Core<br>Jackson Annotations<br>Jackson Databind<br>JacksonForSmile<br>JacksonDatatypeGuava<br>java-diff-utils<br>java-websocket<br>javawriter<br>jcodec<br>joda-time<br>json-simple<br>JSON-java<br>JSONPath<br>jsr-305<br>libevent<br>libjingle<br>libjpeg-turbo<br>libjpeg<br>libphonenumber<br>libpng<br>libsrtp<br>libuuid<br>…</p>
<p>##4 .Slack<br><a href="https://github.com/tongcpp/PullToRefresh-PinnedSection-ListView" target="_blank" rel="external">PinnedSe<br>ctionListView</a><br>HybiParser<br>FloatLabelLayout<br>Mixpanel<br><a href="https://github.com/google/guava" target="_blank" rel="external">Guava</a><br><a href="https://github.com/JodaOrg/joda-time" target="_blank" rel="external">Joda-Time</a><br><a href="https://github.com/square/dagger" target="_blank" rel="external">Dagger</a><br><a href="https://github.com/JakeWharton/butterknife" target="_blank" rel="external">Butterknife</a><br><a href="https://github.com/square/otto" target="_blank" rel="external">Otto</a><br><a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="external">RxJava</a><br><a href="https://github.com/ReactiveX/RxAndroid" target="_blank" rel="external">RxAndroid</a><br><a href="https://github.com/JakeWharton/timber" target="_blank" rel="external">Timber</a><br><a href="https://github.com/square/picasso" target="_blank" rel="external">Picasso</a><br><a href="https://github.com/google/gson" target="_blank" rel="external">Gson</a><br><a href="https://github.com/square/okhttp" target="_blank" rel="external">OkHttp</a><br><a href="https://github.com/square/okio" target="_blank" rel="external">Okio</a><br><a href="https://github.com/Flipboard/bottomsheet" target="_blank" rel="external">BottomSheet</a><br><a href="https://github.com/chrisjenx/Calligraphy" target="_blank" rel="external">Calligraphy</a><br><a href="https://github.com/chrisbanes/PhotoView" target="_blank" rel="external">PhotoView</a><br><a href="https://github.com/makovkastar/FloatingActionButton" target="_blank" rel="external">FloatingActionButton</a><br><a href="https://github.com/splitwise/TokenAutoComplete" target="_blank" rel="external">TokenAutoComplete</a></p>
<p>##5. Quip</p>
<p>##6. Trello</p>
<p>###。。。待完善</p>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Gradle in Android Studio (3) - 项目中的Gradle]]></title>
    <link href="http://hanks.xyz/2015/09/14/Gradle_in_Android_Studio_(3)_-_%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84Gradle/"/>
    <id>http://hanks.xyz/2015/09/14/Gradle_in_Android_Studio_(3)_-_项目中的Gradle/</id>
    <published>2015-09-14T13:51:00.000Z</published>
    <updated>2015-12-06T03:19:40.301Z</updated>
    <content type="html"><![CDATA[<p>#Gradle in Android Studio</p>
<blockquote>
<p>转载请注明出处 :  <a href="http://blog.csdn.net/hpu_zyh/article/details/48447539" target="_blank" rel="external">http://blog.csdn.net/hpu_zyh/article/details/48447539</a><br><a href="http://blog.csdn.net/hpu_zyh" target="_blank" rel="external">博客主页</a>  |   <a href="http://www.jianshu.com/users/3e9f552e6ba7" target="_blank" rel="external">简书</a>  |  <a href="http://www.zhihu.com/people/yuhan-zhang-36" target="_blank" rel="external">知乎</a>  |  <a href="http://weibo.com/u/2359002991" target="_blank" rel="external">微博</a>  |  <a href="https://github.com/hanks-zyh" target="_blank" rel="external">github</a></p>
</blockquote>
<hr>
<p><a href="https://www.youtube.com/watch?v=cD7NPxuuXYY" target="_blank" rel="external"><img src="http://gradle.wpengine.netdna-cdn.com/wp-content/uploads/2015/03/GradleLogoReg.png" alt=""></a></p>
<p>Gradle (<strong>谷瑞豆</strong>) <a href="http://gradle.org/" target="_blank" rel="external">官网</a>,  点击上面图片看Google官方视频 <strong>Introducing Gradle (Ep 2, Android Studio)</strong> in Youtube<br><a href="http://blog.csdn.net/hpu_zyh/article/details/47430623" target="_blank" rel="external">来自Gradle的hello world</a></p>
<p>##Android Studio中的Gradle<br>当创建一个项目后,Android studio 会自动创建以下的目录<br><img src="http://img.blog.csdn.net/20150914214416965" alt="这里写图片描述"><br>一般情况下,我们只修改<code>app</code> moudle下的build.gradle即可满足使用</p>
<p>android studio 目录结构<br><img src="http://img.blog.csdn.net/20150914214430893" alt="这里写图片描述"></p>
<p>##库管理机制</p>
<p>当创建一个项目时,生成以下的基本信息: <code>app/build.gradle</code><br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: <span class="string">'com.android.application'</span></span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">22</span>             <span class="comment">// 这里需要按照自己本机下载的版本填写, 如果本机没有下载,会报错</span></span><br><span class="line">    buildToolsVersion <span class="string">"23.0.0 rc2"</span>   <span class="comment">// Error:failed to find target android-22 : E:\android-sdk</span></span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">"hanks.com.myapplication"</span> <span class="comment">//应用包名</span></span><br><span class="line">        minSdkVersion <span class="number">15</span>                        </span><br><span class="line">        targetSdkVersion <span class="number">22</span>                     </span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        versionName <span class="string">"1.0"</span></span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="keyword">false</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">dependencies</span> &#123; <span class="comment">//库依赖</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">fileTree</span>(dir: <span class="string">'libs'</span>, <span class="keyword">include</span>: [<span class="string">'*.jar'</span>]) <span class="comment">//引用本地的libs目录下的所以jar包</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:appcompat-v7:22.2.0'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>当需要添加一些第三方库时, 直接在<code>dependencies</code>添加引用<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="comment">// Google Play Services</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.google.android.gms:play-services:7.8.0'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Support Libraries</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:appcompat-v7:23.0.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:cardview-v7:23.0.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:design:23.0.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:gridlayout-v7:23.0.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:leanback-v17:23.0.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:mediarouter-v7:23.0.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:palette-v7:23.0.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:recyclerview-v7:23.0.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:support-annotations:23.0.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:support-v13:23.0.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:support-v4:23.0.0'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">Note:</span> these libraries require the "Google Repository" and "Android Repository"</span></span><br><span class="line">    <span class="comment">//       to be installed via the SDK manager.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>添加引用后,Android Studio会提示我们<code>Sync</code>, 然后会自动从远程库中下载我们引用的库文件,本地已经缓存过的话会直接引用本地的,而不用下载</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="function"><span class="title">files</span><span class="params">(<span class="string">'libs/gson-2.3.1.jar'</span>)</span></span>                <span class="comment">//引用单个jar</span></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">compile <span class="function"><span class="title">fileTree</span><span class="params">(include: [<span class="string">'*.jar'</span>], dir: <span class="string">'libs'</span>)</span></span>   <span class="comment">// 引用libs下的全部jar</span></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">compile <span class="function"><span class="title">project</span><span class="params">(<span class="string">':library:mylibrary'</span>)</span></span>               <span class="comment">// 引用library目录下的mylibrary</span></span><br></pre></td></tr></table></figure>
<p><a href="http://gradleplease.appspot.com" target="_blank" rel="external">查找Gradle依赖库的网站</a></p>
<p>可以通过<code>Android Studio</code>来添加引用, 比如引用 <code>recyclerview-v7</code><br><img src="http://img.blog.csdn.net/20150914212642484" alt="这里写图片描述"></p>
<p>使用<code>Gradle</code>来管理库,比以前引用<code>.jar</code>(只包含Java Code)方便的多,也不用到处复制库文件, 并且直接使用<code>Gradle</code>可以直接引用<code>aar</code>(包含库文件的Java Code, Resource, Assets, AndroidMenifest.xml)</p>
<p>##打包多个APK</p>
<p>利用Gradle的灵活性,你可以为同一个项目来配置,创建不同的版本, 默认有<code>debug</code>和<code>release</code>两种编译类型<br><strong>build variants</strong><br><img src="http://img.blog.csdn.net/20150914214312690" alt="这里写图片描述"></p>
<p><strong>product flavors</strong><br><img src="http://img.blog.csdn.net/20150914214329781" alt="这里写图片描述"></p>
<p>代码<br><img src="http://img.blog.csdn.net/20150914214350421" alt="这里写图片描述"></p>
<p>##MyApplication/build.gradle<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Top-level build file where you can add configuration options common to all sub-projects/modules.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">buildscript</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">dependencies</span> &#123;</span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.android.tools.build:gradle:1.2.3'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class="line">        <span class="comment">// in the individual module build.gradle files</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">allprojects</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><code>jcenter</code>远程仓库默认是<code>https</code>的,当使用代理时可能会在下载远程库时出现<code>Error:Cause: peer not authenticated</code>, 解决方案是 使用<code>http</code>代替 <code>https</code></p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">buildscript</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        jcenter&#123;</span><br><span class="line">            url <span class="string">"http://jcenter.bintray.com"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">dependencies</span> &#123;</span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.android.tools.build:gradle:1.2.3'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class="line">        <span class="comment">// in the individual module build.gradle files</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>gradle下载报同样的错, 以下解决方案<br><img src="http://img.blog.csdn.net/20150914214506277" alt="这里写图片描述"></p>
<h2 id="settings-gradle">settings.gradle</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">':app'</span></span><br></pre></td></tr></table></figure>
<p>当我们创建一个library时<br><img src="http://img.blog.csdn.net/20150914214441505" alt="这里写图片描述"><br>移动mylibrary目录后<br><img src="http://img.blog.csdn.net/20150914214454418" alt="这里写图片描述"></p>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Gradle in Android Studio (2) - 配置Gradle]]></title>
    <link href="http://hanks.xyz/2015/09/14/Gradle_in_Android_Studio_(2)_-_%E9%85%8D%E7%BD%AEGradle/"/>
    <id>http://hanks.xyz/2015/09/14/Gradle_in_Android_Studio_(2)_-_配置Gradle/</id>
    <published>2015-09-14T13:41:00.000Z</published>
    <updated>2015-12-06T03:19:40.289Z</updated>
    <content type="html"><![CDATA[<p>#配置Gradle</p>
<blockquote>
<p>来自<a href="https://developer.android.com/intl/zh-cn/tools/building/configuring-gradle.html#workBuildVariants" target="_blank" rel="external">AndroidDevelopers</a></p>
<p>转载请注明出处 :  <a href="http://blog.csdn.net/hpu_zyh/article/details/48447255" target="_blank" rel="external">http://blog.csdn.net/hpu_zyh/article/details/48447255</a><br><a href="http://blog.csdn.net/hpu_zyh" target="_blank" rel="external">博客主页</a>  |   <a href="http://www.jianshu.com/users/3e9f552e6ba7" target="_blank" rel="external">简书</a>  |  <a href="http://www.zhihu.com/people/yuhan-zhang-36" target="_blank" rel="external">知乎</a>  |  <a href="http://weibo.com/u/2359002991" target="_blank" rel="external">微博</a>  |  <a href="https://github.com/hanks-zyh" target="_blank" rel="external">github</a></p>
</blockquote>
<p>##建立基本配置<br>Android Studio创建的<code>project</code>包含一个顶级构建文件(build.gradle), 并且每个<code>module</code>都包含一个构建文件(build.gradle)。他们是纯文本文件,使用<strong>Groovy</strong>的语法来配置构建,使用Android的Gradle插件生成。在大多数情况下，你只需要修改<code>module</code>下的<code>build.gradle</code>。例如，在BuildSystemExample项目中的<code>module</code>的<code>build.gradle</code>如下所示：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: <span class="string">'com.android.application'</span></span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">19</span></span><br><span class="line">    buildToolsVersion <span class="string">"19.0.0"</span></span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        minSdkVersion <span class="number">8</span></span><br><span class="line">        targetSdkVersion <span class="number">19</span></span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        versionName <span class="string">"1.0"</span></span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="keyword">true</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">project</span>(<span class="string">":lib"</span>)</span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:appcompat-v7:19.0.1'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">fileTree</span>(dir: <span class="string">'libs'</span>, <span class="keyword">include</span>: [<span class="string">'*.jar'</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><code>apply plugin: &#39;com.android.application&#39;</code>表示将<code>Android plugin for Gradle</code>应用到编译。这增加了Android的特定的构建任务，以顶级的构建任务，使得<code>Android {...}</code>提供给指定的Android特定的构建选项元素。</p>
<p><code>android {...}</code>配置所有的Android特定的构建选项：</p>
<ul>
<li><code>compileSdkVersion</code> 用来编译的sdk的版本。</li>
<li><code>buildToolsVersion</code> 使用什么版本的编译工具。使用<code>SDK Manager</code>安装多个版本的编译工具。</li>
</ul>
<blockquote>
<p>注：请始终使用其主要版本号 &gt;= 您的编译目标和目标SDK的构建工具版本。</p>
</blockquote>
<ul>
<li><code>defaultConfig</code>配置的清单文件（AndroidManifest.xml）的一些设置。<code>defaultConfig</code>的配置将覆盖<code>AndroidManifest.xml</code>中的设置。<br><code>defaultConfig</code>元素指定的配置适用于所有的版本(<strong>build variants</strong>)，除非一个<code>build variants</code>的配置将覆盖一些值。</li>
<li><code>buildTypes</code>元素控制如何构建和打包应用程序。默认情况下，构建系统定义了两种版本类型：<code>debug</code>和<code>release</code>。<code>debug</code>类型包括debug标示，并且使用debug key密钥来进行签名。<code>release</code>类型默认情况下没有签名。在这个例子中，<code>release</code>版本使用<code>ProGuard</code>。</li>
<li><code>dependenceies</code>元素在<code>android</code>元素之外，Android的元素之后。此元素为依赖模块。后面章节介绍。</li>
</ul>
<blockquote>
<p>注意：当<code>build.gradle</code>文件有改动时，Android Studio需要同步构建配置。点击Android Studio黄色通知栏上的<code>SyncNow</code>。</p>
</blockquote>
<p><img src="http://img.blog.csdn.net/20150914213623929" alt="这里写图片描述"></p>
<p>##声明依赖</p>
<p>在这个例子中的<code>app</code>module声明了三个依赖：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="comment">// Module dependency</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">project</span>(<span class="string">":lib"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Remote binary dependency</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:appcompat-v7:19.0.1'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Local binary dependency</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">fileTree</span>(dir: <span class="string">'libs'</span>, <span class="keyword">include</span>: [<span class="string">'*.jar'</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>每个这些相关性进行说明。构建系统将所有编译依赖于编译类路径，并将它们包含在最终方案。</p>
<p>###模块依赖<br><code>app</code>模块依赖<code>lib</code>模块, <code>compile project(&quot;:lib&quot;)</code> 声明了BuildSystemExample对lib模块的依赖关系。当您生成应用程序模块，构建系统装配，包括lib模块。</p>
<p>###远程库依赖<br>该<code>app</code>程序和<code>lib</code>模块从Android支持库都使用<code>ActionBarActivity</code>类，所以这些模块依赖于它。<br>编译<code>com.android.support:appcompat-v7:19.0.1</code>通过指定的Maven声明对<code>Android Support Library</code>的19.0.1版本的依赖。 如果你的SDK安装没有这个包，下载并使用SDK管理器进行安装。</p>
<p>AndroidStudio为默认使用Maven的中央仓库项目。 （该配置被包括在顶层构建文件）。</p>
<p>###本地库依赖</p>
<p>如果您有需要本地库依赖模块，JAR文件，这些依赖关系复制到<code>&lt;moduleName&gt;/libs</code>中。<br><code>compile fileTree(dir: &#39;libs&#39;, include: [&#39;*.jar&#39;])</code>告诉构建系统依赖  <code>app/libs</code>的所有JAR文件，应该包含在编译类路径，并在最后的封装。</p>
<p>详细信息，请参见<a href="http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html" target="_blank" rel="external"> Dependency Management Basics</a>用户指南中。</p>
<p>##运行ProGuard</p>
<p>构建系统可以在构建过程中运行ProGuard混淆你的类。在BuildSystemExample，修改生成文件的应用程序模块运行的ProGuard的发布版本：<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">...</span></span><br><span class="line">android &#123;</span><br><span class="line">    <span class="attribute">...</span></span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="literal">true</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">...</span></span><br></pre></td></tr></table></figure></p>
<p><code>getDefaultProguardFile(&#39;proguard-android.txt&#39;)</code>获得从Android SDK安装的默认ProGuard的设置。 AndroidStudio 增加了模块特定的规则文件proguard-rules.pro的模块，在这里你可以添加自定义的ProGuard规则的根源。</p>
<p>##对包装标识应用程序ID</p>
<p>构建系统的<code>applicationID</code>属性是用来唯一标识应用程序包进行发布。应用程序ID设置在build.gradle文件的Andr​​oid的部分。<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">apply</span> plugin: <span class="string">'com.android.application'</span></span><br><span class="line"></span><br><span class="line">   android &#123;</span><br><span class="line">       <span class="title">compileSdkVersion</span> <span class="number">19</span></span><br><span class="line">       buildToolsVersion <span class="string">"19.1"</span></span><br><span class="line"></span><br><span class="line">   defaultConfig &#123;</span><br><span class="line">       <span class="title">applicationId</span> <span class="string">"com.example.my.app"</span></span><br><span class="line">       minSdkVersion <span class="number">15</span></span><br><span class="line">       targetSdkVersion <span class="number">19</span></span><br><span class="line">       versionCode <span class="number">1</span></span><br><span class="line">       versionName <span class="string">"1.0"</span></span><br><span class="line">   &#125;</span><br><span class="line">   ...</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>注意：的applicationID仅指定在build.gradle文件，而不是在AndroidManifest.xml文件。</p>
</blockquote>
<p>当使用<code>build variants</code>，构建系统为每个<code>product flavors</code>指定的build types生成不同的后缀ID。<br> <figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">productFlavors</span> &#123;</span><br><span class="line">     <span class="title">pro</span> &#123;</span><br><span class="line">         <span class="title">applicationId</span> = <span class="string">"com.example.my.pkg.pro"</span></span><br><span class="line">     &#125;</span><br><span class="line">     free &#123;</span><br><span class="line">         <span class="title">applicationId</span> = <span class="string">"com.example.my.pkg.free"</span></span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> buildTypes &#123;</span><br><span class="line">     <span class="title">debug</span> &#123;</span><br><span class="line">         <span class="title">applicationIdSuffix</span> <span class="string">".debug"</span></span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> ....</span><br></pre></td></tr></table></figure></p>
<p>包名必须在manifest文件中指定。这是用在你的源代码来引用您的<code>R</code>文件，并解决任何相关<code>activity</code> <code>service</code>的注册。<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span>=<span class="string">"com.example.app"</span>&gt;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>注意：如果有多个清单（例如，<code>product flavors</code>为某个build type配置了不同的manifest），包名是可选的体现。如果在这些清单规定，包的名称必须与在清单在<code>src/main/</code>文件夹中指定的包名。</p>
</blockquote>
<p>有关构建文件详细信息，请参阅<a href="http://blog.csdn.net/hpu_zyh/article/details/48447081" target="_blank" rel="external">构建系统</a>概述。</p>
<p>##配置签名设置</p>
<p><code>debug</code>和<code>release</code>版本不同的应用程序是否能够在安全设备，以及如何将APK进行签名进行调试。构建系统签署的调试版本使用已知的凭据，以避免密码提示在构建时默认密钥和证书。构建系统没有签字的发行版，除非你明确地定义了签约配置此版本。如果您还没有<code>release</code>版本的key，你可以生成一个,参考<a href="https://developer.android.com/tools/publishing/app-signing.html" target="_blank" rel="external">Signing your Applications</a>。</p>
<p>##使用<strong>build variants</strong><br>本节将介绍 构建系统帮助你从一个单一的项目中创建不同的版本。如果你有一个演示版本,有付费版本，你要在<code>Google Paly</code>针对不同的设备分发多个APK,这个很有用。</p>
<p>构建系统使用 <code>product flavors</code>来创建的不同的产品版本。您的应用程序的每一个产品版本可以有不同的功能或设备的要求。构建系统还使用<code>build type</code>构建和打包不同的设置到不同的版本。每个<code>product flavor</code>和<code>build type</code>组合形成一个构建变量。编译系统会生成不同的APK版本。</p>
<p>###<strong>Build variants</strong></p>
<p>这个例子项目包括两个默认生成（debug和release）和两个类型（demo和full）的。要了解有关构建变种高级应用的详细信息，请参阅<a href="#">构建系统</a>概述。</p>
<p>####<strong>Product flavors</strong></p>
<p>要创建您的应用程序不同的产品版本：</p>
<ol>
<li>在<code>build.gradle</code>文件中定义<code>product flavors</code></li>
<li>为每个<code>flavors</code>添加不同的设置。</li>
<li>添加香精的具体来源，您的项目。</li>
</ol>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">...</span></span><br><span class="line">android &#123;</span><br><span class="line">    <span class="attribute">...</span></span><br><span class="line">    defaultConfig &#123; <span class="attribute">...</span> &#125;</span><br><span class="line">    signingConfigs &#123; <span class="attribute">...</span> &#125;</span><br><span class="line">    buildTypes &#123; <span class="attribute">...</span> &#125;</span><br><span class="line">    productFlavors &#123;</span><br><span class="line">        demo &#123;</span><br><span class="line">            applicationId <span class="string">"com.buildsystemexample.app.demo"</span></span><br><span class="line">            versionName <span class="string">"1.0-demo"</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="literal">full</span> &#123;</span><br><span class="line">            applicationId <span class="string">"com.buildsystemexample.app.full"</span></span><br><span class="line">            versionName <span class="string">"1.0-full"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">...</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：要在多APK支持分发您的应用程序到<strong>Google Play</strong>，分配相同的包名称为所有变体，并给每个变体的不同VERSIONCODE。要分发您的应用程序在谷歌播放单独的应用程序的不同变种，指定不同的包名给每个变量。</p>
</blockquote>
<p>##针对每个<code>flavor</code>添加其他目录</p>
<p>现在，您创建源文件夹，并添加一个SecondActivity每个味道。要创建演示味源目录结构：</p>
<ol>
<li>在项目面板中，展开<code>BuildSystemExample</code>，然后展开应用程序目录。</li>
<li>右键单击src目录下的应用程序，并选择  <strong>New &gt; Directory</strong>.。<br>创建demo作为新目录的名称，然后单击确定。<br>类似地，创建以下目录：</li>
</ol>
<ul>
<li>app/src/demo/java</li>
<li>app/src/demo/res</li>
<li>app/src/demo/res/layout</li>
<li>app/src/demo/res/values<br>由此产生的目录结构如下图1所示。<br><img src="http://img.blog.csdn.net/20150914213847039" alt="这里写图片描述"></li>
</ul>
<p>####添加一个新的活动，各味</p>
<p>要SecondActivity添加到<code>demo</code>flavors：</p>
<ol>
<li>创建一个新的Activity。</li>
<li>选择<strong>Blank Activity</strong>，然后单击<strong>Next</strong>。</li>
<li>输入<code>SecondActivity</code>作为该Activity的名称。</li>
<li>输入<code>com.buildsystemexample.app</code>作为包名，然后单击<strong>Finish</strong>。</li>
<li>右键单击<em>app/src/demo</em>的java目录，并选择<strong>New&gt; Package</strong>。</li>
<li>输入<code>com.buildsystemexample.app</code>作为包名，然后单击<strong>OK</strong>。</li>
<li>拖动<code>SecondActivity</code>到 <em>app/src/demo/java</em>下。</li>
<li><p>接受默认值，然后单击<strong>Refactor</strong>。<br>要增加对SecondActivity布局和一个字符串资源到<code>demo</code> flavors：</p>
</li>
<li><p>从 <em> app/src/main/res/layout</em>拖动<code>activity_second.xml</code>到<em>app/src/demo/res/layout</em>。</p>
</li>
<li>接受出现的窗口中的默认值，然后单击<strong>OK</strong>。</li>
<li>复制的strings.xml从应用程序/ src目录/主/ RES到应用程序/ src目录/演示/资源。</li>
<li>取代的strings.xml具有以下的新副本的内容：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"hello_world"</span>&gt;</span>Demo version only.<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>现在，通过复制demo的源码来创建<code>full</code> flavors：</p>
<ol>
<li>在项目面板中，右键点击下应用程序/ src目录demo目录，然后选择复制。</li>
<li>在src /目录下用鼠标右键单击下的应用程序/然后选择粘贴。</li>
<li>在出现的窗口中，输入“满”作为新的名称，然后单击确定。</li>
<li>具有下列下的src /全速/ RES /值替换strings.xml中的内容：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">string</span> <span class="attribute">name</span>=<span class="value">"hello_world"</span>&gt;</span>This is the full version!<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<blockquote>
<p>注：从这一点上，可以独立开发SecondActivity内部各的味道。例如，你可以在韵味十足的增加更多的功能到这个活动。</p>
</blockquote>
<p>检查设置的<code>product flavors</code>生效,打开Android studio的<strong>Build Variants</strong>面板,如下图<br><img src="http://img.blog.csdn.net/20150914213913163" alt="这里写图片描述"></p>
<p>图2.构建变体面板。</p>
<p>####从<strong>MainActivity</strong>启动一个<code>flavor-specific</code>Activity</p>
<p>由于香味比活度（SecondActivity）有两种口味相同的包名称和活动名称，你可以从主活动，这是通用于所有的口味启动它。要修改的主要活动：</p>
<ol>
<li><p>编辑<code>activity_main.xml</code>并添加一个按钮：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">...</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;<span class="title">Button</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/button2"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"@string/button2"</span></span><br><span class="line">        <span class="attribute">android:onClick</span>=<span class="value">"onButton2Clicked"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>下面的代码添加到<code>MainActivity</code>的<code>onButton2Clicked</code>方法：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onButton2Clicked</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">    Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, SecondActivity.<span class="keyword">class</span>);</span><br><span class="line">    startActivity(intent);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>编辑应用程序的<code>Manifest</code>文件引用<code>SecondActivity</code>：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">manifest</span> <span class="attribute">...</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">application</span> <span class="attribute">...</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">        <span class="tag">&lt;<span class="title">activity</span></span><br><span class="line">            <span class="attribute">android:name</span>=<span class="value">"com.buildsystemexample.app.SecondActivity"</span></span><br><span class="line">            <span class="attribute">android:label</span>=<span class="value">"@string/title_activity_second"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>####构建类型</p>
<p>构建类型代表每个应用程序包生成编译包装的版本。默认情况下，提供了<code>debug</code>和<code>release</code>版本的类型。</p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    defaultConfig &#123; ... &#125;</span><br><span class="line">    signingConfigs &#123; ... &#125;</span><br><span class="line">    buildTypes &#123; ... &#125;</span><br><span class="line">    productFlavors <span class="decorator">&#123;...&#125;</span></span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="literal">false</span></span><br><span class="line">            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'</span><br><span class="line">        &#125;</span><br><span class="line">         debug &#123;</span><br><span class="line">            debuggable <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：虽然只有<code>release</code>类型出现在默认<code>build.gradle</code>文件，但是每个版本都会生成<code>release</code>和<code>debug</code>版本。</p>
</blockquote>
<p>在这个例子中，该<code>product flavors</code>和<code>build types</code>创建以下<code>build variants</code>：</p>
<ul>
<li>demoDebug</li>
<li>demoRelease</li>
<li>fullDebug</li>
<li>fullRelease</li>
</ul>
<p>要构建这个例子中，点击Android Studio中<strong>Build</strong>菜单选项，或调用命令行的 <code>assemble</code>任务。</p>
<blockquote>
<p>注：<strong> Build &gt; Make Project</strong> 选项编译自上次编译修改过整个项目的所有源文件。<strong>Build &gt; Rebuild Project</strong>选项重新编译项目中的所有源文件。</p>
</blockquote>
<p>每个<code>build variant</code>产生单独的文件夹。</p>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Gradle in Android Studio (1) - 构建系统概述]]></title>
    <link href="http://hanks.xyz/2015/09/14/Gradle_in_Android_Studio_(1)_-_%E6%9E%84%E5%BB%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/"/>
    <id>http://hanks.xyz/2015/09/14/Gradle_in_Android_Studio_(1)_-_构建系统概述/</id>
    <published>2015-09-14T13:32:00.000Z</published>
    <updated>2015-12-06T03:19:40.273Z</updated>
    <content type="html"><![CDATA[<p>#构建系统概述</p>
<blockquote>
<p>Android构建系统是用于构建，测试，运行和打包app的工具包。构建系统可以集成到Android Studio菜单中,也可以单独使用命令行运行。构建系统的特点：</p>
<ul>
<li>自定义，配置和扩展构建过程;</li>
<li>为同一个<code>project</code>或者<code>moudles</code>,创建多个不同的APP;</li>
<li>重用代码和资源。</li>
</ul>
</blockquote>
<p><a href="https://developer.android.com/intl/zh-cn/sdk/installing/studio-build.html" target="_blank" rel="external">原文地址</a></p>
<blockquote>
<p>转载请注明出处 :  <a href="http://blog.csdn.net/hpu_zyh/article/details/48447081" target="_blank" rel="external">http://blog.csdn.net/hpu_zyh/article/details/48447081</a><br><a href="http://blog.csdn.net/hpu_zyh" target="_blank" rel="external">博客主页</a>  |   <a href="http://www.jianshu.com/users/3e9f552e6ba7" target="_blank" rel="external">简书</a>  |  <a href="http://www.zhihu.com/people/yuhan-zhang-36" target="_blank" rel="external">知乎</a>  |  <a href="http://weibo.com/u/2359002991" target="_blank" rel="external">微博</a>  |  <a href="https://github.com/hanks-zyh" target="_blank" rel="external">github</a></p>
</blockquote>
<p>##构建过程<br>构建<code>.apk</code>文件的过程涉及到许多工具,并且产生一些中间文件。如果您正在使用Android Studio，每次执行你的<code>project</code>或者<code>module</code>的 <code>Gradle build task</code> 都可以看到完整的构建过程。构建过程是非常灵活的,大部分的构建过程都是可配置和可扩展的。下图描述了构建过程中涉及的一些工具和构建流程：<br><img src="http://img.blog.csdn.net/20150914213150128" alt="这里写图片描述"></p>
<p>一个典型的构建过程的一般如上图所示。构建系统读取配置的<code>product flavors</code> <code>build types</code> <code>dependencies</code>,然后合并所有的资源。如果不同的文件夹中包含相同的资源名称或设置，下面覆盖的优先顺序是：<code>dependencies</code>覆盖<code>build types</code>， <code>build types</code>覆盖<code>product flavors</code>，<code>product flavors</code>覆盖<code>源代码目录</code>。</p>
<ul>
<li><code>Android的资产打包工具（AAPT）</code>把你的应用程序资源文件进行编译，如<code>AndroidManifest.xml</code>文件和一些<code>XML文件</code>，<code>R.java</code>文件是由你的Java代码中引用的资源自动生成的。</li>
<li><code>aidl工具</code>，将<code>.aidl接口</code>转换成<code>Java接口</code>。</li>
<li>所有的Java代码，包括<code>R.java</code>和<code>.aidl文件</code>，由Java编译器编译成<code>.class文件</code>。</li>
<li><code>DEX工具</code>转换<code>.class文件</code>的Dalvik字节码。使用的<code>第三方库</code>和<code>.class文件</code>也被转换成<code>.dex文件</code>，以便它们可以被打包成最终的<code>.apk文件</code>。</li>
<li>所有非编译资源（如图片），已编译的资源，以及<code>.dex文件</code>被发送到<code>apkbuilder工具</code>打包成一个apk文件。</li>
<li>一旦apk文件生成，它在安装之前需要使用debug或者release key进行签名 。</li>
<li>最后，应用程序被签名后，使用<code>zipalign工具</code>压缩<code>.apk文件</code>, 减少最终的.apk所占空间<blockquote>
<p>注：应用程序被限制在64K方法参考限值。如果您的应用程序达到此限制，构建过程输出以下错误信息：</p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Unable</span> to execute dex: <span class="keyword">method</span> <span class="type">ID</span> <span class="keyword">not</span> <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">0xffff</span>]: <span class="number">65536</span>.</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<p>为了避免这种错误，请参阅构建应用程序与在<a href="#">65K方法</a>。</p>
<p>##构建输出<br>构建生成APK每个 <code>build variant</code> 在<code>app/build</code>文件夹<code>app/build/outputs/apk/</code>目录中包含一个名为<code>app-&lt;flavor&gt;-&lt;buildtype&gt;.apk</code>的 .apk文件;例如, <code>app-full-release.apk</code> 和 <code>app-demo-debug.apk</code>.</p>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[用Android Studio进行NDK开发(简化流程)]]></title>
    <link href="http://hanks.xyz/2015/09/02/%E7%94%A8Android_Studio%E8%BF%9B%E8%A1%8CNDK%E5%BC%80%E5%8F%91(%E7%AE%80%E5%8C%96%E6%B5%81%E7%A8%8B)/"/>
    <id>http://hanks.xyz/2015/09/02/用Android_Studio进行NDK开发(简化流程)/</id>
    <published>2015-09-02T14:32:00.000Z</published>
    <updated>2015-12-06T03:19:40.557Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>开发环境<br><strong>Android Studio 1.3 RC3</strong><br><strong>android-ndk-r10e</strong></p>
<p>转载请注明出处 :  <a href="http://blog.csdn.net/hpu_zyh/article/details/48184581" target="_blank" rel="external">http://blog.csdn.net/hpu_zyh/article/details/48184581</a><br><a href="http://blog.csdn.net/hpu_zyh" target="_blank" rel="external">博客主页</a>  |   <a href="http://www.jianshu.com/users/3e9f552e6ba7" target="_blank" rel="external">简书</a>  |  <a href="http://www.zhihu.com/people/yuhan-zhang-36" target="_blank" rel="external">知乎</a>  |  <a href="http://weibo.com/u/2359002991" target="_blank" rel="external">微博</a>  |  <a href="https://github.com/hanks-zyh" target="_blank" rel="external">github</a></p>
</blockquote>
<p>###1. 准备NDK环境<br>我这里下载的是<code>android-ndk-r10e</code><br>进入Android studio 的 <code>Project Structure</code>-&gt;<code>SDK location</code> -&gt; <code>Android NDK location</code>, 设置<strong>android-ndk-r10e</strong>的路径, 配置好即可进行开发了(就是这么简单)<br><img src="http://img.blog.csdn.net/20150902221536713" alt="这里写图片描述"></p>
<p>###2. NDK开发</p>
<p>####创建工程,配置NDK<br>在Android studio中创建一个新的Android项目, 修改项目下的<code>build.gradle</code><br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: <span class="string">'com.android.application'</span></span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">22</span></span><br><span class="line">    buildToolsVersion <span class="string">"23.0.0 rc2"</span></span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">"hanks.com.hkjni"</span></span><br><span class="line">        minSdkVersion <span class="number">15</span></span><br><span class="line">        targetSdkVersion <span class="number">22</span></span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        versionName <span class="string">"1.0"</span></span><br><span class="line"></span><br><span class="line">        ndk&#123;</span><br><span class="line">            moduleName <span class="string">"hkjni"</span>   <span class="comment">//生成的so名字</span></span><br><span class="line">            abiFilters <span class="string">"armeabi"</span>, <span class="string">"armeabi-v7a"</span>, <span class="string">"x86"</span>  <span class="comment">//输出指定三种abi体系结构下的so库。</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="keyword">false</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">fileTree</span>(dir: <span class="string">'libs'</span>, <span class="keyword">include</span>: [<span class="string">'*.jar'</span>])</span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:appcompat-v7:22.2.0'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>编写     <code>MainActivity</code><br><img src="http://img.blog.csdn.net/20150902223647139" alt="这里写图片描述"></p>
<p>在<code>src\main</code>目录下创建 <code>jni</code>目录<br>创建需要调用的 <code>c语言</code>文件<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">"jni.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">JNIEXPORT jstring JNICALL <span class="title">Java_hanks_com_hkjni_MainActivity_getHello</span> <span class="params">(JNIEnv * env , jobject obj)</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> * str = <span class="string">"from hkcode"</span>;</span><br><span class="line">    <span class="keyword">return</span> (*env)-&gt;NewStringUTF(env,str);</span><br><span class="line">    <span class="comment">//如果不知道这个方法名怎么写可以通过 javah 生成</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="http://img.blog.csdn.net/20150902222115560" alt="这里写图片描述"></p>
<p><img src="http://img.blog.csdn.net/20150902222221488" alt="这里写图片描述"></p>
<p><strong>下面就可以直接运行了!!!(感觉比以前轻松好多啊)</strong></p>
<p>   如果不知道这个方法名怎么写可以通过 <strong>javah</strong>命令 生成,然后<strong>复制</strong>即可, 知道命名规则的话直接编写 .c 文件也可以<br>   <img src="http://img.blog.csdn.net/20150902222137395" alt="这里写图片描述"></p>
<p><img src="http://img.blog.csdn.net/20150902222237008" alt="这里写图片描述">   </p>
<hr>
<p>以前用Eclipse还有编辑 <code>Android.mk</code>文件,现在Android studio 自动生成了</p>
<p><img src="http://img.blog.csdn.net/20150902222152383" alt="这里写图片描述"></p>
]]></content>
    <summary type="html">
    <![CDATA[ ]]>
    
    </summary>
    
      <category term="Android" scheme="http://hanks.xyz/tags/Android/"/>
    
  </entry>
  
</feed>
